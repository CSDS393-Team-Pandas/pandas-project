{"version":3,"file":"ej2-excel-export.umd.min.js","sources":["../src/cell-style.js","../src/cell.js","../src/column.js","../src/row.js","../src/worksheets.js","../src/worksheet.js","../src/image.js","../src/value-formatter.js","../src/csv-helper.js","../src/blob-helper.js","../src/auto-filters.js","../src/workbook.js"],"sourcesContent":["/**\n * CellStyle class\n * @private\n */\nvar CellStyle = /** @class */ (function () {\n    function CellStyle() {\n        this.numFmtId = 0;\n        this.backColor = 'none';\n        this.fontName = 'Calibri';\n        this.fontSize = 10.5;\n        this.fontColor = '#000000';\n        this.italic = false;\n        this.bold = false;\n        this.underline = false;\n        this.wrapText = false;\n        this.hAlign = 'general';\n        this.vAlign = 'bottom';\n        this.indent = 0;\n        this.rotation = 0;\n        this.numberFormat = 'GENERAL';\n        this.type = 'datetime';\n        this.borders = new Borders();\n        this.isGlobalStyle = false;\n    }\n    return CellStyle;\n}());\nexport { CellStyle };\n/**\n * Font Class\n * @private\n */\nvar Font = /** @class */ (function () {\n    function Font() {\n        this.sz = 10.5;\n        this.name = 'Calibri';\n        this.u = false;\n        this.b = false;\n        this.i = false;\n        this.color = 'FF000000';\n    }\n    return Font;\n}());\nexport { Font };\n/**\n * CellXfs class\n * @private\n */\nvar CellXfs = /** @class */ (function () {\n    function CellXfs() {\n    }\n    return CellXfs;\n}());\nexport { CellXfs };\n/**\n * Alignment class\n * @private\n */\nvar Alignment = /** @class */ (function () {\n    function Alignment() {\n    }\n    return Alignment;\n}());\nexport { Alignment };\n/**\n * CellStyleXfs class\n * @private\n */\nvar CellStyleXfs = /** @class */ (function () {\n    function CellStyleXfs() {\n    }\n    return CellStyleXfs;\n}());\nexport { CellStyleXfs };\n/**\n * CellStyles class\n * @private\n */\nvar CellStyles = /** @class */ (function () {\n    function CellStyles() {\n        this.name = 'Normal';\n        this.xfId = 0;\n    }\n    return CellStyles;\n}());\nexport { CellStyles };\n/**\n * NumFmt class\n * @private\n */\nvar NumFmt = /** @class */ (function () {\n    function NumFmt(id, code) {\n        this.numFmtId = id;\n        this.formatCode = code;\n    }\n    return NumFmt;\n}());\nexport { NumFmt };\n/**\n * Border class\n * @private\n */\nvar Border = /** @class */ (function () {\n    function Border(mLine, mColor) {\n        this.lineStyle = mLine;\n        this.color = mColor;\n    }\n    return Border;\n}());\nexport { Border };\n/**\n * Borders class\n * @private\n */\nvar Borders = /** @class */ (function () {\n    function Borders() {\n        this.left = new Border('none', '#FFFFFF');\n        this.right = new Border('none', '#FFFFFF');\n        this.top = new Border('none', '#FFFFFF');\n        this.bottom = new Border('none', '#FFFFFF');\n        this.all = new Border('none', '#FFFFFF');\n    }\n    return Borders;\n}());\nexport { Borders };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Worksheet class\n * @private\n */\nvar Cell = /** @class */ (function () {\n    function Cell() {\n    }\n    return Cell;\n}());\nexport { Cell };\n/**\n * Cells class\n * @private\n */\nvar Cells = /** @class */ (function (_super) {\n    __extends(Cells, _super);\n    function Cells() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.add = function (cell) {\n            var inserted = false;\n            var count = 0;\n            for (var _i = 0, _a = _this; _i < _a.length; _i++) {\n                var c = _a[_i];\n                if (c.index === cell.index) {\n                    _this[count] = cell;\n                    inserted = true;\n                }\n                count++;\n            }\n            if (!inserted) {\n                _this.push(cell);\n            }\n        };\n        return _this;\n    }\n    return Cells;\n}(Array));\nexport { Cells };\n","/**\n * Column class\n * @private\n */\nvar Column = /** @class */ (function () {\n    function Column() {\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Row class\n * @private\n */\nvar Row = /** @class */ (function () {\n    function Row() {\n    }\n    return Row;\n}());\nexport { Row };\n/**\n * Rows class\n * @private\n */\nvar Rows = /** @class */ (function (_super) {\n    __extends(Rows, _super);\n    function Rows() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.add = function (row) {\n            _this.push(row);\n        };\n        return _this;\n    }\n    return Rows;\n}(Array));\nexport { Rows };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Worksheets class\n * @private\n */\nvar Worksheets = /** @class */ (function (_super) {\n    __extends(Worksheets, _super);\n    function Worksheets() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Worksheets;\n}(Array));\nexport { Worksheets };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Worksheet class\n * @private\n */\nvar Worksheet = /** @class */ (function () {\n    function Worksheet() {\n        this.isSummaryRowBelow = true;\n        this.showGridLines = true;\n        this.enableRtl = false;\n    }\n    return Worksheet;\n}());\nexport { Worksheet };\n/**\n * Hyperlink class\n * @private\n */\nvar HyperLink = /** @class */ (function () {\n    function HyperLink() {\n    }\n    return HyperLink;\n}());\nexport { HyperLink };\n/**\n * Grouping class\n * @private\n */\nvar Grouping = /** @class */ (function () {\n    function Grouping() {\n    }\n    return Grouping;\n}());\nexport { Grouping };\n/**\n * FreezePane class\n * @private\n */\nvar FreezePane = /** @class */ (function () {\n    function FreezePane() {\n    }\n    return FreezePane;\n}());\nexport { FreezePane };\n/**\n * MergeCell\n * @private\n */\nvar MergeCell = /** @class */ (function () {\n    function MergeCell() {\n    }\n    return MergeCell;\n}());\nexport { MergeCell };\n/**\n * MergeCells class\n * @private\n */\nvar MergeCells = /** @class */ (function (_super) {\n    __extends(MergeCells, _super);\n    function MergeCells() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.add = function (mergeCell) {\n            var inserted = false;\n            var count = 0;\n            for (var _i = 0, _a = _this; _i < _a.length; _i++) {\n                var mCell = _a[_i];\n                if (MergeCells.isIntersecting(mCell, mergeCell)) {\n                    var intersectingCell = new MergeCell();\n                    intersectingCell.x = Math.min(mCell.x, mergeCell.x);\n                    intersectingCell.y = Math.min(mCell.Y, mergeCell.y);\n                    intersectingCell.width = Math.max(mCell.Width + mCell.X, mergeCell.width + mergeCell.x);\n                    intersectingCell.height = Math.max(mCell.Height + mCell.Y, mergeCell.height + mergeCell.y);\n                    intersectingCell.ref = (_this[count].ref.split(':')[0]) + ':' + (mergeCell.ref.split(':')[1]);\n                    _this[count] = intersectingCell;\n                    mergeCell = intersectingCell;\n                    inserted = true;\n                }\n                count++;\n            }\n            if (!inserted) {\n                _this.push(mergeCell);\n            }\n            return mergeCell;\n        };\n        return _this;\n    }\n    MergeCells.isIntersecting = function (base, compare) {\n        return (base.x <= compare.x + compare.width)\n            && (compare.x <= base.x + base.width)\n            && (base.y <= compare.y + compare.height)\n            && (compare.y <= base.y + base.height);\n    };\n    return MergeCells;\n}(Array));\nexport { MergeCells };\n","/**\n * Image class\n * @private\n */\nvar Image = /** @class */ (function () {\n    function Image() {\n    }\n    return Image;\n}());\nexport { Image };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\n// import { IValueFormatter } from '../base/interface';\n/**\n * ValueFormatter class to globalize the value.\n * @private\n */\nvar ValueFormatter = /** @class */ (function () {\n    function ValueFormatter(cultureName) {\n        this.intl = new Internationalization();\n        // if (!isNullOrUndefined(cultureName)) {\n        //     this.intl.culture = cultureName;\n        // }\n    }\n    ValueFormatter.prototype.getFormatFunction = function (format, isServerRendered) {\n        if (format.type) {\n            if (isServerRendered) {\n                format.isServerRendered = true;\n            }\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    // public getParserFunction(format: NumberFormatOptions | DateFormatOptions): Function {\n    //     if ((<DateFormatOptions>format).type) {\n    //         return this.intl.getDateParser(<DateFormatOptions>format);\n    //     } else {\n    //         return this.intl.getNumberParser(<DateFormatOptions>format);\n    //     }\n    // }\n    // public fromView(value: string, format: Function, type?: string): string | number | Date {\n    //     if (type === 'date' || type === 'datetime' || type === 'number') {\n    //         return format(value);\n    //     } else {\n    //         return value;\n    //     }\n    // }\n    ValueFormatter.prototype.toView = function (value, format) {\n        var result = value;\n        if (!isNullOrUndefined(format) && !isNullOrUndefined(value)) {\n            result = format(value);\n        }\n        return result;\n    };\n    // public setCulture(cultureName: string): void {\n    //     if (!isNullOrUndefined(cultureName)) {\n    //         setCulture(cultureName);\n    //     }\n    // }\n    /* tslint:disable:no-any */\n    ValueFormatter.prototype.displayText = function (value, format, isServerRendered) {\n        return this.toView(value, this.getFormatFunction(format, isServerRendered));\n    };\n    return ValueFormatter;\n}());\nexport { ValueFormatter };\n","import { ValueFormatter } from './value-formatter';\n/**\n * CsvHelper class\n * @private\n */\nvar CsvHelper = /** @class */ (function () {\n    /* tslint:disable:no-any */\n    function CsvHelper(json, separator) {\n        this.csvStr = '';\n        if (separator === null || separator === undefined) {\n            this.separator = ',';\n        }\n        else {\n            this.separator = separator;\n        }\n        this.formatter = new ValueFormatter();\n        this.isMicrosoftBrowser = !(!navigator.msSaveBlob);\n        if (json.isServerRendered !== null && json.isServerRendered !== undefined) {\n            this.isServerRendered = json.isServerRendered;\n        }\n        if (json.styles !== null && json.styles !== undefined) {\n            this.globalStyles = new Map();\n            for (var i = 0; i < json.styles.length; i++) {\n                if (json.styles[i].name !== undefined && json.styles[i].numberFormat !== undefined) {\n                    this.globalStyles.set(json.styles[i].name, json.styles[i].numberFormat);\n                }\n            }\n        }\n        // Parses Worksheets data to DOM.        \n        if (json.worksheets !== null && json.worksheets !== undefined) {\n            this.parseWorksheet(json.worksheets[0]);\n        }\n        //this.csvStr = 'a1,a2,a3\\nb1,b2,b3';\n    }\n    CsvHelper.prototype.parseWorksheet = function (json) {\n        //Rows\n        if (json.rows !== null && json.rows !== undefined) {\n            this.parseRows(json.rows);\n        }\n    };\n    /* tslint:disable:no-any */\n    CsvHelper.prototype.parseRows = function (rows) {\n        var count = 1;\n        for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n            var row = rows_1[_i];\n            //Row index\n            if (row.index !== null && row.index !== undefined) {\n                while (count < row.index) {\n                    this.csvStr += '\\n';\n                    count++;\n                }\n                this.parseRow(row);\n            }\n            else {\n                throw Error('Row index is missing.');\n            }\n        }\n    };\n    /* tslint:disable:no-any */\n    CsvHelper.prototype.parseRow = function (row) {\n        if (row.cells !== null && row.cells !== undefined) {\n            var count = 1;\n            for (var _i = 0, _a = row.cells; _i < _a.length; _i++) {\n                var cell = _a[_i];\n                //cell index\n                if (cell.index !== null && cell.index !== undefined) {\n                    while (count < cell.index) {\n                        this.csvStr += this.separator;\n                        count++;\n                    }\n                    this.parseCell(cell);\n                }\n                else {\n                    throw Error('Cell index is missing.');\n                }\n            }\n        }\n    };\n    /* tslint:disable:no-any */\n    CsvHelper.prototype.parseCell = function (cell) {\n        var csv = this.csvStr;\n        if (cell.value !== undefined) {\n            if (cell.value instanceof Date) {\n                if (cell.style !== undefined && cell.style.numberFormat !== undefined) {\n                    /* tslint:disable-next-line:max-line-length */\n                    try {\n                        csv += this.parseCellValue(this.formatter.displayText(cell.value, { type: 'dateTime', skeleton: cell.style.numberFormat }, this.isServerRendered));\n                    }\n                    catch (error) {\n                        /* tslint:disable-next-line:max-line-length */\n                        csv += this.parseCellValue(this.formatter.displayText(cell.value, { type: 'dateTime', format: cell.style.numberFormat }, this.isServerRendered));\n                    }\n                }\n                else if (cell.style !== undefined && cell.style.name !== undefined && this.globalStyles.has(cell.style.name)) {\n                    /* tslint:disable-next-line:max-line-length */\n                    try {\n                        csv += this.parseCellValue(this.formatter.displayText(cell.value, { type: 'dateTime', skeleton: this.globalStyles.get(cell.style.name) }, this.isServerRendered));\n                    }\n                    catch (error) {\n                        /* tslint:disable-next-line:max-line-length */\n                        csv += this.parseCellValue(this.formatter.displayText(cell.value, { type: 'dateTime', format: this.globalStyles.get(cell.style.name) }, this.isServerRendered));\n                    }\n                }\n                else {\n                    csv += cell.value;\n                }\n            }\n            else if (typeof (cell.value) === 'boolean') {\n                csv += cell.value ? 'TRUE' : 'FALSE';\n            }\n            else if (typeof (cell.value) === 'number') {\n                if (cell.style !== undefined && cell.style.numberFormat !== undefined) {\n                    /* tslint:disable-next-line:max-line-length */\n                    csv += this.parseCellValue(this.formatter.displayText(cell.value, { format: cell.style.numberFormat }, this.isServerRendered));\n                }\n                else if (cell.style !== undefined && cell.style.name !== undefined && this.globalStyles.has(cell.style.name)) {\n                    /* tslint:disable-next-line:max-line-length */\n                    csv += this.parseCellValue(this.formatter.displayText(cell.value, { format: this.globalStyles.get(cell.style.name) }, this.isServerRendered));\n                }\n                else {\n                    csv += cell.value;\n                }\n            }\n            else {\n                csv += this.parseCellValue(cell.value);\n            }\n        }\n        this.csvStr = csv;\n    };\n    CsvHelper.prototype.parseCellValue = function (value) {\n        var val = '';\n        var length = value.length;\n        for (var start = 0; start < length; start++) {\n            if (value[start] === '\\\"') {\n                val += value[start].replace('\\\"', '\\\"\\\"');\n            }\n            else {\n                val += value[start];\n            }\n        }\n        value = val;\n        if (value.indexOf(this.separator) !== -1 || value.indexOf('\\n') !== -1) {\n            return value = '\\\"' + value + '\\\"';\n        }\n        else {\n            return value;\n        }\n    };\n    /**\n     * Saves the file with specified name and sends the file to client browser\n     * @param  {string} fileName- file name to save.\n     * @param  {Blob} buffer- the content to write in file\n     */\n    CsvHelper.prototype.save = function (fileName) {\n        this.buffer = new Blob(['\\ufeff' + this.csvStr], { type: 'text/csv;charset=UTF-8' });\n        if (this.isMicrosoftBrowser) {\n            navigator.msSaveBlob(this.buffer, fileName);\n        }\n        else {\n            var dataUrl_1 = window.URL.createObjectURL(this.buffer);\n            var dwlLink = document.createElementNS('http://www.w3.org/1999/xhtml', 'a');\n            dwlLink.download = fileName;\n            dwlLink.href = dataUrl_1;\n            var event_1 = document.createEvent('MouseEvent');\n            event_1.initEvent('click', true, true);\n            dwlLink.dispatchEvent(event_1);\n            setTimeout(function () {\n                window.URL.revokeObjectURL(dataUrl_1);\n            });\n        }\n    };\n    CsvHelper.prototype.saveAsBlob = function () {\n        return new Blob(['\\ufeff' + this.csvStr], { type: 'text/csv;charset=UTF-8' });\n    };\n    return CsvHelper;\n}());\nexport { CsvHelper };\n","/**\n * BlobHelper class\n * @private\n */\nvar BlobHelper = /** @class */ (function () {\n    function BlobHelper() {\n        /* tslint:disable:no-any */\n        this.parts = [];\n    }\n    /* tslint:disable:no-any */\n    BlobHelper.prototype.append = function (part) {\n        this.parts.push(part);\n        this.blob = undefined; // Invalidate the blob\n    };\n    BlobHelper.prototype.getBlob = function () {\n        return new Blob(this.parts, { type: 'text/plain' });\n    };\n    return BlobHelper;\n}());\nexport { BlobHelper };\n","/**\n * AutoFilters class\n * @private\n */\nvar AutoFilters = /** @class */ (function () {\n    function AutoFilters() {\n    }\n    return AutoFilters;\n}());\nexport { AutoFilters };\n","import { Worksheets } from './worksheets';\nimport { Worksheet, FreezePane, MergeCell, MergeCells, HyperLink, Grouping } from './worksheet';\nimport { CellStyle, Font, Borders, CellXfs, Alignment, NumFmt, CellStyleXfs, CellStyles } from './cell-style';\nimport { Column } from './column';\nimport { Row, Rows } from './row';\nimport { Image } from './image';\nimport { Cell, Cells } from './cell';\nimport { ZipArchive, ZipArchiveItem } from '@syncfusion/ej2-compression';\nimport { CsvHelper } from './csv-helper';\nimport { Internationalization, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { BlobHelper } from './blob-helper';\nimport { AutoFilters } from './auto-filters';\n/**\n * Workbook class\n */\nvar Workbook = /** @class */ (function () {\n    /* tslint:disable:no-any */\n    function Workbook(json, saveType, culture, currencyString, separator) {\n        this.sharedStringCount = 0;\n        this.unitsProportions = [\n            96 / 75.0,\n            96 / 300.0,\n            96,\n            96 / 25.4,\n            96 / 2.54,\n            1,\n            96 / 72.0,\n            96 / 72.0 / 12700,\n        ];\n        /* tslint:disable:no-any */\n        this.hyperlinkStyle = { fontColor: '#0000FF', underline: true };\n        if (culture !== undefined) {\n            this.culture = culture;\n        }\n        else {\n            this.culture = 'en-US';\n        }\n        if (currencyString !== undefined) {\n            this.currency = currencyString;\n        }\n        else {\n            this.currency = 'USD';\n        }\n        this.intl = new Internationalization(this.culture);\n        this.mSaveType = saveType;\n        if (saveType === 'xlsx') {\n            this.mArchive = new ZipArchive();\n            this.sharedString = [];\n            this.mFonts = [];\n            this.mBorders = [];\n            this.mStyles = [];\n            this.printTitles = new Map();\n            this.cellStyles = new Map();\n            this.mNumFmt = new Map();\n            this.mFills = new Map();\n            this.mStyles.push(new CellStyle());\n            this.mFonts.push(new Font());\n            /* tslint:disable */\n            this.cellStyles.set('Normal', new CellStyles());\n            /* tslint:enable */\n            this.mCellXfs = [];\n            this.mCellStyleXfs = [];\n            this.drawingCount = 0;\n            this.imageCount = 0;\n            if (json.styles !== null && json.styles !== undefined) {\n                /* tslint:disable-next-line:no-any */\n                this.globalStyles = new Map();\n                for (var i = 0; i < json.styles.length; i++) {\n                    if (json.styles[i].name !== undefined) {\n                        if (!this.cellStyles.has(json.styles[i].name)) {\n                            var cellStyle = new CellStyle();\n                            cellStyle.isGlobalStyle = true;\n                            this.parserCellStyle(json.styles[i], cellStyle, 'none');\n                            var cellStylesIn = new CellStyles();\n                            cellStylesIn.name = cellStyle.name;\n                            cellStylesIn.xfId = (cellStyle.index - 1);\n                            this.cellStyles.set(cellStylesIn.name, cellStylesIn);\n                            /* tslint:disable-next-line:no-any */\n                            var tFormat = {};\n                            if (json.styles[i].numberFormat !== undefined) {\n                                tFormat.format = json.styles[i].numberFormat;\n                            }\n                            if (json.styles[i].type !== undefined) {\n                                tFormat.type = json.styles[i].type;\n                            }\n                            else {\n                                tFormat.type = 'datetime';\n                            }\n                            if (tFormat.format !== undefined) {\n                                this.globalStyles.set(json.styles[i].name, tFormat);\n                            }\n                        }\n                        else {\n                            throw Error('Style name ' + json.styles[i].name + ' is already existed');\n                        }\n                    }\n                }\n            }\n            // Parses Worksheets data to DOM.        \n            if (json.worksheets !== null && json.worksheets !== undefined) {\n                this.parserWorksheets(json.worksheets);\n            }\n            else {\n                throw Error('Worksheet is expected.');\n            }\n            // Parses the BuiltInProperties data to DOM.        \n            if (json.builtInProperties !== null && json.builtInProperties !== undefined) {\n                this.builtInProperties = new BuiltInProperties();\n                this.parserBuiltInProperties(json.builtInProperties, this.builtInProperties);\n            }\n        }\n        else {\n            this.csvHelper = new CsvHelper(json, separator);\n        }\n    }\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserBuiltInProperties = function (jsonBuiltInProperties, builtInProperties) {\n        //Author\n        if (jsonBuiltInProperties.author !== null && jsonBuiltInProperties.author !== undefined) {\n            builtInProperties.author = jsonBuiltInProperties.author;\n        }\n        //Comments\n        if (jsonBuiltInProperties.comments !== null && jsonBuiltInProperties.comments !== undefined) {\n            builtInProperties.comments = jsonBuiltInProperties.comments;\n        }\n        //Category\n        if (jsonBuiltInProperties.category !== null && jsonBuiltInProperties.category !== undefined) {\n            builtInProperties.category = jsonBuiltInProperties.category;\n        }\n        //Company\n        if (jsonBuiltInProperties.company !== null && jsonBuiltInProperties.company !== undefined) {\n            builtInProperties.company = jsonBuiltInProperties.company;\n        }\n        //Manager\n        if (jsonBuiltInProperties.manager !== null && jsonBuiltInProperties.manager !== undefined) {\n            builtInProperties.manager = jsonBuiltInProperties.manager;\n        }\n        //Subject\n        if (jsonBuiltInProperties.subject !== null && jsonBuiltInProperties.subject !== undefined) {\n            builtInProperties.subject = jsonBuiltInProperties.subject;\n        }\n        //Title\n        if (jsonBuiltInProperties.title !== null && jsonBuiltInProperties.title !== undefined) {\n            builtInProperties.title = jsonBuiltInProperties.title;\n        }\n        //Creation date\n        if (jsonBuiltInProperties.createdDate !== null && jsonBuiltInProperties.createdDate !== undefined) {\n            builtInProperties.createdDate = jsonBuiltInProperties.createdDate;\n        }\n        //Modified date\n        if (jsonBuiltInProperties.modifiedDate !== null && jsonBuiltInProperties.modifiedDate !== undefined) {\n            builtInProperties.modifiedDate = jsonBuiltInProperties.modifiedDate;\n        }\n        //Tags\n        if (jsonBuiltInProperties.tags !== null && jsonBuiltInProperties.tags !== undefined) {\n            builtInProperties.tags = jsonBuiltInProperties.tags;\n        }\n        //Status\n        if (jsonBuiltInProperties.status !== null && jsonBuiltInProperties.status !== undefined) {\n            builtInProperties.status = jsonBuiltInProperties.status;\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserWorksheets = function (json) {\n        this.worksheets = new Worksheets();\n        var length = json.length;\n        for (var i = 0; i < length; i++) {\n            var jsonSheet = json[i];\n            var sheet = new Worksheet();\n            this.mergeCells = new MergeCells();\n            this.mergedCellsStyle = new Map();\n            this.mHyperLinks = [];\n            //Name\n            if (jsonSheet.name !== null && jsonSheet.name !== undefined) {\n                sheet.name = jsonSheet.name;\n            }\n            else {\n                sheet.name = 'Sheet' + (i + 1).toString();\n            }\n            if (jsonSheet.enableRtl !== null && jsonSheet.enableRtl !== undefined) {\n                sheet.enableRtl = jsonSheet.enableRtl;\n            }\n            sheet.index = (i + 1);\n            //Columns\n            if (jsonSheet.columns !== null && jsonSheet.columns !== undefined) {\n                this.parserColumns(jsonSheet.columns, sheet);\n            }\n            //Rows\n            if (jsonSheet.rows !== null && jsonSheet.rows !== undefined) {\n                this.parserRows(jsonSheet.rows, sheet);\n            }\n            //showGridLines\n            if (jsonSheet.showGridLines !== null && jsonSheet.showGridLines !== undefined) {\n                sheet.showGridLines = jsonSheet.showGridLines;\n            }\n            //FreezePanes\n            if (jsonSheet.freeze !== null && jsonSheet.freeze !== undefined) {\n                this.parserFreezePanes(jsonSheet.freeze, sheet);\n            }\n            //Print Title\n            if (jsonSheet.printTitle !== null && jsonSheet.printTitle !== undefined) {\n                this.parserPrintTitle(jsonSheet.printTitle, sheet);\n            }\n            if (jsonSheet.pageSetup !== undefined) {\n                if (jsonSheet.pageSetup.isSummaryRowBelow !== undefined) {\n                    sheet.isSummaryRowBelow = jsonSheet.pageSetup.isSummaryRowBelow;\n                }\n            }\n            if (jsonSheet.images !== undefined) {\n                this.parserImages(jsonSheet.images, sheet);\n            }\n            if (jsonSheet.autoFilters !== null && jsonSheet.autoFilters !== undefined) {\n                this.parseFilters(jsonSheet.autoFilters, sheet);\n            }\n            sheet.index = (i + 1);\n            sheet.mergeCells = this.mergeCells;\n            sheet.hyperLinks = this.mHyperLinks;\n            this.worksheets.push(sheet);\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.mergeOptions = function (fromJson, toJson) {\n        /* tslint:disable:no-any */\n        var result = {};\n        this.applyProperties(fromJson, result);\n        this.applyProperties(toJson, result);\n        return result;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.applyProperties = function (sourceJson, destJson) {\n        var keys = Object.keys(sourceJson);\n        for (var index = 0; index < keys.length; index++) {\n            if (keys[index] !== 'name') {\n                destJson[keys[index]] = sourceJson[keys[index]];\n            }\n        }\n    };\n    Workbook.prototype.getCellName = function (row, column) {\n        return this.getColumnName(column) + row.toString();\n    };\n    Workbook.prototype.getColumnName = function (col) {\n        col--;\n        var strColumnName = '';\n        do {\n            var iCurrentDigit = col % 26;\n            col = col / 26 - 1;\n            strColumnName = String.fromCharCode(65 + iCurrentDigit) + strColumnName;\n        } while (col >= 0);\n        return strColumnName;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserPrintTitle = function (json, sheet) {\n        var printTitleName = '';\n        var titleRowName;\n        if (json.fromRow !== null && json.fromRow !== undefined) {\n            var fromRow = json.fromRow;\n            var toRow = void 0;\n            if (json.toRow !== null && json.toRow !== undefined) {\n                toRow = json.toRow;\n            }\n            else {\n                toRow = json.fromRow;\n            }\n            titleRowName = '$' + fromRow + ':$' + toRow;\n        }\n        var titleColName;\n        if (json.fromColumn !== null && json.fromColumn !== undefined) {\n            var fromColumn = json.fromColumn;\n            var toColumn = void 0;\n            if (json.toColumn !== null && json.toColumn !== undefined) {\n                toColumn = json.toColumn;\n            }\n            else {\n                toColumn = json.fromColumn;\n            }\n            titleColName = '$' + this.getColumnName(fromColumn) + ':$' + this.getColumnName(toColumn);\n        }\n        if (titleRowName !== undefined) {\n            printTitleName += (sheet.name + '!' + titleRowName);\n        }\n        if (titleColName !== undefined && titleRowName !== undefined) {\n            printTitleName += ',' + (sheet.name + '!' + titleColName);\n        }\n        else if (titleColName !== undefined) {\n            printTitleName += (sheet.name + '!' + titleColName);\n        }\n        if (printTitleName !== '') {\n            this.printTitles.set(sheet.index - 1, printTitleName);\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserFreezePanes = function (json, sheet) {\n        sheet.freezePanes = new FreezePane();\n        if (json.row !== null && json.row !== undefined) {\n            sheet.freezePanes.row = json.row;\n        }\n        else {\n            sheet.freezePanes.row = 0;\n        }\n        if (json.column !== null && json.column !== undefined) {\n            sheet.freezePanes.column = json.column;\n        }\n        else {\n            sheet.freezePanes.column = 0;\n        }\n        sheet.freezePanes.leftCell = this.getCellName(sheet.freezePanes.row + 1, sheet.freezePanes.column + 1);\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserColumns = function (json, sheet) {\n        var columnsLength = json.length;\n        sheet.columns = [];\n        for (var column = 0; column < columnsLength; column++) {\n            var col = new Column();\n            if (json[column].index !== null && json[column].index !== undefined) {\n                col.index = json[column].index;\n            }\n            else {\n                throw Error('Column index is missing.');\n            }\n            if (json[column].width !== null && json[column].width !== undefined) {\n                col.width = json[column].width;\n            }\n            sheet.columns.push(col);\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserRows = function (json, sheet) {\n        var rowsLength = json.length;\n        sheet.rows = new Rows();\n        var rowId = 0;\n        for (var r = 0; r < rowsLength; r++) {\n            var row = this.parserRow(json[r], rowId);\n            rowId = row.index;\n            sheet.rows.add(row);\n        }\n        this.insertMergedCellsStyle(sheet);\n    };\n    Workbook.prototype.insertMergedCellsStyle = function (sheet) {\n        var _this = this;\n        if (this.mergeCells.length > 0) {\n            this.mergedCellsStyle.forEach(function (value, key) {\n                var row = sheet.rows.filter(function (item) {\n                    return item.index === value.y;\n                })[0];\n                if (!isNullOrUndefined(row)) {\n                    var cell = row.cells.filter(function (item) {\n                        return item.index === value.x;\n                    })[0];\n                    if (!isNullOrUndefined(cell)) {\n                        cell.styleIndex = value.styleIndex;\n                    }\n                    else {\n                        var cells = row.cells.filter(function (item) {\n                            return item.index <= value.x;\n                        });\n                        var insertIndex = 0;\n                        if (cells.length > 0) {\n                            insertIndex = row.cells.indexOf(cells[cells.length - 1]) + 1;\n                        }\n                        row.cells.splice(insertIndex, 0, _this.createCell(value, key));\n                    }\n                }\n                else {\n                    var rows = sheet.rows.filter(function (item) {\n                        return item.index <= value.y;\n                    });\n                    var rowToInsert = new Row();\n                    rowToInsert.index = value.y;\n                    rowToInsert.cells = new Cells();\n                    rowToInsert.cells.add(_this.createCell(value, key));\n                    var insertIndex = 0;\n                    if (rows.length > 0) {\n                        insertIndex = sheet.rows.indexOf(rows[rows.length - 1]) + 1;\n                    }\n                    sheet.rows.splice(insertIndex, 0, rowToInsert);\n                }\n            });\n        }\n    };\n    Workbook.prototype.createCell = function (value, key) {\n        var cellToInsert = new Cell();\n        cellToInsert.refName = key;\n        cellToInsert.index = value.x;\n        cellToInsert.cellStyle = new CellStyle();\n        cellToInsert.styleIndex = value.styleIndex;\n        return cellToInsert;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserRow = function (json, rowIndex) {\n        var row = new Row();\n        //Row Height\n        if (json.height !== null && json.height !== undefined) {\n            row.height = json.height;\n        }\n        //Row index\n        if (json.index !== null && json.index !== undefined) {\n            row.index = json.index;\n        }\n        else {\n            throw Error('Row index is missing.');\n        }\n        if (json.grouping !== null && json.grouping !== undefined) {\n            this.parseGrouping(json.grouping, row);\n        }\n        this.parseCells(json.cells, row);\n        return row;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parseGrouping = function (json, row) {\n        row.grouping = new Grouping();\n        if (json.outlineLevel !== undefined) {\n            row.grouping.outlineLevel = json.outlineLevel;\n        }\n        if (json.isCollapsed !== undefined) {\n            row.grouping.isCollapsed = json.isCollapsed;\n        }\n        if (json.isHidden !== undefined) {\n            row.grouping.isHidden = json.isHidden;\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parseCells = function (json, row) {\n        row.cells = new Cells();\n        var cellsLength = json !== undefined ? json.length : 0;\n        var spanMin = 1;\n        var spanMax = 1;\n        var curCellIndex = 0;\n        for (var cellId = 0; cellId < cellsLength; cellId++) {\n            /* tslint:disable:no-any */\n            var jsonCell = json[cellId];\n            var cell = new Cell();\n            //cell index\n            if (jsonCell.index !== null && jsonCell.index !== undefined) {\n                cell.index = jsonCell.index;\n            }\n            else {\n                throw Error('Cell index is missing.');\n            }\n            if (cell.index < spanMin) {\n                spanMin = cell.index;\n            }\n            else if (cell.index > spanMax) {\n                spanMax = cell.index;\n            }\n            //Update the Cell name\n            cell.refName = this.getCellName(row.index, cell.index);\n            //Row span\n            if (jsonCell.rowSpan !== null && jsonCell.rowSpan !== undefined) {\n                cell.rowSpan = jsonCell.rowSpan - 1;\n            }\n            else {\n                cell.rowSpan = 0;\n            }\n            //Column span\n            if (jsonCell.colSpan !== null && jsonCell.colSpan !== undefined) {\n                cell.colSpan = jsonCell.colSpan - 1;\n            }\n            else {\n                cell.colSpan = 0;\n            }\n            //Hyperlink\n            if (jsonCell.hyperlink !== null && jsonCell.hyperlink !== undefined) {\n                var hyperLink = new HyperLink();\n                if (jsonCell.hyperlink.target !== undefined) {\n                    hyperLink.target = jsonCell.hyperlink.target;\n                    if (jsonCell.hyperlink.displayText !== undefined) {\n                        cell.value = jsonCell.hyperlink.displayText;\n                    }\n                    else {\n                        cell.value = jsonCell.hyperlink.target;\n                    }\n                    cell.type = this.getCellValueType(cell.value);\n                    hyperLink.ref = cell.refName;\n                    hyperLink.rId = (this.mHyperLinks.length + 1);\n                    this.mHyperLinks.push(hyperLink);\n                    cell.cellStyle = new CellStyle();\n                    /* tslint:disable-next-line:max-line-length */\n                    this.parserCellStyle((jsonCell.style !== undefined ? this.mergeOptions(jsonCell.style, this.hyperlinkStyle) : this.hyperlinkStyle), cell.cellStyle, 'string');\n                    cell.styleIndex = cell.cellStyle.index;\n                }\n            }\n            // formulas\n            if (jsonCell.formula !== null && jsonCell.formula !== undefined) {\n                cell.formula = jsonCell.formula;\n                cell.type = 'formula';\n            }\n            //Cell value\n            if (jsonCell.value !== null && jsonCell.value !== undefined) {\n                if (cell.formula !== undefined) {\n                    cell.value = 0;\n                }\n                else {\n                    cell.value = jsonCell.value;\n                    cell.type = this.getCellValueType(cell.value);\n                }\n            }\n            if (jsonCell.style !== null && jsonCell.style !== undefined && cell.styleIndex === undefined) {\n                cell.cellStyle = new CellStyle();\n                if (cell.value instanceof Date) {\n                    this.parserCellStyle(jsonCell.style, cell.cellStyle, cell.type, 14);\n                }\n                else {\n                    this.parserCellStyle(jsonCell.style, cell.cellStyle, cell.type);\n                }\n                cell.styleIndex = cell.cellStyle.index;\n            }\n            else if (cell.value instanceof Date) {\n                cell.cellStyle = new CellStyle();\n                this.parserCellStyle({}, cell.cellStyle, cell.type, 14);\n                cell.styleIndex = cell.cellStyle.index;\n            }\n            this.parseCellType(cell);\n            this.mergeCells = this.processMergeCells(cell, row.index, this.mergeCells);\n            row.cells.add(cell);\n            curCellIndex = (cell.index + 1);\n        }\n        row.spans = (spanMin) + ':' + (spanMax);\n    };\n    Workbook.prototype.GetColors = function () {\n        var colors;\n        colors = new Map();\n        /* tslint:disable */\n        colors.set('WHITE', 'FFFFFFFF');\n        /* tslint:disable */\n        colors.set('SILVER', 'FFC0C0C0');\n        /* tslint:disable */\n        colors.set('GRAY', 'FF808080');\n        /* tslint:disable */\n        colors.set('BLACK', 'FF000000');\n        /* tslint:disable */\n        colors.set('RED', 'FFFF0000');\n        /* tslint:disable */\n        colors.set('MAROON', 'FF800000');\n        /* tslint:disable */\n        colors.set('YELLOW', 'FFFFFF00');\n        /* tslint:disable */\n        colors.set('OLIVE', 'FF808000');\n        /* tslint:disable */\n        colors.set('LIME', 'FF00FF00');\n        /* tslint:disable */\n        colors.set('GREEN', 'FF008000');\n        /* tslint:disable */\n        colors.set('AQUA', 'FF00FFFF');\n        /* tslint:disable */\n        colors.set('TEAL', 'FF008080');\n        /* tslint:disable */\n        colors.set('BLUE', 'FF0000FF');\n        /* tslint:disable */\n        colors.set('NAVY', 'FF000080');\n        /* tslint:disable */\n        colors.set('FUCHSIA', 'FFFF00FF');\n        /* tslint:disable */\n        colors.set('PURPLE', 'FF800080');\n        return colors;\n    };\n    Workbook.prototype.processColor = function (colorVal) {\n        if (colorVal.indexOf('#') === 0) {\n            return colorVal.replace('#', 'FF');\n        }\n        colorVal = colorVal.toUpperCase();\n        this.rgbColors = this.GetColors();\n        if (this.rgbColors.has(colorVal)) {\n            colorVal = this.rgbColors.get(colorVal);\n        }\n        else {\n            colorVal = 'FF000000';\n        }\n        return colorVal;\n    };\n    Workbook.prototype.processCellValue = function (value, cell) {\n        var cellValue = value;\n        if (value.indexOf(\"<font\") !== -1 || value.indexOf(\"<a\") !== -1 || value.indexOf(\"<b>\") !== -1 ||\n            value.indexOf(\"<i>\") !== -1 || value.indexOf(\"<u>\") !== -1) {\n            var processedVal = '';\n            var startindex = value.indexOf('<', 0);\n            var endIndex = value.indexOf('>', startindex + 1);\n            if (startindex >= 0 && endIndex >= 0) {\n                if (startindex !== 0) {\n                    processedVal += '<r><t xml:space=\"preserve\">' + this.processString(value.substring(0, startindex)) + '</t></r>';\n                }\n                while (startindex >= 0 && endIndex >= 0) {\n                    endIndex = value.indexOf('>', startindex + 1);\n                    if (endIndex >= 0) {\n                        var subString = value.substring(startindex + 1, endIndex);\n                        startindex = value.indexOf('<', endIndex + 1);\n                        if (startindex < 0) {\n                            startindex = cellValue.length;\n                        }\n                        var text = cellValue.substring(endIndex + 1, startindex);\n                        if (text.length !== 0) {\n                            var subSplit = subString.split(' ');\n                            if (subSplit.length > 0) {\n                                processedVal += '<r><rPr>';\n                            }\n                            if (subSplit.length > 1) {\n                                for (var _i = 0, subSplit_1 = subSplit; _i < subSplit_1.length; _i++) {\n                                    var element = subSplit_1[_i];\n                                    var start = element.trim().substring(0, 5);\n                                    switch (start) {\n                                        case 'size=':\n                                            processedVal += '<sz val=\"' + element.substring(6, element.length - 1) + '\"/>';\n                                            break;\n                                        case 'face=':\n                                            processedVal += '<rFont val=\"' + element.substring(6, element.length - 1) + '\"/>';\n                                            break;\n                                        case 'color':\n                                            processedVal += '<color rgb=\"' + this.processColor(element.substring(7, element.length - 1)) + '\"/>';\n                                            break;\n                                        case 'href=':\n                                            var hyperLink = new HyperLink();\n                                            hyperLink.target = element.substring(6, element.length - 1).trim();\n                                            hyperLink.ref = cell.refName;\n                                            hyperLink.rId = (this.mHyperLinks.length + 1);\n                                            this.mHyperLinks.push(hyperLink);\n                                            processedVal += '<color rgb=\"FF0000FF\"/><u/><b/>';\n                                            break;\n                                    }\n                                }\n                            }\n                            else if (subSplit.length === 1) {\n                                var style = subSplit[0].trim();\n                                switch (style) {\n                                    case 'b':\n                                        processedVal += '<b/>';\n                                        break;\n                                    case 'i':\n                                        processedVal += '<i/>';\n                                        break;\n                                    case 'u':\n                                        processedVal += '<u/>';\n                                        break;\n                                }\n                            }\n                            processedVal += '</rPr><t xml:space=\"preserve\">' + this.processString(text) + '</t></r>';\n                        }\n                    }\n                }\n                if (processedVal === '') {\n                    return cellValue;\n                }\n                return processedVal;\n            }\n            else {\n                return cellValue;\n            }\n        }\n        else {\n            return cellValue;\n        }\n    };\n    Workbook.prototype.applyGlobalStyle = function (json, cellStyle) {\n        var index = 0;\n        if (this.cellStyles.has(json.name)) {\n            cellStyle.index = this.mStyles.filter(function (a) { return (a.name === json.name); })[0].index;\n            cellStyle.name = json.name;\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserCellStyle = function (json, cellStyle, cellType, defStyleIndex) {\n        //name\n        if (json.name !== null && json.name !== undefined) {\n            if (cellStyle.isGlobalStyle) {\n                cellStyle.name = json.name;\n            }\n            else {\n                this.applyGlobalStyle(json, cellStyle);\n                return;\n            }\n        }\n        //background color\n        if (json.backColor !== null && json.backColor !== undefined) {\n            cellStyle.backColor = json.backColor;\n        }\n        //borders\n        //leftBorder\n        cellStyle.borders = new Borders();\n        //AllBorder\n        if (json.borders !== null && json.borders !== undefined) {\n            this.parserBorder(json.borders, cellStyle.borders.all);\n        }\n        //leftborder\n        if (json.leftBorder !== null && json.leftBorder !== undefined) {\n            this.parserBorder(json.leftBorder, cellStyle.borders.left);\n        }\n        //rightBorder\n        if (json.rightBorder !== null && json.rightBorder !== undefined) {\n            this.parserBorder(json.rightBorder, cellStyle.borders.right);\n        }\n        //topBorder\n        if (json.topBorder !== null && json.topBorder !== undefined) {\n            this.parserBorder(json.topBorder, cellStyle.borders.top);\n        }\n        //bottomBorder\n        if (json.bottomBorder !== null && json.bottomBorder !== undefined) {\n            this.parserBorder(json.bottomBorder, cellStyle.borders.bottom);\n        }\n        //fontName\n        if (json.fontName !== null && json.fontName !== undefined) {\n            cellStyle.fontName = json.fontName;\n        }\n        //fontSize\n        if (json.fontSize !== null && json.fontSize !== undefined) {\n            cellStyle.fontSize = json.fontSize;\n        }\n        //fontColor\n        if (json.fontColor !== null && json.fontColor !== undefined) {\n            cellStyle.fontColor = json.fontColor;\n        }\n        //italic\n        if (json.italic !== null && json.italic !== undefined) {\n            cellStyle.italic = json.italic;\n        }\n        //bold\n        if (json.bold !== null && json.bold !== undefined) {\n            cellStyle.bold = json.bold;\n        }\n        //hAlign\n        if (json.hAlign !== null && json.hAlign !== undefined) {\n            cellStyle.hAlign = json.hAlign.toLowerCase();\n        }\n        //indent\n        if (json.indent !== null && json.indent !== undefined) {\n            cellStyle.indent = json.indent;\n            if (!(cellStyle.hAlign === 'left' || cellStyle.hAlign === 'right')) {\n                cellStyle.hAlign = 'left';\n            }\n        }\n        if (json.rotation !== null && json.rotation !== undefined) {\n            cellStyle.rotation = json.rotation;\n        }\n        //vAlign\n        if (json.vAlign !== null && json.vAlign !== undefined) {\n            cellStyle.vAlign = json.vAlign.toLowerCase();\n        }\n        //underline\n        if (json.underline !== null && json.underline !== undefined) {\n            cellStyle.underline = json.underline;\n        }\n        //wrapText\n        if (json.wrapText !== null && json.wrapText !== undefined) {\n            cellStyle.wrapText = json.wrapText;\n        }\n        //numberFormat\n        if (json.numberFormat !== null && json.numberFormat !== undefined) {\n            if (json.type !== null && json.type !== undefined) {\n                cellStyle.numberFormat = this.getNumberFormat(json.numberFormat, json.type);\n            }\n            else {\n                cellStyle.numberFormat = this.getNumberFormat(json.numberFormat, cellType);\n            }\n        }\n        else if (defStyleIndex !== undefined) {\n            cellStyle.numFmtId = 14;\n            cellStyle.numberFormat = 'GENERAL';\n        }\n        else {\n            cellStyle.numberFormat = 'GENERAL';\n        }\n        cellStyle.index = this.processCellStyle(cellStyle);\n    };\n    Workbook.prototype.switchNumberFormat = function (numberFormat, type) {\n        var format = this.getNumberFormat(numberFormat, type);\n        if (format !== numberFormat) {\n            var numFmt = this.mNumFmt.get(numberFormat);\n            if (numFmt !== undefined) {\n                numFmt.formatCode = format;\n                if (this.mNumFmt.has(format)) {\n                    for (var _i = 0, _a = this.mCellStyleXfs; _i < _a.length; _i++) {\n                        var cellStyleXfs = _a[_i];\n                        if (cellStyleXfs.numFmtId === numFmt.numFmtId) {\n                            cellStyleXfs.numFmtId = this.mNumFmt.get(format).numFmtId;\n                        }\n                    }\n                    for (var _b = 0, _c = this.mCellXfs; _b < _c.length; _b++) {\n                        var cellXfs = _c[_b];\n                        if (cellXfs.numFmtId === numFmt.numFmtId) {\n                            cellXfs.numFmtId = this.mNumFmt.get(format).numFmtId;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    Workbook.prototype.getNumberFormat = function (numberFormat, type) {\n        var returnFormat;\n        switch (type) {\n            case 'number':\n                try {\n                    returnFormat = this.intl.getNumberPattern({ format: numberFormat, currency: this.currency, useGrouping: true }, true);\n                }\n                catch (error) {\n                    returnFormat = numberFormat;\n                }\n                break;\n            case 'datetime':\n                try {\n                    returnFormat = this.intl.getDatePattern({ skeleton: numberFormat, type: 'dateTime' }, true);\n                }\n                catch (error) {\n                    try {\n                        returnFormat = this.intl.getDatePattern({ format: numberFormat, type: 'dateTime' }, true);\n                    }\n                    catch (error) {\n                        returnFormat = numberFormat;\n                    }\n                }\n                break;\n            case 'date':\n                try {\n                    returnFormat = this.intl.getDatePattern({ skeleton: numberFormat, type: 'date' }, true);\n                }\n                catch (error) {\n                    try {\n                        returnFormat = this.intl.getDatePattern({ format: numberFormat, type: 'date' }, true);\n                    }\n                    catch (error) {\n                        returnFormat = numberFormat;\n                    }\n                }\n                break;\n            case 'time':\n                try {\n                    returnFormat = this.intl.getDatePattern({ skeleton: numberFormat, type: 'time' }, true);\n                }\n                catch (error) {\n                    try {\n                        returnFormat = this.intl.getDatePattern({ format: numberFormat, type: 'time' }, true);\n                    }\n                    catch (error) {\n                        returnFormat = numberFormat;\n                    }\n                }\n                break;\n            default:\n                returnFormat = numberFormat;\n                break;\n        }\n        return returnFormat;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserBorder = function (json, border) {\n        if (json.color !== null && json.color !== undefined) {\n            border.color = json.color;\n        }\n        else {\n            border.color = '#000000';\n        }\n        if (json.lineStyle !== null && json.lineStyle !== undefined) {\n            border.lineStyle = json.lineStyle;\n        }\n        else {\n            border.lineStyle = 'thin';\n        }\n    };\n    Workbook.prototype.processCellStyle = function (style) {\n        if (style.isGlobalStyle) {\n            this.processNumFormatId(style);\n            this.mStyles.push(style);\n            return this.mStyles.length;\n        }\n        else {\n            var compareResult = this.compareStyle(style);\n            if (!compareResult.result) {\n                this.processNumFormatId(style);\n                this.mStyles.push(style);\n                return this.mStyles.length;\n            }\n            else {\n                //Return the index of the already existing style.\n                return compareResult.index;\n            }\n        }\n    };\n    Workbook.prototype.processNumFormatId = function (style) {\n        if (style.numberFormat !== 'GENERAL' && !this.mNumFmt.has(style.numberFormat)) {\n            var id = this.mNumFmt.size + 164;\n            this.mNumFmt.set(style.numberFormat, new NumFmt(id, style.numberFormat));\n        }\n    };\n    Workbook.prototype.isNewFont = function (toCompareStyle) {\n        var result = false;\n        var index = 0;\n        for (var _i = 0, _a = this.mFonts; _i < _a.length; _i++) {\n            var font = _a[_i];\n            index++;\n            var fontColor = undefined;\n            if (toCompareStyle.fontColor !== undefined) {\n                fontColor = ('FF' + toCompareStyle.fontColor.replace('#', ''));\n            }\n            result = font.color === fontColor &&\n                font.b === toCompareStyle.bold &&\n                font.i === toCompareStyle.italic &&\n                font.u === toCompareStyle.underline &&\n                font.name === toCompareStyle.fontName &&\n                font.sz === toCompareStyle.fontSize;\n            if (result) {\n                break;\n            }\n        }\n        index = index - 1;\n        return { index: index, result: result };\n    };\n    Workbook.prototype.isNewBorder = function (toCompareStyle) {\n        var bStyle = new CellStyle();\n        if (this.isAllBorder(toCompareStyle.borders)) {\n            return (bStyle.borders.all.color === toCompareStyle.borders.all.color &&\n                bStyle.borders.all.lineStyle === toCompareStyle.borders.all.lineStyle);\n        }\n        else {\n            return (bStyle.borders.left.color === toCompareStyle.borders.left.color &&\n                bStyle.borders.left.lineStyle === toCompareStyle.borders.left.lineStyle &&\n                bStyle.borders.right.color === toCompareStyle.borders.right.color &&\n                bStyle.borders.right.lineStyle === toCompareStyle.borders.right.lineStyle &&\n                bStyle.borders.top.color === toCompareStyle.borders.top.color &&\n                bStyle.borders.top.lineStyle === toCompareStyle.borders.top.lineStyle &&\n                bStyle.borders.bottom.color === toCompareStyle.borders.bottom.color &&\n                bStyle.borders.bottom.lineStyle === toCompareStyle.borders.bottom.lineStyle);\n        }\n    };\n    Workbook.prototype.isAllBorder = function (toCompareBorder) {\n        var allBorderStyle = new CellStyle();\n        return allBorderStyle.borders.all.color !== toCompareBorder.all.color &&\n            allBorderStyle.borders.all.lineStyle !== toCompareBorder.all.lineStyle;\n    };\n    Workbook.prototype.compareStyle = function (toCompareStyle) {\n        var result = true;\n        var index = 0;\n        var globalStyleIndex = 0;\n        for (var _i = 0, _a = this.mStyles; _i < _a.length; _i++) {\n            var baseStyle = _a[_i];\n            result = baseStyle.isGlobalStyle ? false : (baseStyle.backColor === toCompareStyle.backColor &&\n                baseStyle.bold === toCompareStyle.bold &&\n                baseStyle.numFmtId === toCompareStyle.numFmtId &&\n                baseStyle.numberFormat === toCompareStyle.numberFormat &&\n                baseStyle.type === toCompareStyle.type &&\n                baseStyle.fontColor === toCompareStyle.fontColor &&\n                baseStyle.fontName === toCompareStyle.fontName &&\n                baseStyle.fontSize === toCompareStyle.fontSize &&\n                baseStyle.hAlign === toCompareStyle.hAlign &&\n                baseStyle.italic === toCompareStyle.italic &&\n                baseStyle.underline === toCompareStyle.underline &&\n                baseStyle.vAlign === toCompareStyle.vAlign &&\n                baseStyle.indent === toCompareStyle.indent &&\n                baseStyle.rotation === toCompareStyle.rotation &&\n                baseStyle.wrapText === toCompareStyle.wrapText &&\n                (baseStyle.borders.all.color === toCompareStyle.borders.all.color &&\n                    baseStyle.borders.all.lineStyle === toCompareStyle.borders.all.lineStyle) &&\n                (baseStyle.borders.left.color === toCompareStyle.borders.left.color &&\n                    baseStyle.borders.left.lineStyle === toCompareStyle.borders.left.lineStyle &&\n                    baseStyle.borders.right.color === toCompareStyle.borders.right.color &&\n                    baseStyle.borders.right.lineStyle === toCompareStyle.borders.right.lineStyle &&\n                    baseStyle.borders.top.color === toCompareStyle.borders.top.color &&\n                    baseStyle.borders.top.lineStyle === toCompareStyle.borders.top.lineStyle &&\n                    baseStyle.borders.bottom.color === toCompareStyle.borders.bottom.color &&\n                    baseStyle.borders.bottom.lineStyle === toCompareStyle.borders.bottom.lineStyle));\n            if (result) {\n                index = baseStyle.index;\n                break;\n            }\n        }\n        return { index: index, result: result };\n    };\n    Workbook.prototype.contains = function (array, item) {\n        var index = array.indexOf(item);\n        return index > -1 && index < array.length;\n    };\n    Workbook.prototype.getCellValueType = function (value) {\n        if (value instanceof Date) {\n            return 'datetime';\n        }\n        else if (typeof (value) === 'boolean') {\n            return 'boolean';\n        }\n        else if (typeof (value) === 'number') {\n            return 'number';\n        }\n        else {\n            return 'string';\n        }\n    };\n    Workbook.prototype.parseCellType = function (cell) {\n        var type = cell.type;\n        var saveType;\n        var value = cell.value;\n        switch (type) {\n            case 'datetime':\n                value = this.toOADate(value);\n                if (cell.cellStyle !== undefined && cell.cellStyle.name !== undefined) {\n                    if (this.globalStyles.has(cell.cellStyle.name)) {\n                        var value_1 = this.globalStyles.get(cell.cellStyle.name);\n                        this.switchNumberFormat(value_1.format, value_1.type);\n                    }\n                }\n                saveType = 'n';\n                break;\n            //TODO: Update the number format index and style\n            case 'boolean':\n                value = value ? 1 : 0;\n                saveType = 'b';\n                break;\n            case 'number':\n                saveType = 'n';\n                if (cell.cellStyle !== undefined && cell.cellStyle.name !== undefined) {\n                    if (this.globalStyles.has(cell.cellStyle.name)) {\n                        this.switchNumberFormat(this.globalStyles.get(cell.cellStyle.name).format, 'number');\n                    }\n                }\n                break;\n            case 'string':\n                this.sharedStringCount++;\n                saveType = 's';\n                var sstvalue = this.processCellValue(value, cell);\n                if (!this.contains(this.sharedString, sstvalue)) {\n                    this.sharedString.push(sstvalue);\n                }\n                value = this.sharedString.indexOf(sstvalue);\n                break;\n            default:\n                break;\n        }\n        cell.saveType = saveType;\n        cell.value = value;\n    };\n    Workbook.prototype.parserImages = function (json, sheet) {\n        var imagesLength = json.length;\n        sheet.images = [];\n        var imageId = 0;\n        for (var p = 0; p < imagesLength; p++) {\n            var image = this.parserImage(json[p]);\n            sheet.images.push(image);\n        }\n    };\n    Workbook.prototype.parseFilters = function (json, sheet) {\n        sheet.autoFilters = new AutoFilters();\n        if (json.row !== null && json.row !== undefined)\n            sheet.autoFilters.row = json.row;\n        else\n            throw new Error('Argument Null Exception: row null or empty');\n        if (json.lastRow !== null && json.lastRow !== undefined)\n            sheet.autoFilters.lastRow = json.lastRow;\n        else\n            throw new Error('Argument Null Exception: lastRow cannot be null or empty');\n        if (json.column !== null && json.column !== undefined)\n            sheet.autoFilters.column = json.column;\n        else\n            throw new Error('Argument Null Exception: column cannot be null or empty');\n        if (json.lastColumn !== null && json.row !== undefined)\n            sheet.autoFilters.lastColumn = json.lastColumn;\n        else\n            throw new Error('Argument Null Exception: lastColumn cannot be null or empty');\n    };\n    Workbook.prototype.parserImage = function (json) {\n        var image = new Image();\n        if (json.image !== null && json.image !== undefined) {\n            image.image = json.image;\n        }\n        if (json.row !== null && json.row !== undefined) {\n            image.row = json.row;\n        }\n        if (json.column !== null && json.column !== undefined) {\n            image.column = json.column;\n        }\n        if (json.lastRow !== null && json.lastRow !== undefined) {\n            image.lastRow = json.lastRow;\n        }\n        if (json.lastColumn !== null && json.lastColumn !== undefined) {\n            image.lastColumn = json.lastColumn;\n        }\n        if (json.width !== null && json.width !== undefined) {\n            image.width = json.width;\n        }\n        if (json.height !== null && json.height !== undefined) {\n            image.height = json.height;\n        }\n        if (json.horizontalFlip !== null && json.horizontalFlip !== undefined) {\n            image.horizontalFlip = json.horizontalFlip;\n        }\n        if (json.verticalFlip !== null && json.verticalFlip !== undefined) {\n            image.verticalFlip = json.verticalFlip;\n        }\n        if (json.rotation !== null && json.rotation !== undefined) {\n            image.rotation = json.rotation;\n        }\n        return image;\n    };\n    Workbook.prototype.saveAsBlob = function (blobSaveType) {\n        var _this = this;\n        switch (blobSaveType) {\n            case 'text/csv':\n                return new Promise(function (resolve, reject) {\n                    var obj = {};\n                    obj.blobData = _this.csvHelper.saveAsBlob();\n                    resolve(obj);\n                });\n            default:\n                return new Promise(function (resolve, reject) {\n                    _this.saveInternal();\n                    _this.mArchive.saveAsBlob().then(function (blob) {\n                        var obj = {};\n                        obj.blobData = new Blob([blob], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n                        resolve(obj);\n                    });\n                });\n        }\n    };\n    Workbook.prototype.save = function (fileName, proxyUrl) {\n        var _this = this;\n        if (fileName === null || fileName === undefined || fileName === '') {\n            throw new Error('Argument Null Exception: fileName cannot be null or empty');\n        }\n        var xlsxMatch = fileName.match('.xlsx$');\n        var csvMatch = fileName.match('.csv$');\n        if (xlsxMatch !== null && xlsxMatch[0] === ('.' + this.mSaveType)) {\n            this.saveInternal();\n            this.mArchive.save(fileName).then(function () {\n                _this.mArchive.destroy();\n            });\n        }\n        else if (csvMatch !== null && csvMatch[0] === ('.' + this.mSaveType)) {\n            this.csvHelper.save(fileName);\n        }\n        else {\n            throw Error('Save type and file extension is different.');\n        }\n    };\n    Workbook.prototype.saveInternal = function () {\n        this.saveWorkbook();\n        this.saveWorksheets();\n        this.saveSharedString();\n        this.saveStyles();\n        this.saveApp(this.builtInProperties);\n        this.saveCore(this.builtInProperties);\n        this.saveContentType();\n        this.saveTopLevelRelation();\n        this.saveWorkbookRelation();\n    };\n    Workbook.prototype.saveWorkbook = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var workbookTemp = '<?xml version=\"1.0\" encoding=\"utf-8\"?><workbook xmlns:r = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns= \"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"><workbookPr codeName=\"ThisWorkbook\" defaultThemeVersion= \"153222\"/><bookViews><workbookView activeTab=\"0\"/></bookViews>';\n        var sheets = '<sheets>';\n        var length = this.worksheets.length;\n        for (var i = 0; i < length; i++) {\n            /* tslint:disable-next-line:max-line-length */\n            var sheetName = this.worksheets[i].name;\n            sheetName = sheetName.replace(\"&\", \"&amp;\");\n            sheetName = sheetName.replace(\"<\", \"&lt;\");\n            sheetName = sheetName.replace(\">\", \"&gt;\");\n            sheetName = sheetName.replace(\"\\\"\", \"&quot;\");\n            sheets += '<sheet name=\"' + sheetName + '\" sheetId=\"' + (i + 1).toString() + '\" r:id =\"rId' + (i + 1).toString() + '\" />';\n        }\n        sheets += '</sheets>';\n        workbookTemp += sheets;\n        if (this.printTitles.size > 0) {\n            var printTitle_1 = '<definedNames>';\n            this.printTitles.forEach(function (value, key) {\n                printTitle_1 += '<definedName name=\"_xlnm.Print_Titles\" localSheetId=\"' + key + '\">' + value + '</definedName>';\n            });\n            printTitle_1 += '</definedNames>';\n            workbookTemp += printTitle_1;\n        }\n        this.addToArchive(workbookTemp + '</workbook>', 'xl/workbook.xml');\n    };\n    Workbook.prototype.saveWorksheets = function () {\n        var length = this.worksheets.length;\n        for (var i = 0; i < length; i++) {\n            this.saveWorksheet(this.worksheets[i], i);\n        }\n    };\n    Workbook.prototype.saveWorksheet = function (sheet, index) {\n        var sheetBlob = new BlobHelper();\n        /* tslint:disable-next-line:max-line-length */\n        var sheetString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><worksheet xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns:x14=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/main\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">';\n        if (!sheet.isSummaryRowBelow) {\n            sheetString += ('<sheetPr>' + '<outlinePr ' + 'summaryBelow=\"0\" >' + '</outlinePr>' + '</sheetPr>');\n        }\n        else {\n            sheetString += ('<sheetPr />');\n        }\n        sheetString += this.saveSheetView(sheet);\n        if (sheet.columns !== undefined) {\n            var colString = '<cols>';\n            for (var _i = 0, _a = sheet.columns; _i < _a.length; _i++) {\n                var column = _a[_i];\n                /* tslint:disable-next-line:max-line-length */\n                if (column.width !== undefined) {\n                    colString += '<col min=\"' + (column.index) + '\" max=\"' + (column.index) + '\" width=\"' + this.pixelsToColumnWidth(column.width) + '\" customWidth=\"1\" />';\n                }\n                else {\n                    colString += '<col min=\"' + (column.index) + '\" max=\"' + (column.index) + '\" width=\"' + '8.43' + '\" customWidth=\"1\" />';\n                }\n            }\n            sheetString += (colString + '</cols>');\n        }\n        sheetString += ('<sheetData>');\n        sheetBlob.append(sheetString);\n        sheetString = '';\n        if (sheet.rows !== undefined) {\n            for (var _b = 0, _c = sheet.rows; _b < _c.length; _b++) {\n                var row = _c[_b];\n                var rowString = '<row r=\"' + (row.index) + '\" ';\n                if (!isNullOrUndefined(row.spans)) {\n                    rowString += 'spans=\"' + row.spans + '\" ';\n                }\n                if (row.height !== undefined) {\n                    rowString += ('ht=\"' + this.pixelsToRowHeight(row.height) + '\" customHeight=\"1\" ');\n                }\n                if (row.grouping !== undefined) {\n                    if (row.grouping.isHidden) {\n                        rowString += ('hidden=\"1\" ');\n                    }\n                    if (row.grouping.outlineLevel !== undefined) {\n                        rowString += ('outlineLevel=\"' + row.grouping.outlineLevel + '\" ');\n                    }\n                    if (row.grouping.isCollapsed) {\n                        rowString += ('collapsed=\"1\" ');\n                    }\n                }\n                rowString += ('>');\n                for (var _d = 0, _e = row.cells; _d < _e.length; _d++) {\n                    var cell = _e[_d];\n                    if (cell !== undefined && (cell.value !== undefined || cell.cellStyle !== undefined)) {\n                        rowString += ('<c r=\"' + cell.refName + '\" ');\n                        if (cell.saveType !== undefined) {\n                            rowString += ('t=\"' + cell.saveType + '\" ');\n                        }\n                        if (cell.styleIndex !== undefined) {\n                            rowString += ('s=\"' + cell.styleIndex + '\" ');\n                        }\n                        rowString += (' >');\n                        if (cell.formula !== undefined) {\n                            rowString += ('<f>' + cell.formula + '</f>');\n                        }\n                        if (cell.value !== undefined) {\n                            rowString += ('<v>' + cell.value + '</v></c>');\n                        }\n                        else {\n                            rowString += ('</c>');\n                        }\n                    }\n                }\n                rowString += ('</row>');\n                sheetBlob.append(rowString);\n            }\n        }\n        sheetString += ('</sheetData>');\n        /* tslint:disable-next-line:max-line-length */\n        if (sheet.autoFilters !== null && sheet.autoFilters !== undefined)\n            sheetString += ('<autoFilter ref=\"' + this.getCellName(sheet.autoFilters.row, sheet.autoFilters.column) + ':' + this.getCellName(sheet.autoFilters.lastRow, sheet.autoFilters.lastColumn) + '\"/>');\n        if (sheet.mergeCells.length > 0) {\n            sheetString += ('<mergeCells count=\"' + sheet.mergeCells.length + '\">');\n            for (var _f = 0, _g = sheet.mergeCells; _f < _g.length; _f++) {\n                var mCell = _g[_f];\n                sheetString += ('<mergeCell ref=\"' + mCell.ref + '\" />');\n            }\n            sheetString += ('</mergeCells>');\n        }\n        if (sheet.hyperLinks.length > 0) {\n            sheetString += ('<hyperlinks>');\n            for (var _h = 0, _j = sheet.hyperLinks; _h < _j.length; _h++) {\n                var hLink = _j[_h];\n                sheetString += ('<hyperlink ref=\"' + hLink.ref + '\" r:id=\"rId' + hLink.rId + '\" />');\n            }\n            sheetString += ('</hyperlinks>');\n        }\n        /* tslint:disable-next-line:max-line-length */\n        sheetString += ('<pageMargins left=\"0.75\" right=\"0.75\" top=\"1\" bottom=\"1\" header=\"0.5\" footer=\"0.5\" /><headerFooter scaleWithDoc=\"1\" alignWithMargins=\"0\" differentFirst=\"0\" differentOddEven=\"0\" />');\n        if (sheet.images != undefined && sheet.images.length > 0) {\n            this.drawingCount++;\n            this.saveDrawings(sheet, sheet.index);\n            sheetString += '<drawing r:id=\"rId' + (sheet.hyperLinks.length + 1) + '\"/>';\n        }\n        this.addToArchive(this.saveSheetRelations(sheet), ('xl/worksheets/_rels/sheet' + sheet.index + '.xml.rels'));\n        sheetBlob.append(sheetString + '</worksheet>');\n        this.addToArchive(sheetBlob.getBlob(), 'xl/worksheets' + '/sheet' + (index + 1) + '.xml');\n    };\n    Workbook.prototype.saveDrawings = function (sheet, index) {\n        var drawings = new BlobHelper();\n        /* tslint:disable-next-line:max-line-length */\n        var sheetDrawingString = '<xdr:wsDr xmlns:xdr=\"http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing\" xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">';\n        if (sheet.images !== undefined) {\n            var imgId = 0;\n            for (var _i = 0, _a = sheet.images; _i < _a.length; _i++) {\n                var pic = _a[_i];\n                if (pic.height !== undefined && pic.width !== undefined) {\n                    this.updatelastRowOffset(sheet, pic);\n                    this.updatelastColumnOffSet(sheet, pic);\n                }\n                else if (pic.lastRow !== undefined && pic.lastColumn !== undefined) {\n                    pic.lastRowOffset = 0;\n                    pic.lastColOffset = 0;\n                }\n                imgId++;\n                sheetDrawingString += '<xdr:twoCellAnchor editAs=\"oneCell\">';\n                sheetDrawingString += '<xdr:from><xdr:col>';\n                //col\n                sheetDrawingString += pic.column - 1;\n                sheetDrawingString += '</xdr:col><xdr:colOff>';\n                //colOff\n                sheetDrawingString += 0;\n                sheetDrawingString += '</xdr:colOff><xdr:row>';\n                //row\n                sheetDrawingString += pic.row - 1;\n                sheetDrawingString += '</xdr:row><xdr:rowOff>';\n                //rowOff\n                sheetDrawingString += 0;\n                sheetDrawingString += '</xdr:rowOff></xdr:from>';\n                sheetDrawingString += '<xdr:to><xdr:col>';\n                //col\n                sheetDrawingString += pic.lastColumn;\n                sheetDrawingString += '</xdr:col><xdr:colOff>';\n                //colOff\n                sheetDrawingString += pic.lastColOffset;\n                sheetDrawingString += '</xdr:colOff><xdr:row>';\n                //row\n                sheetDrawingString += pic.lastRow;\n                sheetDrawingString += '</xdr:row><xdr:rowOff>';\n                //rowOff\n                sheetDrawingString += pic.lastRowOffset;\n                sheetDrawingString += '</xdr:rowOff></xdr:to>';\n                sheetDrawingString += '<xdr:pic>';\n                sheetDrawingString += '<xdr:nvPicPr>';\n                sheetDrawingString += '<xdr:cNvPr id=\"' + imgId + '\" name=\"Picture ' + imgId + '\"> </xdr:cNvPr>';\n                sheetDrawingString += '<xdr:cNvPicPr><a:picLocks noChangeAspect=\"1\"/></xdr:cNvPicPr> </xdr:nvPicPr>';\n                sheetDrawingString += '<xdr:blipFill>';\n                /* tslint:disable-next-line:max-line-length */\n                sheetDrawingString += '<a:blip xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" r:embed=\"rId' + imgId + '\" cstate=\"print\">';\n                sheetDrawingString += '</a:blip><a:stretch><a:fillRect /></a:stretch></xdr:blipFill>';\n                sheetDrawingString += '<xdr:spPr>';\n                sheetDrawingString += '<a:xfrm';\n                if (pic.rotation != undefined && pic.rotation <= 3600 && pic.rotation >= -3600) {\n                    sheetDrawingString += ' rot=\"' + (pic.rotation * 60000) + '\"';\n                }\n                if (pic.verticalFlip != undefined && pic.verticalFlip != false) {\n                    sheetDrawingString += ' flipV=\"1\"';\n                }\n                if (pic.horizontalFlip != undefined && pic.horizontalFlip != false) {\n                    sheetDrawingString += ' flipH=\"1\"';\n                }\n                sheetDrawingString += '/>';\n                sheetDrawingString += '<a:prstGeom prst=\"rect\"><a:avLst /></a:prstGeom></xdr:spPr>';\n                sheetDrawingString += '</xdr:pic><xdr:clientData /></xdr:twoCellAnchor>';\n                var imageFile = new BlobHelper();\n                var imageData = this.convertBase64toImage(pic.image);\n                this.imageCount += 1;\n                this.addToArchive(imageData, 'xl/media/image' + this.imageCount + '.png');\n            }\n            drawings.append(sheetDrawingString);\n            drawings.append('</xdr:wsDr>');\n            this.saveDrawingRelations(sheet);\n            this.addToArchive(drawings.getBlob(), 'xl/drawings/drawing' + this.drawingCount + '.xml');\n        }\n    };\n    Workbook.prototype.updatelastRowOffset = function (sheet, picture) {\n        var iCurHeight = picture.height;\n        var iCurRow = picture.row;\n        var iCurOffset = 0;\n        while (iCurHeight >= 0) {\n            var iRowHeight = 0;\n            if (sheet.rows !== undefined && sheet.rows[iCurRow - 1] !== undefined)\n                iRowHeight = this.convertToPixels(sheet.rows[iCurRow - 1].height === undefined ? 15 : sheet.rows[iCurRow - 1].height);\n            else\n                iRowHeight = this.convertToPixels(15);\n            var iSpaceInCell = iRowHeight - (iCurOffset * iRowHeight / 256);\n            if (iSpaceInCell > iCurHeight) {\n                picture.lastRow = iCurRow;\n                picture.lastRowOffset = iCurOffset + (iCurHeight * 256 / iRowHeight);\n                var rowHiddenHeight = 0;\n                if (sheet.rows !== undefined && sheet.rows[iCurRow - 1] !== undefined)\n                    rowHiddenHeight = this.convertToPixels(sheet.rows[iCurRow - 1].height === undefined ? 15 : sheet.rows[iCurRow - 1].height);\n                else\n                    rowHiddenHeight = this.convertToPixels(15);\n                picture.lastRowOffset = (rowHiddenHeight * picture.lastRowOffset) / 256;\n                picture.lastRowOffset = Math.round(picture.lastRowOffset / this.unitsProportions[7]);\n                break;\n            }\n            else {\n                iCurHeight -= iSpaceInCell;\n                iCurRow++;\n                iCurOffset = 0;\n            }\n        }\n    };\n    Workbook.prototype.updatelastColumnOffSet = function (sheet, picture) {\n        var iCurWidth = picture.width;\n        var iCurCol = picture.column;\n        var iCurOffset = 0;\n        while (iCurWidth >= 0) {\n            var iColWidth = 0;\n            if (sheet.columns !== undefined && sheet.columns[iCurCol - 1] !== undefined)\n                iColWidth = this.ColumnWidthToPixels(sheet.columns[iCurCol - 1].width === undefined ? 8.43 : sheet.columns[iCurCol - 1].width);\n            else\n                iColWidth = this.ColumnWidthToPixels(8.43);\n            var iSpaceInCell = iColWidth - (iCurOffset * iColWidth / 1024);\n            if (iSpaceInCell > iCurWidth) {\n                picture.lastColumn = iCurCol;\n                picture.lastColOffset = iCurOffset + (iCurWidth * 1024 / iColWidth);\n                var colHiddenWidth = 0;\n                if (sheet.columns !== undefined && sheet.columns[iCurCol - 1] !== undefined)\n                    colHiddenWidth = this.ColumnWidthToPixels(sheet.columns[iCurCol - 1].width === undefined ? 8.43 : sheet.columns[iCurCol].width);\n                else\n                    colHiddenWidth = this.ColumnWidthToPixels(8.43);\n                picture.lastColOffset = (colHiddenWidth * picture.lastColOffset) / 1024;\n                picture.lastColOffset = Math.round(picture.lastColOffset / this.unitsProportions[7]);\n                break;\n            }\n            else {\n                iCurWidth -= iSpaceInCell;\n                iCurCol++;\n                iCurOffset = 0;\n            }\n        }\n    };\n    Workbook.prototype.convertToPixels = function (value) {\n        return value * this.unitsProportions[6];\n    };\n    Workbook.prototype.convertBase64toImage = function (img) {\n        var byteStr = window.atob(img);\n        var buffer = new ArrayBuffer(byteStr.length);\n        var data = new Uint8Array(buffer);\n        for (var i = 0; i < byteStr.length; i++) {\n            data[i] = byteStr.charCodeAt(i);\n        }\n        var blob = new Blob([data], { type: 'image/png' });\n        return blob;\n    };\n    Workbook.prototype.saveDrawingRelations = function (sheet) {\n        /* tslint:disable-next-line:max-line-length */\n        var drawingRelation = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">';\n        var length = sheet.images.length;\n        var id = this.imageCount - sheet.images.length;\n        for (var i = 1; i <= length; i++) {\n            id++;\n            /* tslint:disable-next-line:max-line-length */\n            drawingRelation += '<Relationship Id=\"rId' + i + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\" Target=\"../media/image' + id + '.png\" />';\n        }\n        this.addToArchive((drawingRelation + '</Relationships>'), 'xl/drawings/_rels/drawing' + this.drawingCount + '.xml.rels');\n    };\n    Workbook.prototype.pixelsToColumnWidth = function (pixels) {\n        var dDigitWidth = 7;\n        var val = (pixels > dDigitWidth + 5) ?\n            this.trunc((pixels - 5) / dDigitWidth * 100 + 0.5) / 100 :\n            pixels / (dDigitWidth + 5);\n        return (val > 1) ?\n            ((val * dDigitWidth + 5) / dDigitWidth * 256.0) / 256.0 :\n            (val * (dDigitWidth + 5) / dDigitWidth * 256.0) / 256.0;\n    };\n    Workbook.prototype.ColumnWidthToPixels = function (val) {\n        var dDigitWidth = 7;\n        var fileWidth = (val > 1) ?\n            ((val * dDigitWidth + 5) / dDigitWidth * 256.0) / 256.0 :\n            (val * (dDigitWidth + 5) / dDigitWidth * 256.0) / 256.0;\n        return this.trunc(((256 * fileWidth + this.trunc(128 / dDigitWidth)) / 256) * dDigitWidth);\n    };\n    Workbook.prototype.trunc = function (x) {\n        var n = x - x % 1;\n        return n === 0 && (x < 0 || (x === 0 && (1 / x !== 1 / 0))) ? -0 : n;\n    };\n    Workbook.prototype.pixelsToRowHeight = function (pixels) {\n        return (pixels * this.unitsProportions[5] / this.unitsProportions[6]);\n    };\n    Workbook.prototype.saveSheetRelations = function (sheet) {\n        /* tslint:disable-next-line:max-line-length */\n        var relStr = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">';\n        for (var _i = 0, _a = sheet.hyperLinks; _i < _a.length; _i++) {\n            var hLink = _a[_i];\n            /* tslint:disable-next-line:max-line-length */\n            relStr += '<Relationship Id=\"rId' + hLink.rId + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\" Target=\"' + this.processString(hLink.target) + '\" TargetMode=\"External\" />';\n        }\n        if (sheet.images != undefined && sheet.images.length > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            relStr += '<Relationship Id=\"rId' + (sheet.hyperLinks.length + 1) + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing\" Target=\"../drawings/drawing' + this.drawingCount + '.xml\" />';\n        }\n        relStr += '</Relationships>';\n        return relStr;\n    };\n    Workbook.prototype.saveSheetView = function (sheet) {\n        var paneString = '<sheetViews><sheetView workbookViewId=\"0\" ';\n        if (sheet.enableRtl === true) {\n            paneString += 'rightToLeft=\"1\"';\n        }\n        if (sheet.showGridLines === false) {\n            paneString += 'showGridLines=\"0\" >';\n        }\n        else {\n            paneString += '>';\n        }\n        if (sheet.freezePanes !== undefined) {\n            paneString += '<pane state=\"frozen\"' +\n                ' topLeftCell=\"' + sheet.freezePanes.leftCell + '\" ';\n            if (sheet.freezePanes.row !== 0) {\n                paneString += 'ySplit=\"' + sheet.freezePanes.row + '\" ';\n            }\n            if (sheet.freezePanes.column !== 0) {\n                paneString += 'xSplit=\"' + sheet.freezePanes.column + '\" ';\n            }\n            paneString += '/>';\n        }\n        paneString += '</sheetView></sheetViews > ';\n        return paneString;\n    };\n    Workbook.prototype.saveSharedString = function () {\n        var length = this.sharedString.length;\n        if (length > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            var sstStart = '<?xml version=\"1.0\" encoding=\"utf-8\"?><sst uniqueCount=\"' + length + '\" count=\"' + this.sharedStringCount + '\" xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">';\n            var si = '';\n            for (var i = 0; i < length; i++) {\n                if (this.sharedString[i].indexOf('<r>') !== 0) {\n                    si += '<si><t>';\n                    si += this.processString(this.sharedString[i]);\n                    si += '</t></si>';\n                }\n                else {\n                    si += '<si>';\n                    si += this.sharedString[i];\n                    si += '</si>';\n                }\n            }\n            si += '</sst>';\n            this.addToArchive(sstStart + si, 'xl/sharedStrings.xml');\n        }\n    };\n    Workbook.prototype.processString = function (value) {\n        if (value.indexOf('&') !== -1) {\n            value = value.replace(/&/g, '&amp;');\n        }\n        if (value.indexOf('<') !== -1) {\n            value = value.replace(/</g, '&lt;');\n        }\n        if (value.indexOf('>') !== -1) {\n            value = value.replace(/>/g, '&gt;');\n        }\n        return value;\n    };\n    Workbook.prototype.saveStyles = function () {\n        this.updateCellXfsStyleXfs();\n        /* tslint:disable-next-line:max-line-length */\n        var styleTemp = '<?xml version=\"1.0\" encoding=\"utf-8\"?><styleSheet xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" mc:Ignorable=\"x14ac\" xmlns:x14ac=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac\" xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">';\n        styleTemp += this.saveNumberFormats();\n        styleTemp += this.saveFonts();\n        styleTemp += this.saveFills();\n        styleTemp += this.saveBorders();\n        styleTemp += this.saveCellStyleXfs();\n        styleTemp += this.saveCellXfs();\n        styleTemp += this.saveCellStyles();\n        this.addToArchive(styleTemp + '</styleSheet>', 'xl/styles.xml');\n    };\n    Workbook.prototype.updateCellXfsStyleXfs = function () {\n        for (var _i = 0, _a = this.mStyles; _i < _a.length; _i++) {\n            var style = _a[_i];\n            var cellXfs = undefined;\n            if (style.isGlobalStyle) {\n                cellXfs = new CellStyleXfs();\n                cellXfs.xfId = (style.index - 1);\n            }\n            else {\n                cellXfs = new CellXfs();\n                cellXfs.xfId = 0;\n            }\n            //Add font\n            var compareFontResult = this.isNewFont(style);\n            if (!compareFontResult.result) {\n                var font = new Font();\n                font.b = style.bold;\n                font.i = style.italic;\n                font.name = style.fontName;\n                font.sz = style.fontSize;\n                font.u = style.underline;\n                font.color = ('FF' + style.fontColor.replace('#', ''));\n                this.mFonts.push(font);\n                cellXfs.fontId = this.mFonts.length - 1;\n            }\n            else {\n                cellXfs.fontId = compareFontResult.index;\n            }\n            //Add fill\n            if (style.backColor !== 'none') {\n                var backColor = 'FF' + style.backColor.replace('#', '');\n                if (this.mFills.has(backColor)) {\n                    var fillId = this.mFills.get(backColor);\n                    cellXfs.fillId = fillId;\n                }\n                else {\n                    var fillId = this.mFills.size + 2;\n                    this.mFills.set(backColor, fillId);\n                    cellXfs.fillId = (fillId);\n                }\n            }\n            else {\n                cellXfs.fillId = 0;\n            }\n            //Add border            \n            if (!this.isNewBorder(style)) {\n                this.mBorders.push(style.borders);\n                cellXfs.borderId = this.mBorders.length;\n            }\n            else {\n                cellXfs.borderId = 0;\n            }\n            //Add Number Format            \n            if (style.numberFormat !== 'GENERAL') {\n                if (this.mNumFmt.has(style.numberFormat)) {\n                    var numFmt = this.mNumFmt.get(style.numberFormat);\n                    cellXfs.numFmtId = numFmt.numFmtId;\n                }\n                else {\n                    var id = this.mNumFmt.size + 164;\n                    this.mNumFmt.set(style.numberFormat, new NumFmt(id, style.numberFormat));\n                    cellXfs.numFmtId = id;\n                }\n            }\n            else {\n                if (style.numberFormat === 'GENERAL' && style.numFmtId === 14) {\n                    cellXfs.numFmtId = 14;\n                }\n                else {\n                    cellXfs.numFmtId = 0;\n                }\n            }\n            //Add alignment            \n            if (!style.isGlobalStyle) {\n                cellXfs.applyAlignment = 1;\n            }\n            cellXfs.alignment = new Alignment();\n            cellXfs.alignment.indent = style.indent;\n            cellXfs.alignment.horizontal = style.hAlign;\n            cellXfs.alignment.vertical = style.vAlign;\n            cellXfs.alignment.wrapText = style.wrapText ? 1 : 0;\n            cellXfs.alignment.rotation = style.rotation;\n            if (style.isGlobalStyle) {\n                this.mCellStyleXfs.push(cellXfs);\n                this.mCellXfs.push(cellXfs);\n            }\n            else {\n                //Add cellxfs\n                this.mCellXfs.push(cellXfs);\n            }\n        }\n    };\n    Workbook.prototype.saveNumberFormats = function () {\n        if (this.mNumFmt.size >= 1) {\n            var numFmtStyle_1 = '<numFmts count=\"' + (this.mNumFmt.size) + '\">';\n            this.mNumFmt.forEach(function (value, key) {\n                numFmtStyle_1 += '<numFmt numFmtId=\"' + value.numFmtId + '\" formatCode=\"' + value.formatCode.replace(/\"/g, '&quot;') + '\" />';\n            });\n            return (numFmtStyle_1 += '</numFmts>');\n        }\n        else {\n            return '';\n        }\n    };\n    Workbook.prototype.saveFonts = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var fontStyle = '<fonts count=\"' + (this.mFonts.length) + '\">';\n        if (this.mFonts.length >= 1) {\n            for (var _i = 0, _a = this.mFonts; _i < _a.length; _i++) {\n                var font = _a[_i];\n                fontStyle += '<font>';\n                if (font.b) {\n                    fontStyle += '<b />';\n                }\n                if (font.i) {\n                    fontStyle += '<i />';\n                }\n                if (font.u) {\n                    fontStyle += '<u />';\n                }\n                fontStyle += '<sz val=\"' + font.sz + '\" />';\n                fontStyle += '<color rgb=\"' + font.color + '\" />';\n                fontStyle += '<name val=\"' + font.name + '\" /></font>';\n            }\n        }\n        return fontStyle + '</fonts>';\n    };\n    Workbook.prototype.saveFills = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var fillsStyle = '<fills count=\"' + (this.mFills.size + 2) + '\"><fill><patternFill patternType=\"none\"></patternFill></fill><fill><patternFill patternType=\"gray125\"></patternFill></fill>';\n        if (this.mFills.size >= 1) {\n            this.mFills.forEach(function (value, key) {\n                /* tslint:disable-next-line:max-line-length */\n                fillsStyle += '<fill><patternFill patternType=\"solid\"><fgColor rgb=\"' + key + '\" /><bgColor rgb=\"FFFFFFFF\" /></patternFill></fill>';\n            });\n        }\n        return fillsStyle + '</fills>';\n    };\n    Workbook.prototype.saveBorders = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var bordersStyle = '<borders count=\"' + (this.mBorders.length + 1) + '\"><border><left /><right /><top /><bottom /><diagonal /></border>';\n        if (this.mBorders.length >= 1) {\n            for (var _i = 0, _a = this.mBorders; _i < _a.length; _i++) {\n                var borders = _a[_i];\n                if (this.isAllBorder(borders)) {\n                    var color = borders.all.color.replace('#', '');\n                    var lineStyle = borders.all.lineStyle;\n                    /* tslint:disable-next-line:max-line-length */\n                    bordersStyle += '<border><left style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></left><right style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></right><top style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></top><bottom style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></bottom></border>';\n                }\n                else {\n                    /* tslint:disable-next-line:max-line-length */\n                    bordersStyle += '<border><left style=\"' + borders.left.lineStyle + '\"><color rgb=\"FF' + borders.left.color.replace('#', '') + '\" /></left><right style=\"' + borders.right.lineStyle + '\"><color rgb=\"FF' + borders.right.color.replace('#', '') + '\" /></right><top style=\"' + borders.top.lineStyle + '\"><color rgb=\"FF' + borders.top.color.replace('#', '') + '\" /></top><bottom style=\"' + borders.bottom.lineStyle + '\"><color rgb=\"FF' + borders.bottom.color.replace('#', '') + '\" /></bottom></border>';\n                }\n            }\n        }\n        return bordersStyle + '</borders>';\n    };\n    Workbook.prototype.saveCellStyles = function () {\n        var _this = this;\n        var cellStyleString = '<cellStyles  count=\"' + (this.cellStyles.size) + '\">';\n        this.cellStyles.forEach(function (value, key) {\n            cellStyleString += '<cellStyle name=\"' + key + '\" xfId=\"' + _this.cellStyles.get(key).xfId + '\"';\n            if (key === 'Normal') {\n                cellStyleString += ' builtinId=\"0\"';\n            }\n            cellStyleString += ' />';\n        });\n        return cellStyleString += '</cellStyles>';\n    };\n    Workbook.prototype.saveCellStyleXfs = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var cellXfsStyle = '<cellStyleXfs count=\"' + (this.mCellStyleXfs.length + 1) + '\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\" />';\n        if (this.mCellStyleXfs.length >= 1) {\n            for (var _i = 0, _a = this.mCellStyleXfs; _i < _a.length; _i++) {\n                var cellStyleXf = _a[_i];\n                /* tslint:disable-next-line:max-line-length */\n                cellXfsStyle += '<xf numFmtId=\"' + cellStyleXf.numFmtId + '\" fontId=\"' + cellStyleXf.fontId + '\" fillId=\"' + cellStyleXf.fillId + '\" borderId=\"' + cellStyleXf.borderId + '\" ';\n                if (cellStyleXf.alignment !== undefined) {\n                    cellXfsStyle += '>' + this.saveAlignment(cellStyleXf) + '</xf>';\n                }\n                else {\n                    cellXfsStyle += ' />';\n                }\n            }\n        }\n        return cellXfsStyle + '</cellStyleXfs>';\n    };\n    Workbook.prototype.saveCellXfs = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var cellXfsStyle = '<cellXfs count=\"' + (this.mCellXfs.length + 1) + '\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\" xfId=\"0\" />';\n        if (this.mCellXfs.length >= 1) {\n            for (var _i = 0, _a = this.mCellXfs; _i < _a.length; _i++) {\n                var cellXf = _a[_i];\n                /* tslint:disable-next-line:max-line-length */\n                cellXfsStyle += '<xf numFmtId=\"' + cellXf.numFmtId + '\" fontId=\"' + cellXf.fontId + '\" fillId=\"' + cellXf.fillId + '\" borderId=\"' + cellXf.borderId + '\" xfId=\"' + cellXf.xfId + '\" ';\n                if (cellXf.applyAlignment === 1) {\n                    cellXfsStyle += 'applyAlignment=\"1\"';\n                }\n                cellXfsStyle += '>' + this.saveAlignment(cellXf) + '</xf>';\n            }\n        }\n        return cellXfsStyle + '</cellXfs>';\n    };\n    Workbook.prototype.saveAlignment = function (cellXf) {\n        var alignString = '<alignment ';\n        if (cellXf.alignment.horizontal !== undefined) {\n            alignString += 'horizontal=\"' + cellXf.alignment.horizontal + '\" ';\n        }\n        if (cellXf.alignment.indent !== undefined && cellXf.alignment.indent !== 0) {\n            alignString += 'indent=\"' + cellXf.alignment.indent + '\" ';\n        }\n        else if (cellXf.alignment.rotation !== undefined && cellXf.alignment.rotation !== 0) {\n            alignString += 'textRotation=\"' + cellXf.alignment.rotation + '\" ';\n        }\n        if (cellXf.alignment.vertical !== undefined) {\n            alignString += 'vertical=\"' + cellXf.alignment.vertical + '\" ';\n        }\n        alignString += 'wrapText=\"' + cellXf.alignment.wrapText + '\" />';\n        return alignString;\n    };\n    Workbook.prototype.saveApp = function (builtInProperties) {\n        /* tslint:disable-next-line:max-line-length */\n        var appString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Properties xmlns=\"http://schemas.openxmlformats.org/officeDocument/2006/extended-properties\"><Application>Essential XlsIO</Application>';\n        if (builtInProperties !== undefined) {\n            if (builtInProperties.manager !== undefined) {\n                appString += '<Manager>' + builtInProperties.manager + '</Manager>';\n            }\n            if (builtInProperties.company !== undefined) {\n                appString += '<Company>' + builtInProperties.company + '</Company>';\n            }\n        }\n        this.addToArchive((appString + '</Properties>'), 'docProps/app.xml');\n    };\n    Workbook.prototype.saveCore = function (builtInProperties) {\n        var createdDate = new Date();\n        /* tslint:disable-next-line:max-line-length */\n        var coreString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><cp:coreProperties xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:dcterms=\"http://purl.org/dc/terms/\" xmlns:dcmitype=\"http://purl.org/dc/dcmitype/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cp=\"http://schemas.openxmlformats.org/package/2006/metadata/core-properties\">';\n        if (this.builtInProperties !== undefined) {\n            if (builtInProperties.author !== undefined) {\n                coreString += '<dc:creator>' + builtInProperties.author + '</dc:creator>';\n            }\n            if (builtInProperties.subject !== undefined) {\n                coreString += '<dc:subject>' + builtInProperties.subject + '</dc:subject>';\n            }\n            if (builtInProperties.category !== undefined) {\n                coreString += '<cp:category>' + builtInProperties.category + '</cp:category>';\n            }\n            if (builtInProperties.comments !== undefined) {\n                coreString += '<dc:description>' + builtInProperties.comments + '</dc:description>';\n            }\n            if (builtInProperties.title !== undefined) {\n                coreString += '<dc:title>' + builtInProperties.title + '</dc:title>';\n            }\n            if (builtInProperties.tags !== undefined) {\n                coreString += '<cp:keywords>' + builtInProperties.tags + '</cp:keywords>';\n            }\n            if (builtInProperties.status !== undefined) {\n                coreString += '<cp:contentStatus>' + builtInProperties.status + '</cp:contentStatus>';\n            }\n            if (builtInProperties.createdDate !== undefined) {\n                /* tslint:disable-next-line:max-line-length */\n                coreString += '<dcterms:created xsi:type=\"dcterms:W3CDTF\">' + builtInProperties.createdDate.toISOString() + '</dcterms:created>';\n            }\n            else {\n                coreString += '<dcterms:created xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:created>';\n            }\n            if (builtInProperties.modifiedDate !== undefined) {\n                /* tslint:disable-next-line:max-line-length */\n                coreString += '<dcterms:modified xsi:type=\"dcterms:W3CDTF\">' + builtInProperties.modifiedDate.toISOString() + '</dcterms:modified>';\n            }\n            else {\n                coreString += '<dcterms:modified xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:modified>';\n            }\n        }\n        else {\n            coreString += '<dcterms:created xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:created>';\n            coreString += '<dcterms:modified xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:modified>';\n        }\n        /* tslint:disable-next-line:max-line-length */\n        coreString += '</cp:coreProperties>';\n        this.addToArchive(coreString, 'docProps/core.xml');\n    };\n    Workbook.prototype.saveTopLevelRelation = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var topRelation = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\"><Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\" Target=\"xl/workbook.xml\" /><Relationship Id=\"rId2\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties\" Target=\"docProps/app.xml\" /><Relationship Id=\"rId3\" Type=\"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\" Target=\"docProps/core.xml\" /></Relationships>';\n        this.addToArchive(topRelation, '_rels/.rels');\n    };\n    Workbook.prototype.saveWorkbookRelation = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var wbRelation = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">';\n        var length = this.worksheets.length;\n        var count = 0;\n        for (var i = 0; i < length; i++, count++) {\n            /* tslint:disable-next-line:max-line-length */\n            wbRelation += '<Relationship Id=\"rId' + (i + 1).toString() + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\" Target=\"worksheets/sheet' + (i + 1).toString() + '.xml\" />';\n        }\n        /* tslint:disable-next-line:max-line-length */\n        wbRelation += '<Relationship Id=\"rId' + (++count).toString() + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\" Target=\"styles.xml\" />';\n        if (this.sharedStringCount > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            wbRelation += '<Relationship Id=\"rId' + (++count).toString() + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings\" Target=\"sharedStrings.xml\" />';\n        }\n        this.addToArchive((wbRelation + '</Relationships>'), 'xl/_rels/workbook.xml.rels');\n    };\n    Workbook.prototype.saveContentType = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var contentTypeString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Types xmlns=\"http://schemas.openxmlformats.org/package/2006/content-types\"><Default Extension=\"xml\" ContentType=\"application/xml\" /><Default Extension=\"rels\" ContentType=\"application/vnd.openxmlformats-package.relationships+xml\" /><Override PartName=\"/xl/styles.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\" /><Override PartName=\"/xl/workbook.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\" /><Override PartName=\"/docProps/app.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.extended-properties+xml\" /><Override PartName=\"/docProps/core.xml\" ContentType=\"application/vnd.openxmlformats-package.core-properties+xml\" />';\n        var sheetsOverride = '';\n        var length = this.worksheets.length;\n        for (var i = 0; i < length; i++) {\n            /* tslint:disable-next-line:max-line-length */\n            sheetsOverride += '<Override PartName=\"/xl/worksheets/sheet' + (i + 1).toString() + '.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\" />';\n            if (this.worksheets[i].images != undefined && this.worksheets[i].images.length > 0) {\n                /* tslint:disable-next-line:max-line-length */\n                sheetsOverride += '<Override PartName=\"/xl/drawings/drawing' + (i + 1).toString() + '.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.drawing+xml\" />';\n            }\n        }\n        if (this.imageCount > 0)\n            sheetsOverride += '<Default Extension=\"png\" ContentType=\"image/png\" />';\n        if (this.sharedStringCount > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            contentTypeString += '<Override PartName=\"/xl/sharedStrings.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\" />';\n        }\n        this.addToArchive((contentTypeString + sheetsOverride + '</Types>'), '[Content_Types].xml');\n    };\n    Workbook.prototype.addToArchive = function (xmlString, itemName) {\n        if (typeof (xmlString) === 'string') {\n            var blob = new Blob([xmlString], { type: 'text/plain' });\n            var archiveItem = new ZipArchiveItem(blob, itemName);\n            this.mArchive.addItem(archiveItem);\n        }\n        else {\n            var archiveItem = new ZipArchiveItem(xmlString, itemName);\n            this.mArchive.addItem(archiveItem);\n        }\n    };\n    Workbook.prototype.processMergeCells = function (cell, rowIndex, mergeCells) {\n        if (cell.rowSpan !== 0 || cell.colSpan !== 0) {\n            var mCell = new MergeCell();\n            mCell.x = cell.index;\n            mCell.width = cell.colSpan;\n            mCell.y = rowIndex;\n            mCell.height = cell.rowSpan;\n            var startCell = this.getCellName(mCell.y, mCell.x);\n            var endCell = this.getCellName(rowIndex + mCell.height, cell.index + mCell.width);\n            mCell.ref = startCell + ':' + endCell;\n            var mergedCell = mergeCells.add(mCell);\n            var start = { x: mCell.x, y: mCell.y };\n            var end = {\n                x: (cell.index + mCell.width), y: (rowIndex + mCell.height)\n            };\n            this.updatedMergedCellStyles(start, end, cell);\n        }\n        return mergeCells;\n    };\n    Workbook.prototype.updatedMergedCellStyles = function (sCell, eCell, cell) {\n        for (var x = sCell.x; x <= eCell.x; x++) {\n            for (var y = sCell.y; y <= eCell.y; y++) {\n                this.mergedCellsStyle.set(this.getCellName(y, x), { x: x, y: y, styleIndex: cell.styleIndex });\n            }\n        }\n    };\n    /**\n     * Returns the tick count corresponding to the given year, month, and day.\n     * @param year number value of year\n     * @param month number value of month\n     * @param day number value of day\n     */\n    Workbook.prototype.dateToTicks = function (year, month, day) {\n        var ticksPerDay = 10000 * 1000 * 60 * 60 * 24;\n        var daysToMonth365 = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365];\n        var daysToMonth366 = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366];\n        if (year >= 1 && year <= 9999 && month >= 1 && month <= 12) {\n            var days = this.isLeapYear(year) ? daysToMonth366 : daysToMonth365;\n            var y = year - 1;\n            var n = y * 365 + ((y / 4) | 0) - ((y / 100) | 0) + ((y / 400) | 0) + days[month - 1] + day - 1;\n            return n * ticksPerDay;\n        }\n        throw new Error('Not a valid date');\n    };\n    /**\n     * Return the tick count corresponding to the given hour, minute, second.\n     * @param hour number value of hour\n     * @param minute number value if minute\n     * @param second number value of second\n     */\n    Workbook.prototype.timeToTicks = function (hour, minute, second) {\n        if (hour >= 0 && hour < 24 && minute >= 0 && minute < 60 && second >= 0 && second < 60) {\n            var totalSeconds = hour * 3600 + minute * 60 + second;\n            return totalSeconds * 10000 * 1000;\n        }\n        throw new Error('Not valid time');\n    };\n    /**\n     * Checks if given year is a leap year.\n     * @param year Year value.\n     */\n    Workbook.prototype.isLeapYear = function (year) {\n        return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n    };\n    /**\n     * Converts `DateTime` to the equivalent OLE Automation date.\n     */\n    Workbook.prototype.toOADate = function (date) {\n        var ticks = 0;\n        /* tslint:disable-next-line:max-line-length */\n        ticks = this.dateToTicks(date.getFullYear(), (date.getMonth() + 1), date.getDate()) + this.timeToTicks(date.getHours(), date.getMinutes(), date.getSeconds());\n        if (ticks === 0) {\n            return 0.0;\n        }\n        var ticksPerDay = 10000 * 1000 * 60 * 60 * 24;\n        var daysTo1899 = (((365 * 4 + 1) * 25 - 1) * 4 + 1) * 4 + ((365 * 4 + 1) * 25 - 1) * 3 - 367;\n        var doubleDateOffset = daysTo1899 * ticksPerDay;\n        var oaDateMinAsTicks = (((365 * 4 + 1) * 25 - 1) - 365) * ticksPerDay;\n        if (ticks < oaDateMinAsTicks) {\n            throw new Error('Arg_OleAutDateInvalid');\n        }\n        var millisPerDay = 1000 * 60 * 60 * 24;\n        return ((ticks - doubleDateOffset) / 10000) / millisPerDay;\n    };\n    return Workbook;\n}());\nexport { Workbook };\n/**\n * BuiltInProperties Class\n * @private\n */\nvar BuiltInProperties = /** @class */ (function () {\n    function BuiltInProperties() {\n    }\n    return BuiltInProperties;\n}());\nexport { BuiltInProperties };\n"],"names":["CellStyle","this","numFmtId","backColor","fontName","fontSize","fontColor","italic","bold","underline","wrapText","hAlign","vAlign","indent","rotation","numberFormat","type","borders","Borders","isGlobalStyle","Font","sz","name","u","b","i","color","CellXfs","Alignment","CellStyleXfs","CellStyles","xfId","NumFmt","id","code","formatCode","Border","mLine","mColor","lineStyle","left","right","top","bottom","all","__extends","extendStatics","d","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Cell","Cells","_super","_this","apply","arguments","add","cell","inserted","count","_i","_a","length","index","push","Column","Row","Rows","row","Worksheets","Worksheet","isSummaryRowBelow","showGridLines","enableRtl","HyperLink","Grouping","FreezePane","MergeCell","MergeCells","mergeCell","mCell","isIntersecting","intersectingCell","x","Math","min","y","Y","width","max","Width","X","height","Height","ref","split","base","compare","Image","ValueFormatter","cultureName","intl","Internationalization","getFormatFunction","format","isServerRendered","getDateFormat","getNumberFormat","toView","value","result","isNullOrUndefined","displayText","CsvHelper","json","separator","csvStr","undefined","formatter","isMicrosoftBrowser","navigator","msSaveBlob","styles","globalStyles","Map","set","worksheets","parseWorksheet","rows","parseRows","rows_1","Error","parseRow","cells","parseCell","csv","Date","style","parseCellValue","skeleton","error","has","get","val","start","replace","indexOf","save","fileName","buffer","Blob","dataUrl_1","window","URL","createObjectURL","dwlLink","document","createElementNS","download","href","event_1","createEvent","initEvent","dispatchEvent","setTimeout","revokeObjectURL","saveAsBlob","BlobHelper","parts","append","part","blob","getBlob","AutoFilters","Workbook","saveType","culture","currencyString","sharedStringCount","unitsProportions","hyperlinkStyle","currency","mSaveType","mArchive","ZipArchive","sharedString","mFonts","mBorders","mStyles","printTitles","cellStyles","mNumFmt","mFills","mCellXfs","mCellStyleXfs","drawingCount","imageCount","cellStyle","parserCellStyle","cellStylesIn","tFormat","parserWorksheets","builtInProperties","BuiltInProperties","parserBuiltInProperties","csvHelper","jsonBuiltInProperties","author","comments","category","company","manager","subject","title","createdDate","modifiedDate","tags","status","jsonSheet","sheet","mergeCells","mergedCellsStyle","mHyperLinks","toString","columns","parserColumns","parserRows","freeze","parserFreezePanes","printTitle","parserPrintTitle","pageSetup","images","parserImages","autoFilters","parseFilters","hyperLinks","mergeOptions","fromJson","toJson","applyProperties","sourceJson","destJson","keys","getCellName","column","getColumnName","col","strColumnName","iCurrentDigit","String","fromCharCode","titleRowName","printTitleName","fromRow","toRow","titleColName","fromColumn","toColumn","freezePanes","leftCell","columnsLength","rowsLength","rowId","r","parserRow","insertMergedCellsStyle","forEach","key","filter","item","rowToInsert","createCell","insertIndex","splice","styleIndex","cellToInsert","refName","rowIndex","grouping","parseGrouping","parseCells","outlineLevel","isCollapsed","isHidden","cellsLength","spanMin","spanMax","cellId","jsonCell","rowSpan","colSpan","hyperlink","hyperLink","target","getCellValueType","rId","formula","parseCellType","processMergeCells","spans","GetColors","colors","processColor","colorVal","toUpperCase","rgbColors","processCellValue","cellValue","processedVal","startindex","endIndex","processString","substring","subString","text","subSplit","subSplit_1","element","trim","applyGlobalStyle","a","cellType","defStyleIndex","parserBorder","leftBorder","rightBorder","topBorder","bottomBorder","toLowerCase","processCellStyle","switchNumberFormat","numFmt","cellStyleXfs","_b","_c","cellXfs","returnFormat","getNumberPattern","useGrouping","getDatePattern","border","processNumFormatId","compareResult","compareStyle","size","isNewFont","toCompareStyle","font","isNewBorder","bStyle","isAllBorder","toCompareBorder","allBorderStyle","baseStyle","contains","array","toOADate","value_1","sstvalue","imagesLength","image","parserImage","lastRow","lastColumn","horizontalFlip","verticalFlip","blobSaveType","Promise","resolve","reject","obj","blobData","saveInternal","then","proxyUrl","xlsxMatch","match","csvMatch","destroy","saveWorkbook","saveWorksheets","saveSharedString","saveStyles","saveApp","saveCore","saveContentType","saveTopLevelRelation","saveWorkbookRelation","workbookTemp","sheets","sheetName","printTitle_1","addToArchive","saveWorksheet","sheetBlob","sheetString","saveSheetView","colString","pixelsToColumnWidth","rowString","pixelsToRowHeight","_d","_e","_f","_g","_h","_j","hLink","saveDrawings","saveSheetRelations","drawings","sheetDrawingString","imgId","pic","updatelastRowOffset","updatelastColumnOffSet","lastRowOffset","lastColOffset","imageData","convertBase64toImage","saveDrawingRelations","picture","iCurHeight","iCurRow","iCurOffset","iRowHeight","iSpaceInCell","convertToPixels","rowHiddenHeight","round","iCurWidth","iCurCol","iColWidth","ColumnWidthToPixels","colHiddenWidth","img","byteStr","atob","ArrayBuffer","data","Uint8Array","charCodeAt","drawingRelation","pixels","dDigitWidth","trunc","fileWidth","n","relStr","paneString","sstStart","si","updateCellXfsStyleXfs","styleTemp","saveNumberFormats","saveFonts","saveFills","saveBorders","saveCellStyleXfs","saveCellXfs","saveCellStyles","compareFontResult","fontId","fillId","borderId","applyAlignment","alignment","horizontal","vertical","numFmtStyle_1","fontStyle","fillsStyle","bordersStyle","cellStyleString","cellXfsStyle","cellStyleXf","saveAlignment","cellXf","alignString","appString","coreString","toISOString","wbRelation","contentTypeString","sheetsOverride","xmlString","itemName","archiveItem","ZipArchiveItem","addItem","startCell","endCell","end","updatedMergedCellStyles","sCell","eCell","dateToTicks","year","month","day","isLeapYear","timeToTicks","hour","minute","second","date","ticks","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","daysTo1899"],"mappings":"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"}