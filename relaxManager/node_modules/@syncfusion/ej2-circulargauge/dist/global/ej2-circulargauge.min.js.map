{"version":3,"file":"ej2-circulargauge.min.js","sources":["../../src/circular-gauge/utils/helper-common.js","../../src/circular-gauge/utils/helper-circular-gauge.js","../../src/circular-gauge/model/theme.js","../../src/circular-gauge/utils/helper-tooltip.js","../../src/circular-gauge/utils/helper-axis-panel.js","../../src/circular-gauge/utils/helper-axis-renderer.js","../../src/circular-gauge/utils/helper-pointer-renderer.js","../../src/circular-gauge/utils/helper-legend.js","../../src/circular-gauge/model/base.js","../../src/circular-gauge/axes/axis.js","../../src/circular-gauge/annotations/annotations.js","../../src/circular-gauge/model/constants.js","../../src/circular-gauge/user-interaction/tooltip.js","../../src/circular-gauge/axes/axis-renderer.js","../../src/circular-gauge/axes/pointer-renderer.js","../../src/circular-gauge/axes/axis-panel.js","../../src/circular-gauge/legend/legend.js","../../src/circular-gauge/model/pdf-export.js","../../src/circular-gauge/model/image-export.js","../../src/circular-gauge/model/print.js","../../src/circular-gauge/axes/gradient.js","../../src/circular-gauge/circular-gauge.js","../../src/global.js"],"sourcesContent":["/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge Common Helper methods\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { compile as templateComplier, isNullOrUndefined, remove, createElement, merge } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Function to measure the height and width of the text.\n *\n * @param  {string} text - Specifies the text.\n * @param  {FontModel} font - Specifies the font.\n * @param  {string} id - Specifies the id of the text.\n * @returns {Size} - Returns the size of the text.\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('gauge-measuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'gauge-measuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    var style = 'position: absolute; visibility: hidden;' +\n        ';left: 0px; top: -100px; white-space: nowrap;' + getFontStyle(font);\n    htmlObject.innerHTML = text;\n    htmlObject.setAttribute('style', style);\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to find number from string\n *\n * @param {string} value - Specifies the value.\n * @param {number} maxDimension - Specifies the  maximum dimension.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function toPixel(value, maxDimension) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (maxDimension / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get the style from FontModel.\n *\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getFontStyle(font) {\n    var style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/**\n * Function to create the text element.\n *\n * @param {TextOption} options - Specifies the options.\n * @param {FontModel} font - Specifies the font.\n * @param {string} color - Specifies the color.\n * @param {HTMLElement | Element} parent - Specifies the html element.\n * @param {string} styles - Specifies the style.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function textElement(options, font, color, parent, styles) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var renderOptions = {};\n    var renderer = new SvgRenderer('');\n    var style = styles + ' font-size:' + font.size + '; font-style:' + font.fontStyle +\n        ' ; font-weight:' + font.fontWeight + '; font-family:' + font.fontFamily + ';';\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'style': style\n    };\n    var htmlObject = renderer.createText(renderOptions, options.text);\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to append the path to the element.\n *\n * @param {PathOption} options - Specifies the options.\n * @param {Element} element - Specifies the element.\n * @param {CircularGauge} gauge - Specifies the gauge.\n * @param {string} functionName - Specifies the function name.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function appendPath(options, element, gauge, functionName) {\n    functionName = functionName ? functionName : 'Path';\n    var htmlObject = gauge.renderer['draw' + functionName](options);\n    htmlObject.setAttribute('transform', options.transform);\n    htmlObject.setAttribute('style', options.style);\n    element.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to check whether it's a complete circle for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {boolean} Returns the boolean value.\n * @private\n */\nexport function isCompleteAngle(startAngle, endAngle) {\n    var totalAngle = endAngle - startAngle;\n    totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n    return Math.floor(totalAngle / 360) !== 0;\n}\n/**\n * Function to get the degree for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getDegree(startAngle, endAngle) {\n    var degree = endAngle - startAngle;\n    return degree < 0 ? (degree + 360) : degree;\n}\n/**\n * Function to get the angle from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromValue(value, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    var angle;\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    startAngle -= 90;\n    endAngle -= 90;\n    if (isClockWise) {\n        angle = ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue))) + startAngle;\n    }\n    else {\n        angle = endAngle - ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue)));\n        angle = angle < 0 ? 360 + angle : angle;\n    }\n    angle = Math.round(angle) >= 360 ? (angle - 360) : Math.round(angle) < 0 ? (360 + angle) : angle;\n    return angle;\n}\n/**\n * Function to get angle from location for circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {GaugeLocation} point - Specifies the point.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromLocation(center, point) {\n    var angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = Math.round((angle < 0 ? (6.283 + angle) : angle) * (180 / Math.PI)) - 270;\n    angle += angle < 0 ? 360 : 0;\n    return angle;\n}\n/**\n * Function to get the location from angle for circular gauge.\n *\n * @param {number} degree - Specifies the degree.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} center - Specifies the center.\n * @returns {GaugeLocation} - Returns the gauge location.\n * @private\n */\nexport function getLocationFromAngle(degree, radius, center) {\n    var radian = (degree * Math.PI) / 180;\n    return new GaugeLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Function to get the path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {number} start - Specifies the start.\n * @param {number} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} startWidth - Specifies the startWidth.\n * @param {number} endWidth - Specifies the endWidth.\n * @param {Range} range - Specifies the range.\n * @param {Axis} axis - Specifies the axis.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getPathArc(center, start, end, radius, startWidth, endWidth, range, axis) {\n    if (isNullOrUndefined(range) || (range.start !== range.end)) {\n        end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    }\n    var degree = getDegree(start, end);\n    var startRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + startWidth : range.position === 'Cross'\n        && axis.direction === 'AntiClockWise' ? radius - (endWidth + startWidth) / 2 : radius - startWidth) : radius - startWidth;\n    var endRadius = !isNullOrUndefined(range) ? (range.position === 'Outside'\n        && !range.isLinearCircularGradient ? radius + endWidth : range.position === 'Cross' &&\n        axis.direction === 'ClockWise' ? radius - (endWidth + startWidth) / 2 : radius - endWidth) : radius - endWidth;\n    var arcRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + ((startWidth + endWidth) / 2) :\n        range.position === 'Cross' ? (radius - ((startWidth + endWidth) / 4) - (axis.direction === 'ClockWise' ? startWidth : endWidth)\n            / 2) : radius - ((startWidth + endWidth) / 2)) : radius - ((startWidth + endWidth) / 2);\n    var insideArcRadius = !isNullOrUndefined(range) && range.position === 'Cross' ?\n        radius + ((startWidth + endWidth) / 4)\n            - (axis.direction === 'ClockWise' ? startWidth : endWidth) / 2 : radius;\n    var insideEndRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'ClockWise' ?\n        radius - ((startWidth - endWidth) / 2) : radius;\n    var insideStartRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'AntiClockWise' ?\n        radius + ((startWidth - endWidth) / 2) : radius;\n    if (startWidth !== undefined && endWidth !== undefined) {\n        insideEndRadius = range.position === 'Cross' ? (degree > 325 ? insideStartRadius : insideEndRadius) : insideEndRadius;\n        return getRangePath(getLocationFromAngle(start, insideStartRadius, center), getLocationFromAngle(end, insideEndRadius, center), getLocationFromAngle(start, startRadius, center), getLocationFromAngle(end, endRadius, center), insideArcRadius, startRadius, endRadius, arcRadius, (degree < 180) ? 0 : 1, center, degree, range, axis);\n    }\n    else {\n        return getCirclePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, (degree < 180) ? 0 : 1);\n    }\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcPath(start, end, radius, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + pointPosition.x\n        + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo\n        + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z ';\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition) {\n    var roundedPath = 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y;\n    if (isNullOrUndefined(arcStartTwo) && isNullOrUndefined(arcEndTwo)) {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' '\n            + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n    else {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 '\n            + pointPosition.x + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo + ' 0 ' + clockWise + ' 0 '\n            + innerStart.x + ' ' + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n}\n/**\n * Function to get the range path direction for different start and end width of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the options.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {number} radius - Specifies the radius.\n * @param {number} startRadius - Specifies the startRadius.\n * @param {number} endRadius - Specifies the endRadius.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get the range path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start values.\n * @param {GaugeLocation} end - Specifies the end values.\n * @param {GaugeLocation} innerStart - Specifies the innerStart values.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd values.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the string value.\n * @private\n */\nexport function getRangePath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, degree, range, axis) {\n    var startWidth = range.startWidth;\n    var endWidth = range.endWidth;\n    var widthDifference = Math.abs(startWidth - endWidth);\n    var endArc;\n    var startArc;\n    if (startWidth > endWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (endRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (startRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if (endWidth > startWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (startRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (endRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n    }\n    else if ((degree > 260) || (!range.isLinearCircularGradient && axis.startAngle === 0 && axis.endAngle === 0)) {\n        return arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, null, null, null, null, startWidth, endWidth, degree, range, axis);\n    }\n    else {\n        if (range.position === 'Cross' || range.position === 'Outside') {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n        }\n        else {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n        }\n    }\n}\n/**\n * Function to get start and end width range path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the svg path.\n * @private\n */\nexport function arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart, startWidth, endWidth, degree, range, axis) {\n    if (!isNullOrUndefined(range)) {\n        var arcStartOne = void 0;\n        var arcEndOne = void 0;\n        var widthDifference = Math.abs(startWidth - endWidth);\n        var arcStartTwo = void 0;\n        var arcEndTwo = void 0;\n        var startValueToAngle = getAngleFromValue(((range.start + range.end) / 2), axis.maximum, axis.minimum, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var pointPosition = (startWidth < ((endWidth))) ?\n            getLocationFromAngle(startValueToAngle, endRadius, center) : getLocationFromAngle(startValueToAngle, startRadius, center);\n        // eslint-disable-next-line max-len\n        var endDistance = Math.sqrt((Math.pow((innerEnd.x - pointPosition.x), 2)) + (Math.pow((innerEnd.y - pointPosition.y), 2)));\n        var endRadii = endDistance / 2;\n        var centerStartDistance = Math.sqrt((Math.pow((center.x - innerStart.x), 2)) + (Math.pow((center.y - innerStart.y), 2)));\n        var centerDistance = Math.sqrt((Math.pow((center.x - pointPosition.x), 2)) + (Math.pow((center.y - pointPosition.y), 2)));\n        if (range.roundedCornerRadius <= 0) {\n            widthDifference = widthDifference === 0 ? 1 : widthDifference;\n            innerEnd.y = (range.position === 'Cross' && axis.direction === 'ClockWise') ? degree > 325 ?\n                innerEnd.y - (widthDifference / 2) : innerEnd.y : innerEnd.y;\n            var degreeValue = range.position === 'Cross' ? 330 : 325;\n            if (((degreeValue <= degree && degree <= 360))) {\n                arcStartTwo = (axis.direction === 'ClockWise' ? (centerDistance / 2)\n                    : (degree >= 345 ? (startRadius - (widthDifference / 2) - (endWidth / 2))\n                        : range.position === 'Cross' ? (startRadius + (widthDifference / 4) - (startWidth / 2))\n                            : (startRadius - (widthDifference / 2) - (startWidth / 2))));\n                arcEndTwo = (axis.direction === 'ClockWise' ? (centerStartDistance / 2)\n                    : range.position === 'Cross' ?\n                        (endRadius + (widthDifference / 4)) - (endWidth / 4) :\n                        (range.position === 'Outside' && axis.direction === 'AntiClockWise') ? degree < 345 ?\n                            (startRadius - (widthDifference) - (endWidth / 4))\n                            : (startRadius - (widthDifference / 2))\n                            : (endRadius + (widthDifference / 2)) - (endWidth / 2));\n                return arcPath(start, end, radius, endRadii, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition);\n            }\n            else if ((degree > 260 && degree < 325) && range.position !== 'Cross' && range.position !== 'Outside') {\n                var arcStart = (arcRadius - (widthDifference / 2));\n                var arcEnd = (arcRadius - (widthDifference / 2));\n                var angleValueDirection = axis.direction === 'ClockWise' ? degree >= 310 : degree < 345;\n                if (degree < 310) {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcStart, arcEnd, clockWise);\n                }\n                else if (degree >= 310 || angleValueDirection) {\n                    arcStart = (arcRadius - (widthDifference));\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcEnd, arcStart, clockWise);\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n            else {\n                if (range.position === 'Cross') {\n                    var endRadiusValue = axis.direction === 'ClockWise' ? degree <= 300 && degree >= 260 ?\n                        endRadius - (widthDifference / 2) - (startWidth / 4) : endRadius\n                        - (widthDifference) - (startWidth / 2) : degree <= 300 && degree >= 260 ?\n                        endRadius + (widthDifference / 4) - (startWidth / 4) :\n                        endRadius + (widthDifference / 4) - (startWidth / 2);\n                    var startRadiusValue = axis.direction === 'ClockWise' ? degree > 325 ? degree > 340 ? (startRadius - startWidth)\n                        - (widthDifference / 4) : startRadius - (widthDifference / 4)\n                        : startRadius : startRadius - (widthDifference / 4);\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadiusValue, endRadiusValue, clockWise);\n                }\n                else if (range.position === 'Outside') {\n                    if (degree < 325 && degree > 285) {\n                        var arcTwo = void 0;\n                        var startGreater = startWidth / 2;\n                        var endGreater = endWidth / 2;\n                        var arcOne = arcTwo = arcRadius + (widthDifference / 2) + startGreater + endGreater;\n                        innerEnd.y = axis.direction === 'ClockWise' && startWidth !== endWidth && startWidth > widthDifference ?\n                            innerEnd.y - (widthDifference / 2) : innerEnd.y + startGreater;\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcOne, arcTwo, clockWise);\n                    }\n                    else {\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n                    }\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n        }\n        else {\n            var degreeAngle = axis.endAngle < 4 ? 356 : 360;\n            clockWise = degree > degreeAngle ? 0 : clockWise;\n            var degreeValueOne = axis.direction === 'ClockWise' ? 327 : 322;\n            var degreeValueTwo = axis.direction === 'ClockWise' ? 328 : 325;\n            if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n            else if ((degree <= degreeAngle && degree > degreeValueOne) && range.roundedCornerRadius > 0) {\n                arcStartOne = axis.direction === 'ClockWise' ? degree < 334 && degree > 324 ? endRadii - (widthDifference / 2) :\n                    endRadii - (widthDifference / 4) : endRadii;\n                arcStartTwo = (centerDistance / 2);\n                arcEndTwo = axis.direction === 'ClockWise' ? ((centerStartDistance / 2) + (widthDifference / 2)) :\n                    (centerStartDistance / 2);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition);\n            }\n            else if (degree > 270 && degree < degreeValueTwo) {\n                var startAddArc = endRadius + (widthDifference / 2) - (endWidth / 2);\n                var startSubArc = endRadius - (widthDifference / 2) - (endWidth / 2);\n                arcStartOne = (startRadius - (widthDifference / 2) - (startWidth / 2));\n                arcEndOne = (axis.direction === 'ClockWise' ? startSubArc : startAddArc);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, null, null, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, null);\n            }\n            else {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n        }\n    }\n    else {\n        return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n    }\n}\n/**\n * Function to get start and end width range rounded path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y +\n        ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n        outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n}\n/**\n * Function to get the rounded path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} actualStart - Specifies the actualStart value.\n * @param {number} actualEnd - Specifies the actualEnd value.\n * @param {number} oldStart - Specifies the oldStart value.\n * @param {number} oldEnd - Specifies the oldEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getRoundedPathArc(center, actualStart, actualEnd, oldStart, oldEnd, radius, startWidth, endWidth, range, axis) {\n    actualEnd -= isCompleteAngle(actualStart, actualEnd) ? 0.0001 : 0;\n    var degree = getDegree(actualStart, actualEnd);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    return arcWidthPathCalculation(getLocationFromAngle(actualStart, radius, center), getLocationFromAngle(actualEnd, radius, center), getLocationFromAngle(actualStart, startRadius, center), getLocationFromAngle(actualEnd, endRadius, center), radius, arcRadius, arcRadius, arcRadius, (degree < 180) ? 0 : 1, center, getLocationFromAngle(oldEnd, radius, center), getLocationFromAngle(oldEnd, endRadius, center), getLocationFromAngle(oldStart, radius, center), getLocationFromAngle(oldStart, startRadius, center), startWidth, endWidth, degree, range, axis);\n}\n/**\n * Function to get the circular path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCirclePath(start, end, radius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n        radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y;\n}\n/**\n * Function to compile the template function for circular gauge.\n *\n * @param {string} template - Specifies the template.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {Function} - Returns the template function.\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getTemplateFunction(template, gauge) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = null;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var e;\n    try {\n        if (isNaN(parseFloat(template)) && document.querySelectorAll(template).length) {\n            if ((template.charAt(0) !== 'a' || template.charAt(0) !== 'A') && template.length !== 1) {\n                templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n            }\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/**\n * Function to remove the element from id.\n *\n * @param {string} id Specifies the id\n * @returns {void}\n * @private\n */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * Function to get element from id.\n *\n * @param {string} id - Specifies the id.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Function to convert the number from string.\n *\n * @param {string} value - Specifies the value.\n * @param {number} containerSize - Specifies the container size.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisiblePointer} - Returns the pointer and axis index.\n * @private\n */\nexport function getPointer(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        pointerIndex: +tempString[tempString.length - 1]\n    };\n}\n/**\n * Function to convert the label using format for cirular gauge.\n *\n * @param {string} format - Specifies the format.\n * @returns {string} - Returns th string.\n * @private\n */\nexport function getLabelFormat(format) {\n    var customLabelFormat = format && format.match('{value}') !== null;\n    var skeleton = customLabelFormat ? '' : format;\n    return skeleton;\n}\n/**\n * Function to calculate the marker shape for circular gauge.\n *\n * @param {GaugeLocation} location - Specifies the location.\n * @param {string} shape - Specifies the shape.\n * @param {Size} size - Specifies the size.\n * @param {string} url - Specifies the url.\n * @param {PathOption} options - Specifies the path option.\n * @returns {PathOption} - Returns the path.\n * @private\n */\nexport function calculateShapes(location, shape, size, url, options) {\n    var path;\n    var width = size.width;\n    var height = size.height;\n    var locX = location.x;\n    var locY = location.y;\n    var x = location.x + (-width / 2);\n    var y = location.y + (-height / 2);\n    var isLegend = options.id.indexOf('Shape') > -1;\n    var space;\n    switch (shape) {\n        case 'Circle':\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Triangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + (width / 2)) + ' ' + y + ' ' + 'L' + ' ' + (x + width) + ' ' +\n                    (y + height) + 'L' + ' ' + x + ' ' + (y + height) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX - height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX - height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'InvertedTriangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + width) + ' ' + y + ' ' + 'L' + ' ' + (x + (width / 2)) + ' ' + (y + height) +\n                    'L' + ' ' + x + ' ' + (y) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX + height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX + height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n        case 'RightArrow':\n            space = 2;\n            path = 'M' + ' ' + (locX + (-width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (-width / 2)) + ' ' + (locY + (height / 2)) + ' L' + ' ' + (locX + (-width / 2)) + ' ' +\n                (locY + (height / 2) - space) + ' ' + 'L' + ' ' + (locX + (width / 2) - (2 * space)) + ' ' + (locY) +\n                ' L' + (locX + (-width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'LeftArrow':\n            options.fill = options.stroke;\n            options.stroke = 'transparent';\n            space = 2;\n            path = 'M' + ' ' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (-width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2) - space) + ' L' + ' ' + (locX + (-width / 2) + (2 * space))\n                + ' ' + (locY) + ' L' + (locX + (width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n    }\n    return options;\n}\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d, transform, style) {\n        if (transform === void 0) { transform = ''; }\n        if (style === void 0) { style = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color;\n        _this['stroke-width'] = width;\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        _this.transform = transform;\n        _this.style = style;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect) {\n        var _this = _super.call(this, id) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = border.color;\n        _this['stroke-width'] = border.width;\n        return _this;\n    }\n    return RectOption;\n}(CustomizeOption));\nexport { RectOption };\n/**\n * Internal class size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/**\n * Internal use of circular gauge location\n */\nvar GaugeLocation = /** @class */ (function () {\n    function GaugeLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return GaugeLocation;\n}());\nexport { GaugeLocation };\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.transform = '';\n        _this.baseLine = 'auto';\n        _this.x = x;\n        _this.y = y;\n        _this.anchor = anchor;\n        _this.text = text;\n        _this.transform = transform;\n        _this.baseLine = baseLine;\n        return _this;\n    }\n    return TextOption;\n}(CustomizeOption));\nexport { TextOption };\n/** @private */\nvar VisibleLabels = /** @class */ (function () {\n    function VisibleLabels(text, value, size) {\n        this.text = text;\n        this.value = value;\n        this.size = size;\n    }\n    return VisibleLabels;\n}());\nexport { VisibleLabels };\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge Helper methods\n */\nimport { setStyleAttribute } from '@syncfusion/ej2-base';\nimport { isCompleteAngle, getDegree } from './helper-common';\n/**\n * Function to set style to the element.\n *\n * @param {HTMLElement} element - Specifies the element.\n * @param {string} fill - Specifies the fill of the element.\n * @param {BorderModel} border - Specifies the border of the element.\n * @returns {void}\n * @private\n */\nexport function setStyles(element, fill, border) {\n    setStyleAttribute(element, {\n        'stroke': border.color, 'stroke-width': border.width,\n        'fill': fill\n    });\n}\n/**\n * Function to get the value from angle for circular gauge.\n *\n * @param {number} angle - Specifies the angle.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returs the number.\n * @private\n */\nexport function getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    angle = angle < startAngle ? (angle + 360) : angle;\n    if (isClockWise) {\n        return (((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;\n    }\n    else {\n        return maximumValue - ((((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue);\n    }\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisibleRange} - Returns the current point.\n * @private\n */\nexport function getRange(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        rangeIndex: +tempString.split('Range_')[1]\n    };\n}\n","/**\n * Specifies gauge Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: null\n    };\n    Theme.legendLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: null\n    };\n})(Theme || (Theme = {}));\n/**\n * @param {string} theme theme\n * @returns {string[]} palette\n * @private */\nexport function getRangePalette(theme) {\n    var palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    switch (theme.toLowerCase()) {\n        case 'tailwind':\n            palette = ['#0369A1', '#14B8A6', '#15803D', '#334155', '#5A61F6',\n                '#65A30D', '#8B5CF6', '#9333EA', '#F59E0B', '#F97316'];\n            break;\n        case 'tailwinddark':\n            palette = ['#10B981', '#22D3EE', '#2DD4BF', '#4ADE80', '#8B5CF6',\n                '#E879F9', '#F472B6', '#F87171', '#F97316', '#FCD34D'];\n            break;\n        case 'bootstrap5':\n            palette = ['#262E0B', '#668E1F', '#AF6E10', '#862C0B', '#1F2D50',\n                '#64680B', '#311508', '#4C4C81', '#0C7DA0', '#862C0B'];\n            break;\n        case 'bootstrap5dark':\n            palette = ['#5ECB9B', '#A860F1', '#EBA844', '#557EF7', '#E9599B',\n                '#BFC529', '#3BC6CF', '#7A68EC', '#74B706', '#EA6266'];\n            break;\n        case 'fluentui':\n            palette = ['#614570', '#4C6FB1', '#CC6952', '#3F579A', '#4EA09B',\n                '#6E7A89', '#D4515C', '#E6AF5D', '#639751', '#9D4D69'];\n            break;\n        case 'fluentuidark':\n            palette = ['#8AB113', '#2A72D5', '#43B786', '#584EC6', '#E85F9C',\n                '#6E7A89', '#EA6266', '#EBA844', '#26BC7A', '#BC4870'];\n            break;\n    }\n    return palette;\n}\n/**\n * Function to get ThemeStyle\n *\n * @param {GaugeTheme} theme theme\n * @returns {IThemeStyle} style\n * @private */\nexport function getThemeStyle(theme) {\n    var style;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n        case 'fabricdark':\n        case 'bootstrapdark':\n            style = {\n                backgroundColor: '#333232',\n                titleFontColor: '#ffffff',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#000000',\n                labelColor: '#DADADA',\n                lineColor: '#C8C8C8',\n                majorTickColor: '#C8C8C8',\n                minorTickColor: '#9A9A9A',\n                pointerColor: '#9A9A9A',\n                capColor: '#9A9A9A',\n                needleColor: '#9A9A9A',\n                needleTailColor: '#9A9A9A',\n                labelFontFamily: 'Segoe UI',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                tooltipFillColor: '#ffffff',\n                tooltipFontColor: '#000000',\n                labelColor: '#FFFFFF',\n                lineColor: '#FFFFFF',\n                majorTickColor: '#FFFFFF',\n                minorTickColor: '#FFFFFF',\n                pointerColor: '#FFFFFF',\n                capColor: '#FFFFFF',\n                needleColor: '#FFFFFF',\n                needleTailColor: '#FFFFFF',\n                labelFontFamily: 'Segoe UI',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                labelColor: '#212529',\n                lineColor: '#DEE2E6',\n                majorTickColor: '#ADB5BD',\n                minorTickColor: '#CED4DA',\n                pointerColor: '#6C757D',\n                capColor: '#6C757D',\n                needleColor: '#6C757D',\n                needleTailColor: '#6C757D',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                labelFontFamily: 'HelveticaNeue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'tailwind':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#374151',\n                tooltipFillColor: '#111827',\n                tooltipFontColor: '#F9FAFB',\n                labelColor: '#6B7280',\n                lineColor: '#E5E7EB',\n                majorTickColor: '#9CA3AF',\n                minorTickColor: '#9CA3AF',\n                pointerColor: '#1F2937',\n                capColor: '#1F2937',\n                needleColor: '#1F2937',\n                needleTailColor: '#1F2937',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                labelFontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                titleFontWeight: '500'\n            };\n            break;\n        case 'tailwinddark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#D1D5DB',\n                tooltipFillColor: '#F9FAFB',\n                tooltipFontColor: '#1F2937',\n                labelColor: '#9CA3AF',\n                lineColor: '#374151',\n                majorTickColor: '#6B7280',\n                minorTickColor: '#6B7280',\n                pointerColor: '#9CA3AF',\n                capColor: '#9CA3AF',\n                needleColor: '#9CA3AF',\n                needleTailColor: '#9CA3AF',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                labelFontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                titleFontWeight: '500'\n            };\n            break;\n        case 'bootstrap5':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#343A40',\n                tooltipFillColor: '#212529',\n                tooltipFontColor: '#F9FAFB',\n                labelColor: '#495057',\n                lineColor: '#E5E7EB',\n                majorTickColor: '#9CA3AF',\n                minorTickColor: '#9CA3AF',\n                pointerColor: '#1F2937',\n                capColor: '#1F2937',\n                needleColor: '#1F2937',\n                needleTailColor: '#1F2937',\n                fontFamily: 'Helvetica Neue',\n                fontSize: '14px',\n                labelFontFamily: 'Helvetica Neue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                titleFontWeight: '500'\n            };\n            break;\n        case 'bootstrap5dark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#E9ECEF',\n                tooltipFillColor: '#E9ECEF',\n                tooltipFontColor: '#212529',\n                labelColor: '#CED4DA',\n                lineColor: '#343A40',\n                majorTickColor: '#6C757D',\n                minorTickColor: '#6C757D',\n                pointerColor: '#ADB5BD',\n                capColor: '#ADB5BD',\n                needleColor: '#ADB5BD',\n                needleTailColor: '#ADB5BD',\n                fontFamily: 'Helvetica Neue',\n                fontSize: '14px',\n                labelFontFamily: 'Helvetica Neue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                titleFontWeight: '500'\n            };\n            break;\n        case 'fluentui':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#201F1E',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#323130',\n                labelColor: '#3B3A39',\n                lineColor: '#EDEBE9',\n                majorTickColor: '#C8C6C4',\n                minorTickColor: '#C8C6C4',\n                pointerColor: '#A19F9D',\n                capColor: '#A19F9D',\n                needleColor: '#A19F9D',\n                needleTailColor: '#A19F9D',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                labelFontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                titleFontWeight: '600'\n            };\n            break;\n        case 'fluentuidark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#F3F2F1',\n                tooltipFillColor: '#252423',\n                tooltipFontColor: '#F3F2F1',\n                labelColor: '#C8C6C4',\n                lineColor: '#292827',\n                majorTickColor: '#484644',\n                minorTickColor: '#484644',\n                pointerColor: '#797775',\n                capColor: '#797775',\n                needleColor: '#797775',\n                needleTailColor: '#797775',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                labelFontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                titleFontWeight: '600'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                labelColor: '#212121',\n                lineColor: '#E0E0E0',\n                majorTickColor: '#9E9E9E',\n                minorTickColor: '#9E9E9E',\n                pointerColor: '#757575',\n                capColor: '#757575',\n                needleColor: '#757575',\n                needleTailColor: '#757575',\n                labelFontFamily: 'Segoe UI',\n                titleFontWeight: 'Normal'\n            };\n            break;\n    }\n    return style;\n}\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge Tooltip Helper methods\n */\nimport { GaugeLocation, getTemplateFunction, Size } from './helper-common';\nimport { remove } from '@syncfusion/ej2-base';\n/**\n * Function to get the mouse position\n *\n * @param {number} pageX - Specifies the pageX value.\n * @param {number} pageY - Specifies the pageY value.\n * @param {Element} element - Specifies the element.\n * @returns {GaugeLocation} - Returns the location.\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new GaugeLocation((pageX - positionX), (pageY - positionY));\n}\nexport function getElementSize(template, gauge, parent) {\n    var elementSize;\n    var element;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = getTemplateFunction(template, gauge);\n    var tooltipData = templateFn ? templateFn({}, null, null, gauge.element.id + 'Template') : [];\n    if (templateFn && tooltipData.length) {\n        element = gauge.createElement('div', { id: gauge.element.id + '_Measure_Element' });\n        gauge.element.appendChild(element);\n        var templateElement = templateFn({}, null, null, gauge.element.id + 'Template');\n        var templateLength = templateElement.length;\n        while (templateLength > 0) {\n            element.appendChild(templateElement[0]);\n            templateLength--;\n        }\n        parent.appendChild(element);\n        elementSize = new Size(parent.getBoundingClientRect().width, parent.getBoundingClientRect().height);\n        remove(element);\n    }\n    return elementSize;\n}\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge axis-panel Helper methods\n */\n/**\n * Function to calculate the sum of array values.\n *\n * @param {number} from - Specifies the from value.\n * @param {number} to - Specifies the to value.\n * @param {number[]} values - Specifies the number.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function calculateSum(from, to, values) {\n    var sum = 0;\n    var length = values.length;\n    for (; from < length; from++) {\n        sum += values[from];\n    }\n    return sum;\n}\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge axis-render Helper methods\n */\n/**\n * Function to get range color from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {Range[]} ranges - Specifies the ranges.\n * @param {string} color - Specifies the color.\n * @returns {string} - Returns the color.\n * @private\n */\nexport function getRangeColor(value, ranges, color) {\n    var min = 0;\n    var max = 0;\n    var currentRange = ranges.filter(function (range) {\n        min = Math.min(range.start, range.end);\n        max = Math.max(range.start, range.end);\n        return (value >= min && max >= value);\n    });\n    return currentRange.length ? currentRange[0].rangeColor : color;\n}\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge pointer-render Helper methods\n */\nimport { getLocationFromAngle, isCompleteAngle, getDegree } from './helper-common';\n/**\n * Function to calculate the value for linear animation effect\n *\n * @param {number} currentTime - Specifies the currentTime.\n * @param {number} startValue - Specifies the startValue.\n * @param {number} endValue - Specifies the endValue.\n * @param {number} duration - Specifies the duration.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Function to calculate the complete path arc of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} start - Specifies the start value.\n * @param {number} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {boolean} checkMinValue - Specifies the checkMinValue value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getCompleteArc(center, start, end, radius, innerRadius, checkMinValue) {\n    end -= isCompleteAngle(start, end) && !checkMinValue ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    return getCompletePath(center, getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, getLocationFromAngle(start, innerRadius, center), getLocationFromAngle(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the complete path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge Common Helper methods\n */\nimport { measureText } from '../utils/helper-common';\nimport { createElement } from '@syncfusion/ej2-base';\n/**\n * @param {number} maxWidth - Specifies the maximum width.\n * @param {string} text - Specifies the text.\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the label.\n * @private */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * @param {string} text - Specifies the text.\n * @param {number} x - Specifies the x value.\n * @param {number} y - Specifies the y value.\n * @param {number} areaWidth - Specifies the area width.\n * @param {string} id - Specifies the id.\n * @param {Element} element - Specifies the element.\n * @returns {void}\n * @private */\nexport function showTooltip(text, x, y, areaWidth, id, element) {\n    //let id1: string = 'EJ2_legend_tooltip';\n    var tooltip = document.getElementById(id);\n    var width = measureText(text, {\n        fontFamily: 'Segoe UI', size: '12px',\n        fontStyle: 'Normal', fontWeight: 'Regular'\n    }).width + 5;\n    x = (x + width > areaWidth) ? x - width : x;\n    if (!tooltip) {\n        tooltip = createElement('div', {\n            innerHTML: text,\n            id: id,\n            styles: 'top:' + (y + 15).toString() + 'px;left:' + (x + 15).toString() +\n                'px;background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n                'position:absolute;border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n                'padding-bottom : 2px; padding-top : 2px; font-size:12px; font-family: \"Segoe UI\"'\n        });\n        element.appendChild(tooltip);\n    }\n    else {\n        tooltip.innerHTML = text;\n        tooltip.style.top = (y + 15).toString() + 'px';\n        tooltip.style.left = (x + 15).toString() + 'px';\n    }\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Sets and gets the options to customize the color and width of the borders in circular gauge.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Sets and gets the font style for the circular gauge.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Sets and gets the options to customize the tooltip properties for range tooltip.\n */\nvar RangeTooltip = /** @class */ (function (_super) {\n    __extends(RangeTooltip, _super);\n    function RangeTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], RangeTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], RangeTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], RangeTooltip.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], RangeTooltip.prototype, \"showAtMousePosition\", void 0);\n    return RangeTooltip;\n}(ChildProperty));\nexport { RangeTooltip };\n/**\n * Sets and gets the options to customize the tooltip for annotation in circular gauge.\n */\nvar AnnotationTooltip = /** @class */ (function (_super) {\n    __extends(AnnotationTooltip, _super);\n    function AnnotationTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], AnnotationTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], AnnotationTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], AnnotationTooltip.prototype, \"border\", void 0);\n    return AnnotationTooltip;\n}(ChildProperty));\nexport { AnnotationTooltip };\n/**\n * Sets and gets the margin of circular gauge.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Sets and gets the options to customize the tooltip of the circular gauge.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, RangeTooltip)\n    ], TooltipSettings.prototype, \"rangeSettings\", void 0);\n    __decorate([\n        Complex({}, AnnotationTooltip)\n    ], TooltipSettings.prototype, \"annotationSettings\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], TooltipSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"showAtMousePosition\", void 0);\n    __decorate([\n        Property('Pointer')\n    ], TooltipSettings.prototype, \"type\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/member-delimiter-style */\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the axis line in circular gauge component.\n */\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Line.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Line.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], Line.prototype, \"color\", void 0);\n    return Line;\n}(ChildProperty));\nexport { Line };\n/**\n * Sets and gets the axis label in circular gauge component.\n */\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Label.prototype, \"font\", void 0);\n    __decorate([\n        Property('')\n    ], Label.prototype, \"format\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Label.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], Label.prototype, \"hiddenLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Label.prototype, \"offset\", void 0);\n    __decorate([\n        Property(true)\n    ], Label.prototype, \"shouldMaintainPadding\", void 0);\n    return Label;\n}(ChildProperty));\nexport { Label };\n/**\n * Sets and gets the option to customize the ranges of an axis in circular gauge component.\n */\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.isLinearCircularGradient = false;\n        return _this;\n    }\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"start\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radius\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"startWidth\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"endWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], Range.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('')\n    ], Range.prototype, \"legendText\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Range.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radialGradient\", void 0);\n    return Range;\n}(ChildProperty));\nexport { Range };\n/**\n * Sets and gets the major and minor tick lines of an axis in circular gauge component.\n */\nvar Tick = /** @class */ (function (_super) {\n    __extends(Tick, _super);\n    function Tick() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Tick.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"interval\", void 0);\n    __decorate([\n        Property(0)\n    ], Tick.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"color\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Tick.prototype, \"position\", void 0);\n    __decorate([\n        Property(false)\n    ], Tick.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property('0')\n    ], Tick.prototype, \"dashArray\", void 0);\n    return Tick;\n}(ChildProperty));\nexport { Tick };\n/**\n * Sets and gets the needle cap of pointer in circular gauge component.\n */\nvar Cap = /** @class */ (function (_super) {\n    __extends(Cap, _super);\n    function Cap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"radialGradient\", void 0);\n    __decorate([\n        Complex({ color: null, width: 8 }, Border)\n    ], Cap.prototype, \"border\", void 0);\n    __decorate([\n        Property(8)\n    ], Cap.prototype, \"radius\", void 0);\n    return Cap;\n}(ChildProperty));\nexport { Cap };\n/**\n * Sets and gets the pointer needle in the circular gauge component.\n */\nvar NeedleTail = /** @class */ (function (_super) {\n    __extends(NeedleTail, _super);\n    function NeedleTail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0 }, Border)\n    ], NeedleTail.prototype, \"border\", void 0);\n    __decorate([\n        Property('0%')\n    ], NeedleTail.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"radialGradient\", void 0);\n    return NeedleTail;\n}(ChildProperty));\nexport { NeedleTail };\n/**\n * Sets and gets the animation of pointers in circular gauge component.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Sets and gets the annotation element for an axis in circular gauge component.\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(90)\n    ], Annotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property('50%')\n    ], Annotation.prototype, \"radius\", void 0);\n    __decorate([\n        Property('-1')\n    ], Annotation.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], Annotation.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Complex({ size: '12px', color: '#686868' }, Font)\n    ], Annotation.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"description\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Sets and gets the pointers of an axis in circular gauge component.\n */\nvar Pointer = /** @class */ (function (_super) {\n    __extends(Pointer, _super);\n    function Pointer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"value\", void 0);\n    __decorate([\n        Property('Needle')\n    ], Pointer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Pointer.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radius\", void 0);\n    __decorate([\n        Property(20)\n    ], Pointer.prototype, \"pointerWidth\", void 0);\n    __decorate([\n        Complex({}, Cap)\n    ], Pointer.prototype, \"cap\", void 0);\n    __decorate([\n        Complex({}, Font)\n    ], Pointer.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, NeedleTail)\n    ], Pointer.prototype, \"needleTail\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], Pointer.prototype, \"border\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], Pointer.prototype, \"animation\", void 0);\n    __decorate([\n        Property('Circle')\n    ], Pointer.prototype, \"markerShape\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerHeight\", void 0);\n    __decorate([\n        Property('')\n    ], Pointer.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"description\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleStartWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleEndWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radialGradient\", void 0);\n    return Pointer;\n}(ChildProperty));\nexport { Pointer };\n/**\n * Sets and gets the options to customize the axis for the circular gauge component.\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        /**\n         * Sets and gets the minimum value of an axis in the circular gauge component.\n         *\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleLabels = [];\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"showLastLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"hideIntersectingLabel\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"roundingPlaces\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({}, Line)\n    ], Axis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Collection([{}], Range)\n    ], Axis.prototype, \"ranges\", void 0);\n    __decorate([\n        Collection([{}], Pointer)\n    ], Axis.prototype, \"pointers\", void 0);\n    __decorate([\n        Collection([{}], Annotation)\n    ], Axis.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 10 }, Tick)\n    ], Axis.prototype, \"majorTicks\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 5 }, Tick)\n    ], Axis.prototype, \"minorTicks\", void 0);\n    __decorate([\n        Property(200)\n    ], Axis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(160)\n    ], Axis.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('ClockWise')\n    ], Axis.prototype, \"direction\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"background\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"rangeGap\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"startAndEndRangeGap\", void 0);\n    __decorate([\n        Complex({}, Label)\n    ], Axis.prototype, \"labelStyle\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","import { getTemplateFunction, getElement, stringToNumber, getFontStyle, getLocationFromAngle, removeElement } from '../utils/helper-common';\nimport { annotationRender } from '../model/constants';\nimport { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Annotation Module handles the Annotation of the axis.\n */\nvar Annotations = /** @class */ (function () {\n    /**\n     * Constructor for Annotation module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Annotations(gauge) {\n        this.gauge = gauge;\n        this.elementId = gauge.element.id;\n    }\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Method to render the annotation for circular gauge.\n     */\n    Annotations.prototype.renderAnnotation = function (axis, index) {\n        var _this = this;\n        var width = this.gauge.availableSize.width;\n        var element = createElement('div', {\n            id: this.elementId + '_Annotations_' + index\n        });\n        var parentElement = getElement(this.elementId + '_Secondary_Element');\n        if (!isNullOrUndefined(document.getElementById(this.elementId + '_Secondary_Element'))) {\n            document.getElementById(this.elementId + '_Secondary_Element').style.width = width + 'px';\n        }\n        axis.annotations.map(function (annotation, annotationIndex) {\n            if (annotation.content !== null) {\n                _this.createTemplate(element, annotationIndex, index);\n            }\n        });\n        if (parentElement && element.childElementCount) {\n            parentElement.appendChild(element);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.gauge.renderReactTemplates();\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Method to create annotation template for circular gauge.\n     */\n    Annotations.prototype.createTemplate = function (element, annotationIndex, axisIndex) {\n        var _this = this;\n        var axis = this.gauge.axes[axisIndex];\n        var annotation = axis.annotations[annotationIndex];\n        var childElement = createElement('div', {\n            id: this.elementId + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex,\n            styles: 'position: absolute; z-index:' + annotation.zIndex + ';transform:' +\n                (annotation.autoAngle ? 'rotate(' + (annotation.angle - 90) + 'deg)' : 'rotate(0deg)') + ';'\n        });\n        var argsData = {\n            cancel: false, name: annotationRender, content: annotation.content,\n            axis: axis, annotation: annotation, textStyle: annotation.textStyle\n        };\n        this.gauge.trigger('annotationRender', argsData, function (observedArgs) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var templateFn;\n            var templateElement;\n            if (!argsData.cancel) {\n                templateFn = getTemplateFunction(argsData.content, _this.gauge);\n                if (templateFn && templateFn(axis, _this.gauge, argsData.content, _this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex).length) {\n                    templateElement = Array.prototype.slice.call(templateFn(axis, _this.gauge, argsData.content, _this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex));\n                    var length_1 = templateElement.length;\n                    for (var i = 0; i < length_1; i++) {\n                        childElement.appendChild(templateElement[i]);\n                    }\n                }\n                else {\n                    childElement.appendChild(createElement('div', {\n                        innerHTML: argsData.content,\n                        id: 'StringTemplate',\n                        styles: getFontStyle(argsData.textStyle)\n                    }));\n                }\n                _this.updateLocation(childElement, axis, annotation);\n                element.appendChild(childElement);\n                var parentElement = document.getElementById(_this.elementId + '_Secondary_Element');\n            }\n        });\n    };\n    /**\n     * Method to update the annotation location for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Annotation} annotation - Specifies the annotation.\n     * @returns {void}\n     */\n    Annotations.prototype.updateLocation = function (element, axis, annotation) {\n        var location = getLocationFromAngle(annotation.angle - 90, stringToNumber(annotation.radius, axis.currentRadius), this.gauge.midPoint);\n        var elementRect = this.measureElementRect(element);\n        element.style.left = (location.x - (elementRect.width / 2)) + 'px';\n        element.style.top = (location.y - (elementRect.height / 2)) + 'px';\n        element.setAttribute('aria-label', annotation.description || 'Annotation');\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    Annotations.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Annotations';\n    };\n    /**\n     * To destroy the annotation.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    Annotations.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    /**\n    * Function to measure the element rect.\n    *\n    * @param {HTMLElement} element - Specifies the html element.\n    * @returns {ClientRect} - Returns the client rect.\n    * @private\n    */\n    Annotations.prototype.measureElementRect = function (element) {\n        document.body.appendChild(element);\n        var bounds = element.getBoundingClientRect();\n        removeElement(element.id);\n        return bounds;\n    };\n    return Annotations;\n}());\nexport { Annotations };\n","/**\n * Specifies the gauge constant value\n */\n/**\n * Sets and gets loaded event name in the circular gauge component.\n *\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Sets and gets load event name in the circular gauge component.\n *\n * @private\n */\nexport var load = 'load';\n/**\n * Sets and gets animation complete event name in the circular gauge component.\n *\n * @private\n */\nexport var animationComplete = 'animationComplete';\n/**\n * Sets and gets axis label render event name in the circular gauge component.\n *\n * @private\n */\nexport var axisLabelRender = 'axisLabelRender';\n/**\n * Sets and gets radius calculate event name in the circular gauge component.\n *\n * @private\n */\nexport var radiusCalculate = 'radiusCalculate';\n/**\n * Sets and gets tooltip render event name in the circular gauge component.\n *\n * @private\n */\nexport var tooltipRender = 'tooltipRender';\n/**\n * Sets and gets annotation render event name in the circular gauge component.\n *\n * @private\n */\nexport var annotationRender = 'annotationRender';\n/**\n * Sets and gets gauge mouse move event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseMove = 'gaugeMouseMove';\n/**\n * Sets and gets gauge mouse leave event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseLeave = 'gaugeMouseLeave';\n/**\n * Sets and gets gauge mouse down event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseDown = 'gaugeMouseDown';\n/**\n * Sets and gets gauge mouse up event name in circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseUp = 'gaugeMouseUp';\n/**\n * Sets and gets drag start event name in the circular gauge component.\n *\n * @private\n */\nexport var dragStart = 'dragStart';\n/**\n * Sets and gets drag move event name in the circular gauge component.\n *\n * @private\n */\nexport var dragMove = 'dragMove';\n/**\n * Sets and gets drag end event name in the circular gauge component.\n *\n * @private\n */\nexport var dragEnd = 'dragEnd';\n/**\n * Sets and gets resize event name in the circular gauge component.\n *\n * @private\n */\nexport var resized = 'resized';\n/**\n * Sets and gets before print event name in the circular gauge component.\n *\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Sets and gets pointer start event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerStart = 'pointerStart';\n/**\n * Sets and gets pointer move event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerMove = 'pointerMove';\n/**\n * Sets and gets pointer end event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerEnd = 'pointerEnd';\n/**\n * Sets and gets range start event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeStart = 'rangeStart';\n/**\n * Sets and gets range move event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeMove = 'rangeMove';\n/**\n * Sets and gets range end event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeEnd = 'rangeEnd';\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { stringToNumber, getAngleFromValue, getLocationFromAngle, getPointer, getLabelFormat, Rect } from '../utils/helper-common';\nimport { getMousePosition, getElementSize } from '../utils/helper-tooltip';\nimport { Browser, createElement, remove } from '@syncfusion/ej2-base';\nimport { tooltipRender } from '../model/constants';\n/**\n * Sets and gets the module that handles the tooltip of the circular gauge\n */\nvar GaugeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for Tooltip module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function GaugeTooltip(gauge) {\n        this.gauge = gauge;\n        this.tooltipId = this.gauge.element.id + '_CircularGauge_Tooltip';\n        this.tooltip = gauge.tooltip;\n        this.textStyle = {\n            color: this.tooltip.textStyle.color, opacity: this.tooltip.textStyle.opacity,\n            fontFamily: this.tooltip.textStyle.fontFamily, fontStyle: this.tooltip.textStyle.fontStyle,\n            fontWeight: this.tooltip.textStyle.fontWeight, size: this.tooltip.textStyle.size\n        };\n        this.borderStyle = this.tooltip.border;\n        this.addEventListener();\n    }\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Method to render the tooltip for circular gauge.\n     */\n    GaugeTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        this.gaugeId = this.gauge.element.getAttribute('id');\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var location;\n        var samePointerEle = false;\n        var isTooltipRender = false;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            target = touchArg.target;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n        }\n        else {\n            target = e.target;\n            pageX = e.pageX;\n            pageY = e.pageY;\n        }\n        if ((this.tooltip.type.indexOf('Pointer') > -1) && (target.id.indexOf('_Pointer_') >= 0) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            if (this.pointerEle !== null) {\n                samePointerEle = (this.pointerEle === target);\n            }\n            isTooltipRender = true;\n            var svgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var elementRect = this.gauge.element.getBoundingClientRect();\n            var axisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_1 = new Rect(Math.abs(elementRect.left - svgRect_1.left), Math.abs(elementRect.top - svgRect_1.top), svgRect_1.width, svgRect_1.height);\n            var currentPointer = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentPointer.axisIndex];\n            this.currentPointer = (this.currentAxis.pointers)[currentPointer.pointerIndex];\n            var angle_1 = getAngleFromValue(this.currentPointer.currentValue, this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var tooltipFormat = this.gauge.tooltip.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = tooltipFormat && tooltipFormat.match('{value}') !== null;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var format = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(tooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            if (this.tooltipEle.childElementCount !== 0 && !this.gauge.enablePointerDrag && !this.gauge.tooltip.showAtMousePosition) {\n                return null;\n            }\n            var roundValue = this.roundedValue(this.currentPointer.currentValue);\n            var pointerContent_1 = customLabelFormat ?\n                tooltipFormat.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                format(roundValue);\n            location = getLocationFromAngle(angle_1, this.currentAxis.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.template && ((angle_1 >= 150 && angle_1 <= 250) || (angle_1 >= 330 && angle_1 <= 360) ||\n                (angle_1 >= 0 && angle_1 <= 45))) ? (location.x + 10) : location.x;\n            var tooltipArgs = {\n                name: tooltipRender, cancel: false, content: pointerContent_1, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, pointer: this.currentPointer, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Pointer'\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var pointerTooltip = function (tooltipArgs) {\n                var template = tooltipArgs.tooltip.template;\n                if (template !== null && template.length === 1) {\n                    template = template[template[0]];\n                }\n                if (!tooltipArgs.tooltip.showAtMousePosition) {\n                    if (template) {\n                        var elementSize = getElementSize(template, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(axisRect_1.left - svgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_1, angle_1, pointerContent_1, tooltipArgs.location) : rect_1;\n                    }\n                    else {\n                        _this.findPosition(rect_1, angle_1, pointerContent_1, tooltipArgs.location);\n                    }\n                }\n                else {\n                    tooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_1;\n                }\n                if (!tooltipArgs.cancel && !samePointerEle) {\n                    _this.textStyle.color = tooltipArgs.tooltip.textStyle.color || _this.gauge.themeStyle.tooltipFontColor;\n                    _this.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily || tooltipArgs.tooltip.textStyle.fontFamily;\n                    _this.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        tooltipArgs.tooltip.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, tooltipArgs, template, _this.arrowInverted, _this.tooltipRect, _this.gauge, tooltipArgs.tooltip.fill, _this.textStyle, tooltipArgs.tooltip.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (template && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, tooltipArgs, pointerTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Range') > -1) && (target.id.indexOf('_Range_') >= 0) && (!this.gauge.isDrag) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            isTooltipRender = true;\n            var rangeSvgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var rangeElementRect = this.gauge.element.getBoundingClientRect();\n            var rangeAxisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_2 = new Rect(Math.abs(rangeElementRect.left - rangeSvgRect_1.left), Math.abs(rangeElementRect.top - rangeSvgRect_1.top), rangeSvgRect_1.width, rangeSvgRect_1.height);\n            var currentRange = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentRange.axisIndex];\n            this.currentRange = (this.currentAxis.ranges)[currentRange.pointerIndex];\n            var rangeAngle_1 = getAngleFromValue((this.currentRange.end - Math.abs((this.currentRange.end - this.currentRange.start) / 2)), this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var rangeTooltipFormat = this.gauge.tooltip.rangeSettings.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = rangeTooltipFormat && (rangeTooltipFormat.match('{end}') !== null ||\n                rangeTooltipFormat.match('{start}') !== null);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeFormat = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(rangeTooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            var roundStartValue = this.roundedValue(this.currentRange.start);\n            var roundEndValue = this.roundedValue(this.currentRange.end);\n            var startData_1 = (this.currentRange.start).toString();\n            var endData_1 = (this.currentRange.end).toString();\n            var rangeContent_1 = customLabelFormat ?\n                rangeTooltipFormat.replace(/{start}/g, startData_1).replace(/{end}/g, endData_1) :\n                'Start : ' + rangeFormat(roundStartValue) + '<br>' + 'End : ' + rangeFormat(roundEndValue);\n            location = getLocationFromAngle(rangeAngle_1, this.currentRange.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.rangeSettings.template && ((rangeAngle_1 >= 150 && rangeAngle_1 <= 250) ||\n                (rangeAngle_1 >= 330 && rangeAngle_1 <= 360) ||\n                (rangeAngle_1 >= 0 && rangeAngle_1 <= 45))) ? (location.x + 10) : location.x;\n            var rangeTooltipArgs = {\n                name: tooltipRender, cancel: false, content: rangeContent_1, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, range: this.currentRange, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Range'\n            };\n            var rangeTooltipTextStyle_1 = { color: this.gauge.tooltip.rangeSettings.textStyle.color, opacity: this.gauge.tooltip.rangeSettings.textStyle.opacity,\n                fontFamily: this.gauge.tooltip.rangeSettings.textStyle.fontFamily, fontStyle: this.gauge.tooltip.rangeSettings.textStyle.fontStyle,\n                fontWeight: this.gauge.tooltip.rangeSettings.textStyle.fontWeight, size: this.gauge.tooltip.rangeSettings.textStyle.size\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeTooltip = function (rangeTooltipArgs) {\n                var rangeTemplate = rangeTooltipArgs.tooltip.rangeSettings.template;\n                if (rangeTemplate !== null && rangeTemplate.length === 1) {\n                    rangeTemplate = rangeTemplate[rangeTemplate[0]];\n                }\n                if (rangeTemplate) {\n                    rangeTemplate = rangeTemplate.replace(/[$]{start}/g, startData_1);\n                    rangeTemplate = rangeTemplate.replace(/[$]{end}/g, endData_1);\n                }\n                if (!_this.tooltip.rangeSettings.showAtMousePosition) {\n                    if (rangeTemplate) {\n                        var elementSize = getElementSize(rangeTemplate, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(rangeAxisRect_1.left - rangeSvgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_2, rangeAngle_1, rangeContent_1, rangeTooltipArgs.location) : rect_2;\n                    }\n                    else {\n                        _this.findPosition(rect_2, rangeAngle_1, rangeContent_1, rangeTooltipArgs.location);\n                    }\n                }\n                else {\n                    rangeTooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_2;\n                }\n                if (!rangeTooltipArgs.cancel) {\n                    rangeTooltipTextStyle_1.color = rangeTooltipArgs.tooltip.rangeSettings.textStyle.color ||\n                        _this.gauge.themeStyle.tooltipFontColor;\n                    rangeTooltipTextStyle_1.fontFamily = _this.gauge.themeStyle.fontFamily ||\n                        rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontFamily;\n                    rangeTooltipTextStyle_1.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        rangeTooltipArgs.tooltip.rangeSettings.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, rangeTooltipArgs, rangeTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, rangeTooltipArgs.tooltip.rangeSettings.fill, rangeTooltipTextStyle_1, rangeTooltipArgs.tooltip.rangeSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (rangeTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, rangeTooltipArgs, rangeTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Annotation') > -1) && this.checkParentAnnotationId(target) && ((!this.gauge.isDrag)) &&\n            (this.annotationTargetElement.id.indexOf(this.gaugeId) >= 0)) {\n            isTooltipRender = true;\n            var annotationSvgRect = this.gauge.svgObject.getBoundingClientRect();\n            var annotationElementRect = this.gauge.element.getBoundingClientRect();\n            var annotationAxisRect = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_3 = new Rect(Math.abs(annotationElementRect.left - annotationSvgRect.left), Math.abs(annotationElementRect.top - annotationSvgRect.top), annotationSvgRect.width, annotationSvgRect.height);\n            var currentAnnotation = getPointer(this.annotationTargetElement.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentAnnotation.axisIndex];\n            this.currentAnnotation = (this.currentAxis.annotations)[currentAnnotation.pointerIndex];\n            var annotationAngle = (this.currentAnnotation.angle - 90);\n            this.tooltipElement();\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n            var annotationContent = (this.gauge.tooltip.annotationSettings.format !== null) ?\n                this.gauge.tooltip.annotationSettings.format : '';\n            location = getLocationFromAngle(annotationAngle, stringToNumber(this.currentAnnotation.radius, this.currentAxis.currentRadius), this.gauge.midPoint);\n            location.x = (this.tooltip.annotationSettings.template && ((annotationAngle >= 150 && annotationAngle <= 250) ||\n                (annotationAngle >= 330 && annotationAngle <= 360) || (annotationAngle >= 0 && annotationAngle <= 45))) ?\n                (location.x + 10) : location.x;\n            var annotationTooltipArgs = {\n                name: tooltipRender, cancel: false, content: annotationContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, annotation: this.currentAnnotation, event: e, gauge: this.gauge, appendInBodyTag: false,\n                type: 'Annotation'\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var annotationTooltip = function (annotationTooltipArgs) {\n                var annotationTemplate = annotationTooltipArgs.tooltip.annotationSettings.template;\n                if (annotationTemplate !== null && annotationTemplate.length === 1) {\n                    annotationTemplate = annotationTemplate[annotationTemplate[0]];\n                }\n                var elementSizeAn = _this.annotationTargetElement.getBoundingClientRect();\n                _this.tooltipPosition = 'RightTop';\n                _this.arrowInverted = true;\n                annotationTooltipArgs.location.x = annotationTooltipArgs.location.x + (elementSizeAn.width / 2);\n                _this.tooltipRect = new Rect(rect_3.x, rect_3.y, rect_3.width, rect_3.height);\n                if (!annotationTooltipArgs.cancel && (_this.gauge.tooltip.annotationSettings.format !== null ||\n                    _this.gauge.tooltip.annotationSettings.template !== null)) {\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.color = annotationTooltipArgs.tooltip.textStyle.color ||\n                        _this.gauge.themeStyle.tooltipFontColor;\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily ||\n                        annotationTooltipArgs.tooltip.textStyle.fontFamily;\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        annotationTooltipArgs.tooltip.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, annotationTooltipArgs, annotationTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, annotationTooltipArgs.tooltip.annotationSettings.fill, annotationTooltipArgs.tooltip.annotationSettings.textStyle, annotationTooltipArgs.tooltip.annotationSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (annotationTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, annotationTooltipArgs, annotationTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else {\n            this.removeTooltip();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.clearTemplate();\n        }\n        var gaugeElement = document.getElementById(this.gaugeId);\n        var gaugeRect = gaugeElement.getBoundingClientRect();\n        var tooltipRect = isTooltipRender ? this.tooltipEle.getBoundingClientRect() : null;\n        if (isTooltipRender && this.tooltipEle.offsetLeft < 0 && (tooltipRect.left - gaugeRect.left) < 0) {\n            var tooltipLeft = this.tooltipEle.style.left.split(\"px\")[0];\n            this.tooltipEle.style.left = parseInt(tooltipLeft) + (gaugeRect.left - tooltipRect.left) + 'px';\n        }\n        if (isTooltipRender && tooltipRect.top < 0) {\n            this.tooltipEle.style.top = 0 + 'px';\n        }\n    };\n    /**\n     * Method to create tooltip svg element.\n     *\n     * @param {Tooltip} svgTooltip - Specifies the tooltip element.\n     * @param {ITooltipRenderEventArgs} tooltipArg - Specifies the tooltip arguments.\n     * @param {string} template - Specifies the tooltip template.\n     * @param {boolean} arrowInverted - Specifies the boolean value.\n     * @param {Rect} tooltipRect - Specifies the rect element.\n     * @param {CircularGauge} gauge - Specifies the gauge instance.\n     * @param {string} fill - Spcifies the fill color of the tooltip.\n     * @param {FontModel} textStyle - Spcifies the text style of the tooltip.\n     * @param {BorderModel} border - Specifies the border of the tooltip.\n     * @returns {Tooltip} - Returns the tooltip.\n     */\n    GaugeTooltip.prototype.svgTooltipCreate = function (svgTooltip, tooltipArg, template, arrowInverted, tooltipRect, gauge, fill, textStyle, border) {\n        svgTooltip = new Tooltip({\n            enable: true,\n            data: { value: tooltipArg.content },\n            template: template,\n            enableAnimation: tooltipArg.tooltip.enableAnimation,\n            content: [tooltipArg.content],\n            location: tooltipArg.location,\n            inverted: arrowInverted,\n            areaBounds: tooltipRect,\n            fill: fill || gauge.themeStyle.tooltipFillColor,\n            textStyle: textStyle,\n            availableSize: gauge.availableSize,\n            border: border\n        });\n        return svgTooltip;\n    };\n    /**\n     * Method to create or modify tolltip element.\n     *\n     * @returns {void}\n     */\n    GaugeTooltip.prototype.tooltipElement = function () {\n        if (document.getElementById(this.tooltipId)) {\n            this.tooltipEle = document.getElementById(this.tooltipId);\n        }\n        else {\n            this.tooltipEle = createElement('div', {\n                id: this.tooltipId,\n                className: 'EJ2-CircularGauge-Tooltip',\n                styles: 'position: absolute;pointer-events:none;'\n            });\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n        }\n    };\n    /**\n     * Method to get parent annotation element.\n     *\n     * @param {Element} child - Specifies the annotation element.\n     * @returns {boolean} - Returns the boolean value.\n     */\n    GaugeTooltip.prototype.checkParentAnnotationId = function (child) {\n        this.annotationTargetElement = child.parentElement;\n        while (this.annotationTargetElement != null) {\n            if ((this.annotationTargetElement.id.indexOf('_Annotation_') >= 0)) {\n                child = this.annotationTargetElement;\n                return true;\n            }\n            this.annotationTargetElement = this.annotationTargetElement.parentElement;\n        }\n        return false;\n    };\n    /**\n     * Method to apply label rounding places.\n     *\n     * @param {number} currentValue - Specifies the current value.\n     * @returns {number} - Returns the round number.\n     */\n    GaugeTooltip.prototype.roundedValue = function (currentValue) {\n        var roundNumber = this.currentAxis.roundingPlaces ?\n            parseFloat(currentValue.toFixed(this.currentAxis.roundingPlaces)) :\n            currentValue;\n        return roundNumber;\n    };\n    /**\n     * Method to find the position of the tooltip anchor for circular gauge.\n     *\n     * @param {Rect} rect - Specifies the rect element.\n     * @param {number} angle - Specifies the angle.\n     * @param {string} text - Specifies the text.\n     * @param {GaugeLocation} location - Specifies the location.\n     * @returns {Rect} - Returns the rect element.\n     */\n    GaugeTooltip.prototype.findPosition = function (rect, angle, text, location) {\n        var addLeft;\n        var addTop;\n        var addHeight;\n        var addWidth;\n        switch (true) {\n            case (angle >= 0 && angle < 45):\n                this.arrowInverted = true;\n                addLeft = (angle >= 15 && angle <= 30) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'RightBottom';\n                break;\n            case (angle >= 45 && angle < 90):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomRight';\n                break;\n            case (angle >= 90 && angle < 135):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomLeft';\n                break;\n            case (angle >= 135 && angle < 180):\n                this.arrowInverted = true;\n                addTop = (angle >= 150 && angle <= 160) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'LeftBottom';\n                break;\n            case (angle >= 180 && angle < 225):\n                this.arrowInverted = true;\n                addHeight = (angle >= 200 && angle <= 225) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'LeftTop';\n                break;\n            case (angle >= 225 && angle < 270):\n                this.arrowInverted = false;\n                addWidth = (angle >= 250 && angle <= 290) ? rect.width : Math.abs(rect.x - location.x);\n                this.tooltipRect = new Rect(rect.x, rect.y, addWidth, rect.height);\n                this.tooltipPosition = 'TopLeft';\n                break;\n            case (angle >= 270 && angle < 315):\n                this.arrowInverted = false;\n                addLeft = (angle >= 270 && angle > 290) ? location.x : 0;\n                this.tooltipRect = new Rect(rect.x + addLeft, rect.y, rect.width, rect.height);\n                this.tooltipPosition = 'TopRight';\n                break;\n            case (angle >= 315 && angle <= 360):\n                this.arrowInverted = true;\n                addHeight = (angle >= 315 && angle <= 340) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'RightTop';\n                break;\n        }\n        return this.tooltipRect;\n    };\n    GaugeTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n            var tooltip = document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0];\n            if (tooltip) {\n                remove(tooltip);\n            }\n            this.pointerEle = null;\n        }\n    };\n    GaugeTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To bind events for tooltip module\n     */\n    GaugeTooltip.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.gauge.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n        this.gauge.element.addEventListener('contextmenu', this.removeTooltip);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To unbind events for tooltip module\n     */\n    GaugeTooltip.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.gauge.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    GaugeTooltip.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Tooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    GaugeTooltip.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n        this.removeEventListener();\n    };\n    return GaugeTooltip;\n}());\nexport { GaugeTooltip };\n","import { stringToNumber, toPixel, textElement, appendPath, getAngleFromValue, getLocationFromAngle, getPathArc, getRoundedPathArc, getDegree, isCompleteAngle, PathOption, TextOption } from '../utils/helper-common';\nimport { getRangeColor } from '../utils/helper-axis-renderer';\nimport { getRangePalette } from '../model/theme';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar AxisRenderer = /** @class */ (function () {\n    /**\n     * Constructor for axis renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function AxisRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis element of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisOuterLine = function (axis, index, element, gauge) {\n        var background = axis.background;\n        this.setRangeColor(axis);\n        if (background !== null) {\n            appendPath(new PathOption(gauge.element.id + '_AxisOuterLine_' + index, background, 0, 'transparent', null, '0', getPathArc(gauge.midPoint, 0, 360, (Math.min(axis.rect.width, axis.rect.height) / 2)), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to check the angles.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.checkAngles = function (axis) {\n        axis.startAngle = axis.startAngle >= 360 ? 360 : axis.startAngle <= -360 ? -360 : axis.startAngle;\n        axis.endAngle = axis.endAngle >= 360 ? 360 : axis.endAngle <= -360 ? -360 : axis.endAngle;\n    };\n    /**\n     * Method to render the axis line of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLine = function (axis, index, element, gauge) {\n        var startAngle = axis.startAngle;\n        var endAngle = axis.endAngle;\n        var color = axis.lineStyle.color || this.gauge.themeStyle.lineColor;\n        if (axis.lineStyle.width > 0 && this.gauge.allowComponentRender) {\n            startAngle = !isCompleteAngle(startAngle, endAngle) ? startAngle : [0, endAngle = 360][0];\n            appendPath(new PathOption(gauge.element.id + '_AxisLine_' + index, 'transparent', axis.lineStyle.width, color, null, axis.lineStyle.dashArray, getPathArc(gauge.midPoint, startAngle - 90, endAngle - 90, axis.currentRadius), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis labels of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLabels = function (axis, index, element, gauge) {\n        var labelElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Labels_' + index\n        });\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var labelCollection = axis.visibleLabels;\n        var location;\n        var textWidth;\n        var textHeight;\n        var labelsVisible = true;\n        var currentTextWidth;\n        var currentTextHeight;\n        var previousLocation;\n        var currentLocation;\n        var lastLabelLocation;\n        var lastLabelAngle;\n        var lastLabelAnchor;\n        var lastTextWidth;\n        var lastTextHeight;\n        var style = axis.labelStyle;\n        var anchor;\n        var angle;\n        var label;\n        var radius = axis.currentRadius;\n        var checkLabelOpposed = 0;\n        checkLabelOpposed = (style.position === 'Inside' && axis.majorTicks.position === 'Outside' &&\n            axis.minorTicks.position === 'Outside') || (style.position === 'Outside' &&\n            axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Inside') ?\n            axis.lineStyle.width + axis.currentRadius / 20 :\n            (style.position === axis.majorTicks.position ? axis.currentRadius / 20 : axis.currentRadius / 40);\n        var labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : checkLabelOpposed;\n        var color = style.font.color || this.gauge.themeStyle.labelColor;\n        if (style.position === 'Outside') {\n            radius += (axis.nearSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2)) + (labelPadding / 2);\n        }\n        else if (style.position === 'Cross') {\n            radius = radius - (axis.maxLabelSize.height / 4) - axis.labelStyle.offset;\n        }\n        else {\n            radius -= (axis.farSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2) + (style.autoAngle ? labelPadding : 0));\n        }\n        //To get and store lastlabelposition\n        if (axis.hideIntersectingLabel) {\n            lastLabelAngle = Math.round(getAngleFromValue(labelCollection[labelCollection.length - 1].value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            lastLabelLocation = getLocationFromAngle(lastLabelAngle, radius, gauge.midPoint);\n            lastLabelAnchor = this.findAnchor(lastLabelLocation, style, lastLabelAngle, labelCollection[labelCollection.length - 1]);\n            lastTextWidth = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                labelCollection[0].size.width : labelCollection[labelCollection.length - 1].size.width;\n            lastTextHeight = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                (!style.autoAngle ? labelCollection[0].size.height : labelCollection[0].size.width) :\n                (!style.autoAngle ? labelCollection[labelCollection.length - 1].size.height :\n                    labelCollection[labelCollection.length - 1].size.width);\n            lastTextHeight = lastTextHeight - this.offsetAxisLabelsize(lastLabelAngle, lastTextHeight);\n            lastLabelLocation = this.getAxisLabelStartPosition(lastLabelLocation, lastTextWidth, style, lastTextHeight, lastLabelAnchor, lastLabelAngle);\n        }\n        for (var i = 0, length_1 = labelCollection.length; i < length_1; i++) {\n            label = labelCollection[i];\n            angle = Math.round(getAngleFromValue(label.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            location = getLocationFromAngle(angle, radius, gauge.midPoint);\n            anchor = this.findAnchor(location, style, angle, label);\n            //To get the current label and previous label position for initial stage\n            if (axis.hideIntersectingLabel) {\n                currentLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                currentTextWidth = label.size.width;\n                currentTextHeight = !style.autoAngle ? label.size.height : currentTextWidth;\n                currentTextHeight = currentTextHeight - this.offsetAxisLabelsize(angle, currentTextHeight);\n                currentLocation = this.getAxisLabelStartPosition(currentLocation, currentTextWidth, style, currentTextHeight, anchor, angle);\n                if (i === 0) {\n                    previousLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation = this.getAxisLabelStartPosition(previousLocation, textWidth, style, textHeight, anchor, angle);\n                }\n            }\n            if ((i === 0 && style.hiddenLabel === 'First') || (i === (length_1 - 1) && style.hiddenLabel === 'Last')) {\n                continue;\n            }\n            style.font.fontFamily = style.font.fontFamily || this.gauge.themeStyle.labelFontFamily;\n            if (axis.hideIntersectingLabel && (i !== 0)) {\n                //To remove the labels which is intersecting with last label.\n                var lastlabel = ((i !== (labelCollection.length - 1)) && ((isCompleteAngle(axis.startAngle, axis.endAngle) ||\n                    axis.showLastLabel))) ? this.FindAxisLabelCollision(lastLabelLocation, lastTextWidth, lastTextHeight, currentLocation, currentTextWidth, currentTextHeight) : true;\n                //Checking wether the axis label is intersecting with previous label or not.\n                labelsVisible = (this.FindAxisLabelCollision(previousLocation, textWidth, textHeight, currentLocation, currentTextWidth, currentTextHeight) && lastlabel);\n            }\n            else {\n                labelsVisible = true;\n            }\n            if (labelsVisible || (i === labelCollection.length - 1)) {\n                //To hide first and last label based on requirement\n                label.text = (!axis.showLastLabel && ((isCompleteAngle(axis.startAngle, axis.endAngle) && style.hiddenLabel !== 'First') ||\n                    !labelsVisible)\n                    && axis.hideIntersectingLabel && (i === (length_1 - 1))) ? '' : label.text;\n                label.text = (axis.showLastLabel && axis.hideIntersectingLabel && isCompleteAngle(axis.startAngle, axis.endAngle)\n                    && (i === 0)) ? '' : label.text;\n                textElement(new TextOption(gauge.element.id + '_Axis_' + index + '_Label_' + i, location.x, location.y, anchor, label.text, style.autoAngle ? 'rotate(' + (angle + 90) + ',' + (location.x) + ',' + location.y + ')' : '', 'auto'), style.font, style.useRangeColor ? getRangeColor(label.value, axis.ranges, color) : color, labelElement, 'pointer-events:none;');\n                if (axis.hideIntersectingLabel) {\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation.x = currentLocation.x;\n                    previousLocation.y = currentLocation.y;\n                }\n            }\n        }\n        element.appendChild(labelElement);\n    };\n    /**\n     * Method to find the anchor of the axis label.\n     *\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {Label} style - Specifies the label style.\n     * @param {number} angle - Specifies the angle.\n     * @param {VisibleLabels} label - Specifies the labels.\n     * @returns {string} - Returns the anchor.\n     * @private\n     */\n    AxisRenderer.prototype.findAnchor = function (location, style, angle, label) {\n        if (style.autoAngle) {\n            return 'middle';\n        }\n        var anchor = style.position === 'Inside' ?\n            ((angle > 120 && angle < 240) ? 'start' : ((300 < angle || angle < 60) ? 'end' : 'middle')) :\n            ((angle > 120 && angle < 240) ? 'end' : ((300 < angle || angle < 60) ? 'start' : 'middle'));\n        location.y += style.position === 'Inside' ?\n            ((angle >= 240 && angle <= 300) ? (label.size.height / 2) :\n                (angle >= 60 && angle <= 120) ? 0 : label.size.height / 4) :\n            ((angle >= 240 && angle <= 300) ? 0 :\n                (angle >= 60 && angle <= 120) ? label.size.height / 2 : label.size.height / 4);\n        return anchor;\n    };\n    /**\n     * Methode to check whether the labels are intersecting or not.\n     *\n     * @param {GaugeLocation} previousLocation - Specifies the previous location.\n     * @param {number} previousWidth - Specifies the previous width.\n     * @param {number} previousHeight - Specifies the previous height.\n     * @param {GaugeLocation} currentLocation - Specifies the current location.\n     * @param {number} currentWidth - Specifies the current width.\n     * @param {number} currentHeight - Specifies the current height.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    AxisRenderer.prototype.FindAxisLabelCollision = function (previousLocation, previousWidth, previousHeight, currentLocation, currentWidth, currentHeight) {\n        var labelVisisble = ((previousLocation.x > (currentLocation.x + (currentWidth))) ||\n            ((previousLocation.x + (previousWidth)) < (currentLocation.x)) ||\n            ((previousLocation.y + (previousHeight)) < (currentLocation.y)) ||\n            ((previousLocation.y) > (currentLocation.y + (currentHeight))));\n        return labelVisisble;\n    };\n    /**\n     * Methode to get anchor position of label as start.\n     *\n     * @param {GaugeLocation} actualLocation - Specifies the actual location.\n     * @param {number} textWidth - Specifies the text width.\n     * @param {Label} style - Specifies the label style.\n     * @param {number} textHeight - Specifies the text height.\n     * @param {string} anchorPosition - Specifies the anchor position.\n     * @param {number} angle - Specifies the angle.\n     * @returns {GaugeLocation} - Returns the gauge location.\n     * @private\n     */\n    AxisRenderer.prototype.getAxisLabelStartPosition = function (actualLocation, textWidth, style, textHeight, anchorPosition, angle) {\n        if (anchorPosition === 'end') {\n            actualLocation.x = actualLocation.x - textWidth;\n        }\n        else if (anchorPosition === 'middle') {\n            actualLocation.x = actualLocation.x - (textWidth / 2);\n        }\n        return actualLocation;\n    };\n    /**\n     * Methode to offset label height and width based on angle.\n     *\n     * @param {number} angle - Specifies the angle.\n     * @param {number} size - Specifies the size.\n     * @returns {number} - Returns the fineal size.\n     * @private\n     */\n    AxisRenderer.prototype.offsetAxisLabelsize = function (angle, size) {\n        var finalSize = ((angle >= 20 && angle <= 60) || (angle >= 120 && angle <= 160) || (angle >= 200 && angle <= 240) ||\n            (angle >= 300 && angle <= 340)) ? size / 5 : 0;\n        return finalSize;\n    };\n    /**\n     * Method to render the axis minor tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMinorTickLines = function (axis, index, element, gauge) {\n        var minorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MinorTickLines_' + index\n        });\n        var minorLineStyle = axis.minorTicks;\n        var minorInterval = minorLineStyle.interval !== null ?\n            minorLineStyle.interval : (axis.visibleRange.interval / 2);\n        var isRangeColor = minorLineStyle.useRangeColor;\n        var color = minorLineStyle.color || this.gauge.themeStyle.minorTickColor;\n        if (minorLineStyle.width && minorLineStyle.height && minorInterval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max; i <= max; i += minorInterval) {\n                if (this.majorValues.indexOf(+i.toFixed(3)) < 0) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_Minor_TickLine_' + index + '_' + i, 'transparent', minorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, minorLineStyle.dashArray, this.calculateTicks(i, minorLineStyle, axis), '', 'pointer-events:none;'), minorTickElements, gauge);\n                }\n            }\n            element.appendChild(minorTickElements);\n        }\n    };\n    /**\n     * Method to render the axis major tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMajorTickLines = function (axis, index, element, gauge) {\n        var majorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MajorTickLines_' + index\n        });\n        var majorLineStyle = axis.majorTicks;\n        var isRangeColor = majorLineStyle.useRangeColor;\n        this.majorValues = [];\n        var color = majorLineStyle.color || this.gauge.themeStyle.majorTickColor;\n        if (majorLineStyle.width && majorLineStyle.height && axis.visibleRange.interval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max, interval = axis.visibleRange.interval; i <= max; i += interval) {\n                this.majorValues.push(+i.toFixed(3));\n                appendPath(new PathOption(gauge.element.id + '_Axis_Major_TickLine_' + index + '_' + i, 'transparent', majorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, majorLineStyle.dashArray, this.calculateTicks(i, majorLineStyle, axis), '', 'pointer-events:none;'), majorTickElements, gauge);\n            }\n            element.appendChild(majorTickElements);\n        }\n    };\n    /**\n     * Method to calcualte the tick elements for the circular gauge.\n     *\n     * @param {number} value - Specifies the value.\n     * @param {Tick} options - Specifies the options.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    AxisRenderer.prototype.calculateTicks = function (value, options, axis) {\n        var axisLineWidth = (axis.lineStyle.width / 2) + options.offset;\n        var angle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var start = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth), this.gauge.midPoint);\n        var end = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth) +\n            (options.position === 'Outside' ? options.height : -options.height), this.gauge.midPoint);\n        return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y + ' ';\n    };\n    /**\n     * Method to render the range path of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Range} range - Specifies the range.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    /* eslint-disable @typescript-eslint/dot-notation */\n    AxisRenderer.prototype.drawRangePath = function (axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, colorIndex) {\n        var startValue;\n        var direction;\n        var endValue;\n        var location = this.gauge.midPoint;\n        var startAngle;\n        var endAngle;\n        var isClockWise = axis.direction === 'ClockWise';\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        var gradientRangeColor;\n        if (range.isLinearCircularGradient) {\n            var rangeSplitValue = ((range.end - range.start) / range.linearGradient.colorStop.length);\n            var rangeStart = range.linearGradient.colorStop.length > 1 ?\n                (range.start + (rangeSplitValue * (colorIndex))) : range.start;\n            var rangeEnd = range.linearGradient.colorStop.length > 1 ? (rangeStart + rangeSplitValue) : range.end;\n            startValue = Math.min(Math.max(rangeStart, min), rangeEnd);\n            endValue = Math.min(Math.max(rangeStart, rangeEnd), max);\n        }\n        else {\n            startValue = Math.min(Math.max(range.start, min), range.end);\n            endValue = Math.min(Math.max(range.start, range.end), max);\n        }\n        startAngle = getAngleFromValue(startValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        endAngle = getAngleFromValue(endValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        var isAngleCross360 = (startAngle > endAngle);\n        if (axis.rangeGap != null && axis.rangeGap > 0 && range.start !== range.end\n            || (!isNullOrUndefined(range.linearGradient) && !range.isLinearCircularGradient\n                && (colorIndex === range.linearGradient.colorStop.length - 1))) {\n            startAngle = (rangeIndex === 0 && !axis.startAndEndRangeGap) ? startAngle :\n                colorIndex === 0 && range.isLinearCircularGradient ? axis.direction === 'AntiClockWise' ?\n                    startAngle - (axis.rangeGap / Math.PI) :\n                    startAngle + (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient\n                    ? (axis.direction === 'AntiClockWise' ? startAngle - (axis.rangeGap / Math.PI) : startAngle + (axis.rangeGap / Math.PI)) : startAngle;\n            endAngle = (rangeIndex === axis.ranges.length - 1 && !axis.startAndEndRangeGap) ? endAngle :\n                !isNullOrUndefined(range.linearGradient) && colorIndex === range.linearGradient.colorStop.length - 1\n                    && range.isLinearCircularGradient ?\n                    axis.direction === 'AntiClockWise' ? endAngle + (axis.rangeGap / Math.PI) :\n                        endAngle - (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient ?\n                    (axis.direction === 'AntiClockWise' ? endAngle + (axis.rangeGap / Math.PI) : endAngle - (axis.rangeGap / Math.PI)) : endAngle;\n        }\n        if (this.gauge.allowComponentRender) {\n            if ((startValue !== endValue) && (isAngleCross360 ? startAngle < (endAngle + 360) : (startAngle < endAngle)) && ((range.start >= min && range.end <= max) || (range.end >= min && range.start <= max))) {\n                endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n                endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n                var radius = typeof range.roundedCornerRadius === 'string' ? parseFloat(range.roundedCornerRadius) : range.roundedCornerRadius;\n                var process = (radius * 0.25);\n                var degreeValue = getDegree(startAngle, endAngle);\n                oldStart = ((((range.currentRadius - (startWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                    (radius / process)) / (range.currentRadius - (startWidth / 2))) * 180) / Math.PI;\n                oldEnd = ((((range.currentRadius - (endWidth / 2)) * ((endAngle * Math.PI) / 180) +\n                    (radius / process)) / (range.currentRadius - (endWidth / 2))) * 180) / Math.PI;\n                roundedStartAngle = ((((range.currentRadius) * ((startAngle * Math.PI) / 180) +\n                    (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                        ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n                roundedEndAngle = ((((range.currentRadius) * ((endAngle * Math.PI) / 180) -\n                    (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                        ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n                if (roundedStartAngle > roundedEndAngle && (roundedStartAngle - roundedEndAngle) <= radius) {\n                    roundedStartAngle = startAngle;\n                    roundedEndAngle = endAngle;\n                }\n                if (this.gauge.gradientModule && ((!isNullOrUndefined(range.linearGradient)\n                    && !isNullOrUndefined(range.linearGradient.colorStop)) || (!isNullOrUndefined(range.radialGradient)\n                    && !isNullOrUndefined(range.radialGradient.colorStop)))) {\n                    if (range.isLinearCircularGradient) {\n                        endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                        var degree = getDegree(startAngle, endAngle);\n                        var rangeColorLength = range.linearGradient.colorStop.length;\n                        var degreeRange = ((axis.startAngle === axis.endAngle ?\n                            (axis.startAngle === 0 && axis.endAngle === 0 ? 360 : axis.startAngle) :\n                            (axis.endAngle - axis.startAngle)) - degree * (rangeColorLength - 1));\n                        var degreeRangeValue = void 0;\n                        if (degreeRange <= 360 && degreeRange >= 270) {\n                            degreeRangeValue = 270;\n                        }\n                        else if (degreeRange <= 270 && degreeRange >= 180) {\n                            degreeRangeValue = 180;\n                        }\n                        else if (degreeRange <= 180 && degreeRange >= 90) {\n                            degreeRangeValue = 90;\n                        }\n                        else if (degreeRange <= 90 && degreeRange >= 0) {\n                            degreeRangeValue = 0;\n                        }\n                        var gradientDegree = axis.direction === 'AntiClockWise' ?\n                            (axis.startAngle === axis.endAngle ? 0 : axis.startAngle) + degree * ((rangeColorLength - 1) - colorIndex)\n                            : axis.startAngle + degree * (colorIndex);\n                        var gradientAngle = axis.startAngle < axis.endAngle ? axis.direction === 'AntiClockWise'\n                            ? axis.ranges.length > 1 ? rangeIndex === 0 ? (360 - (axis.startAngle\n                                + (degree * (colorIndex)))) : (axis.startAngle + (degree * (colorIndex + 1))) :\n                                axis.startAngle + (degreeRangeValue + degree * ((rangeColorLength - 1) - colorIndex)) : axis.startAngle\n                            + (degree * (colorIndex)) : axis.endAngle === 360 || axis.startAngle === axis.endAngle\n                            ? axis.direction === 'AntiClockWise' ? axis.startAngle === axis.endAngle ?\n                                (axis.startAngle === 0 && axis.endAngle === 0 ? 0 : 360) - axis.startAngle +\n                                    degreeRangeValue + (degree * ((rangeColorLength - 1) - colorIndex))\n                                : degree * ((rangeColorLength - 1) - colorIndex) : degree * (colorIndex) :\n                            gradientDegree < 360 ? gradientDegree : gradientDegree - 360;\n                        range.gradientAngle = rangeIndex === 0 ? axis.rangeGap ? gradientAngle + axis.rangeGap\n                            : gradientAngle : axis.rangeGap > 0 ? axis.ranges[rangeIndex - 1]['gradientAngle'] + axis.rangeGap\n                            : axis.ranges[rangeIndex - 1]['gradientAngle'];\n                        if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                            ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                            range.gradientAntiAngle = gradientAngle;\n                        }\n                        if (rangeIndex !== 0) {\n                            gradientAngle = axis.direction === 'AntiClockWise' ? axis.ranges.length > 1 ?\n                                axis.ranges[rangeIndex - 1]['gradientAntiAngle'] - gradientAngle + axis.startAngle :\n                                axis.ranges[rangeIndex - 1]['gradientAntiAngle'] + gradientAngle :\n                                range.gradientAngle + gradientAngle - axis.startAngle;\n                            range.gradientAngle = axis.rangeGap != null && axis.rangeGap > 0 ? colorIndex === rangeColorLength - 1 ?\n                                gradientAngle + axis.ranges[rangeIndex - 1]['gradientAngle'] : gradientAngle : gradientAngle;\n                            if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                                ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                                range.gradientAntiAngle = gradientAngle;\n                            }\n                        }\n                        if (gradientAngle > 45 && gradientAngle <= 115\n                            || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) <= 2)) {\n                            direction = axis.direction === 'AntiClockWise' ? 'bottom' : 'top';\n                        }\n                        else if (gradientAngle > 115 && gradientAngle < 170) {\n                            direction = axis.direction === 'AntiClockWise' ? 'left' : 'right';\n                        }\n                        else if (gradientAngle >= 170 && gradientAngle <= 280) {\n                            direction = axis.direction === 'AntiClockWise' ? 'top' : 'bottom';\n                        }\n                        else if (gradientAngle > 280 && gradientAngle <= 360\n                            || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) >= 2)) {\n                            direction = axis.direction === 'AntiClockWise' ? 'right' : 'left';\n                        }\n                    }\n                    gradientRangeColor = this.gauge.gradientModule.getGradientColorString(range, colorIndex, direction, rangeIndex);\n                }\n                range.rangeColor = gradientRangeColor ? gradientRangeColor : range.rangeColor;\n                if (range.roundedCornerRadius) {\n                    if (range.isLinearCircularGradient && range.linearGradient.colorStop.length > 1) {\n                        if (colorIndex === 0 || colorIndex === range.linearGradient.colorStop.length - 1) {\n                            if (axis.direction === 'ClockWise') {\n                                this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === range.linearGradient.colorStop.length - 1\n                                    ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex !== 0 ? Math.ceil(roundedEndAngle) : Math.ceil(endAngle)), ((colorIndex === range.linearGradient.colorStop.length - 1) ? startAngle : oldStart), (colorIndex !== 0 ? oldEnd : endAngle), location, colorIndex);\n                            }\n                            else {\n                                this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === 0 ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex === range.linearGradient.colorStop.length - 1\n                                    ? Math.ceil(endAngle) : Math.ceil(roundedEndAngle)), ((colorIndex === 0) ? startAngle : oldStart), (colorIndex === range.linearGradient.colorStop.length - 1 ? endAngle : oldEnd), location, colorIndex);\n                            }\n                        }\n                        else {\n                            this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n                        }\n                    }\n                    else {\n                        this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, location, colorIndex);\n                    }\n                }\n                else {\n                    this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n                }\n            }\n            else if ((range.start === range.end) && ((range.start >= min && range.end <= max) || (range.end >= min && range.start <= max))) {\n                this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n            }\n        }\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} roundedStartAngle - Specifies the rounded path of the start angle.\n     * @param {number} roundedEndAngle - Specifies the rounded path of the end angle.\n     * @param {number} oldStart - Specifies the rounded path of the old start value.\n     * @param {number} oldEnd - Specifies the rounded path of the old end value..\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.roundedRangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, roundedStartAngle, roundedEndAngle, oldStart, oldEnd, location, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption((!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex\n            : this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex + '_Circular_' + colorIndex), range.rangeColor, 0, range.rangeColor, range.opacity, '0', getRoundedPathArc(location, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} startAngle - Specifies the rounded path of the start angle.\n     * @param {number} endAngle - Specifies the rounded path of the end angle.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.rangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, startAngle, endAngle, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption(!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex : this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex + '_Circular_' + colorIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getPathArc(this.gauge.midPoint, Math.floor(startAngle), Math.ceil(endAngle), range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the axis range of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge instance.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisRange = function (axis, index, element) {\n        var _this = this;\n        var ele = (document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index));\n        var rangeElement = (ele) ? document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index) :\n            this.gauge.renderer.createGroup({ id: this.gauge.element.id + '_Axis_Ranges_' + index });\n        var startWidth;\n        var startEndDifference;\n        var endWidth;\n        var previousEndWidth;\n        var previousStartWidth;\n        axis.ranges.map(function (range, rangeIndex) {\n            range.isLinearCircularGradient = !isNullOrUndefined(_this.gauge.gradientModule)\n                && !isNullOrUndefined(range.linearGradient) && isNullOrUndefined(range.linearGradient.startValue)\n                && isNullOrUndefined(range.linearGradient.endValue) && !isNullOrUndefined(range.linearGradient.colorStop);\n            range.pathElement = [];\n            if (!isNullOrUndefined(range.offset) && range.offset.length > 0) {\n                range.currentDistanceFromScale = stringToNumber(range.offset, axis.currentRadius);\n            }\n            else {\n                range.currentDistanceFromScale = range.offset;\n            }\n            _this.calculateRangeRadius(axis, range);\n            if (range.startWidth.length > 0) {\n                startWidth = toPixel(range.startWidth, range.currentRadius);\n            }\n            else {\n                startWidth = range.startWidth;\n            }\n            if (range.endWidth.length > 0) {\n                endWidth = toPixel(range.endWidth, range.currentRadius);\n            }\n            else {\n                endWidth = range.endWidth;\n            }\n            range.currentRadius = _this.calculateRangeRadiusWithPosition(axis, range, startWidth);\n            if (range.isLinearCircularGradient) {\n                for (var i = 0; i < range.linearGradient.colorStop.length; i++) {\n                    if (i <= (range.linearGradient.colorStop.length - 1)) {\n                        previousEndWidth = i === 0 ? endWidth : previousEndWidth;\n                        previousStartWidth = i === 0 ? startWidth : previousStartWidth;\n                        startEndDifference = (Math.abs(previousStartWidth - previousEndWidth) / (range.linearGradient.colorStop.length));\n                        if (i > 0) {\n                            startWidth = endWidth;\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                        else {\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                    }\n                    else {\n                        startWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                            : startWidth + startEndDifference;\n                        endWidth = (previousEndWidth);\n                    }\n                    _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, i);\n                }\n            }\n            else {\n                if (!(range.start === range.end && axis.direction === 'AntiClockWise' && axis.startAngle === axis.endAngle)) {\n                    _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, null);\n                }\n            }\n        });\n        element.appendChild(rangeElement);\n    };\n    /**\n     * Method to calculate the radius of the axis range.\n     *\n     * @return {void}\n     */\n    AxisRenderer.prototype.calculateRangeRadius = function (axis, range) {\n        var radius = range.radius !== null ? range.radius : '100%';\n        range.currentRadius = stringToNumber(radius, axis.currentRadius);\n    };\n    AxisRenderer.prototype.calculateRangeRadiusWithPosition = function (axis, range, startWidth) {\n        var actualRadius = !isNullOrUndefined(range.position) && range.position !== 'Auto' && isNullOrUndefined(range.radius) ?\n            (range.position === 'Outside' ? (range.currentRadius + axis.lineStyle.width / 2 + range.currentDistanceFromScale) :\n                range.position === 'Inside' ? (range.currentRadius - axis.lineStyle.width / 2 - range.currentDistanceFromScale) :\n                    (range.currentRadius + startWidth / 2 - range.currentDistanceFromScale)) : range.currentRadius;\n        return actualRadius;\n    };\n    /**\n     * Method to get the range color of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.setRangeColor = function (axis) {\n        var rangeColors = getRangePalette(this.gauge.theme);\n        axis.ranges.map(function (range, index) {\n            range.rangeColor = range.color ? range.color : rangeColors[index % rangeColors.length];\n        });\n    };\n    return AxisRenderer;\n}());\nexport { AxisRenderer };\n","import { stringToNumber, textElement, appendPath, getAngleFromValue, getLocationFromAngle, getRoundedPathArc, calculateShapes, PathOption, Size, TextOption } from '../utils/helper-common';\nimport { linear, getCompleteArc } from '../utils/helper-pointer-renderer';\nimport { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { animationComplete } from '../model/constants';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar PointerRenderer = /** @class */ (function () {\n    /**\n     * Constructor for pointer renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function PointerRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis pointers of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {boolean} animate - Specifies the boolean value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.drawPointers = function (axis, axisIndex, element, gauge, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var pointerElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Pointers_' + axisIndex\n        });\n        var childElement;\n        var range;\n        if (this.gauge.allowComponentRender) {\n            axis.pointers.map(function (pointer, pointerIndex) {\n                if (!isNullOrUndefined(pointer.offset) && pointer.offset.length > 0) {\n                    pointer.currentDistanceFromScale = stringToNumber(pointer.offset, axis.currentRadius);\n                }\n                else {\n                    pointer.currentDistanceFromScale = pointer.offset;\n                }\n                range = axis.visibleRange;\n                pointer.pathElement = [];\n                _this.calculatePointerRadius(axis, pointer);\n                childElement = gauge.renderer.createGroup({\n                    id: gauge.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex\n                });\n                _this['draw' + pointer.type + 'Pointer'](axis, axisIndex, pointerIndex, childElement, gauge);\n                _this.setPointerValue(axis, pointer, pointer.currentValue);\n                pointerElement.appendChild(childElement);\n                if (animate || pointer.animation.enable) {\n                    _this.doPointerAnimation(pointer, axis);\n                }\n            });\n            element.appendChild(pointerElement);\n        }\n    };\n    /**\n     * Measure the pointer length of the circular gauge.\n     *\n     * @returns {void}\n     */\n    PointerRenderer.prototype.calculatePointerRadius = function (axis, pointer) {\n        var padding = 5;\n        pointer.currentRadius = !isNullOrUndefined(pointer.radius) ?\n            stringToNumber(pointer.radius, axis.currentRadius) : pointer.position !== 'Auto' ?\n            this.pointerRadiusForPosition(axis, pointer) : (axis.currentRadius - (axis.farSize + padding));\n    };\n    /**\n     * Measure the pointer length of the circular gauge based on pointer position.\n     *\n     * @returns {number}\n     */\n    PointerRenderer.prototype.pointerRadiusForPosition = function (axis, pointer) {\n        if (pointer.markerShape === 'Text') {\n            var pointerRadius = void 0;\n            var pointerSize = parseInt(pointer.textStyle.size, 10);\n            var markerOffset = pointer.position === 'Cross' ? pointerSize / 5 : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - pointerSize / 1.2 - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + axis.lineStyle.width / 2 + pointerSize / 4 + markerOffset +\n                        pointer.currentDistanceFromScale) :\n                    (axis.currentRadius - pointerSize / 6 - markerOffset - pointer.currentDistanceFromScale);\n            return pointerRadius;\n        }\n        else {\n            var pointerRadius = void 0;\n            var rangeBarOffset = pointer.type === 'RangeBar' ? pointer.pointerWidth : 0;\n            var markerOffset = pointer.type === 'Marker' ? ((pointer.markerShape === 'InvertedTriangle' ||\n                pointer.markerShape === 'Triangle') ? (pointer.position === 'Cross' ? pointer.markerWidth / 2 : 0) :\n                pointer.markerWidth / 2) : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + rangeBarOffset + axis.lineStyle.width / 2 + markerOffset + pointer.currentDistanceFromScale) :\n                    (axis.currentRadius + rangeBarOffset / 2 - pointer.currentDistanceFromScale -\n                        ((pointer.markerShape === 'InvertedTriangle' || pointer.markerShape === 'Triangle') ? markerOffset : 0));\n            return pointerRadius;\n        }\n    };\n    /**\n     * Method to render the needle pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawNeedlePointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var needle = pointer.needleTail;\n        var cap = pointer.cap;\n        var pointerRadius;\n        var location;\n        var direction;\n        var needleStartWidth = pointer.needleStartWidth;\n        var needleEndWidth = pointer.needleEndWidth;\n        var mid = gauge.midPoint;\n        var width = pointer.pointerWidth / 2;\n        var rectDirection;\n        var gradientColor;\n        var gradientTailColor;\n        var gradientCapColor;\n        // To render the needle\n        location = getLocationFromAngle(0, pointer.currentRadius, mid);\n        if ((needleStartWidth === 0) && (needleEndWidth === 0) && width) {\n            direction = 'M ' + mid.x + ' ' + (mid.y) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + (mid.x) + ' ' + (mid.y) + ' Z';\n        }\n        else {\n            direction = 'M ' + mid.x + ' ' + (mid.y - width - needleEndWidth) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + location.x + ' ' + (mid.y + needleStartWidth) + ' L ' + mid.x + ' ' + (mid.y + width + needleEndWidth) + ' Z';\n        }\n        if (gauge.gradientModule) {\n            gradientColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Needle_' + index, gradientColor ? gradientColor :\n            pointer.color || this.gauge.themeStyle.needleColor, pointer.border.width, pointer.border.color, null, '0', direction), parentElement, gauge));\n        // eslint-disable-next-line prefer-const\n        pointerRadius = stringToNumber(pointer.needleTail.length, pointer.currentRadius);\n        // To render the rect element for touch\n        rectDirection = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + (mid.y - width) +\n            ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + mid.x + ' ' + (mid.y + width);\n        // To render the needle tail\n        if (gauge.gradientModule) {\n            gradientTailColor = gauge.gradientModule.getGradientColorString(needle);\n        }\n        if (pointerRadius) {\n            location = getLocationFromAngle(180, pointerRadius, gauge.midPoint);\n            direction = 'M ' + mid.x + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y + width) +\n                ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n            pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleTail_' + index, gradientTailColor ? gradientTailColor : pointer.needleTail.color || this.gauge.themeStyle.needleTailColor, pointer.needleTail.border.width, pointer.needleTail.border.color, null, '0', direction), parentElement, gauge));\n            rectDirection += ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + location.x + ' ' + (mid.y - width);\n        }\n        // To render the cap\n        if (gauge.gradientModule) {\n            gradientCapColor = gauge.gradientModule.getGradientColorString(cap);\n        }\n        if (pointer.cap.radius) {\n            pointer.pathElement.push(appendPath(calculateShapes(mid, 'Circle', new Size(pointer.cap.radius * 2, pointer.cap.radius * 2), '', new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleCap_' + index, gradientCapColor ? gradientCapColor : pointer.cap.color || this.gauge.themeStyle.capColor, pointer.cap.border.width, pointer.cap.border.color, null, '0', '', '')), parentElement, gauge, 'Ellipse'));\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleRect_' + index, 'transparent', 0, 'transpanret', null, '0', rectDirection + ' Z'), parentElement, gauge));\n    };\n    /**\n     * Method to set the pointer value of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} value - Specifies the value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.setPointerValue = function (axis, pointer, value) {\n        var _this = this;\n        var checkMinValue = value === axis.visibleRange.min && pointer.type === 'RangeBar';\n        var location = this.gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            endAngle = startAngle === endAngle && !checkMinValue ? endAngle + 1 : endAngle;\n        }\n        else {\n            endAngle = startAngle === endAngle && !checkMinValue ? [startAngle, startAngle = endAngle - 1][0]\n                : [startAngle, startAngle = endAngle][0];\n        }\n        var radius = pointer.roundedCornerRadius;\n        var minRadius = (radius * 0.25);\n        if (value <= minRadius) {\n            // eslint-disable-next-line no-constant-condition\n            radius = value === 1 || 2 ? 8 : radius;\n            radius /= 2;\n            minRadius = radius * 0.25;\n        }\n        var oldStartValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var oldEndValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((endAngle * Math.PI) / 180) +\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var roundStartAngle = ((((pointer.currentRadius) * ((startAngle * Math.PI) / 180) +\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        var roundEndAngle = ((((pointer.currentRadius) * ((endAngle * Math.PI) / 180) -\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        if (roundStartAngle > roundEndAngle && (roundStartAngle - roundEndAngle) <= radius && pointer.type === 'RangeBar') {\n            roundStartAngle = startAngle;\n            roundEndAngle = endAngle;\n        }\n        if (isNullOrUndefined(pointer.currentRadius)) {\n            this.calculatePointerRadius(axis, pointer);\n        }\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                if (pointer.roundedCornerRadius && value && !checkMinValue) {\n                    element.setAttribute('d', getRoundedPathArc(location, Math.floor(roundStartAngle), Math.ceil(roundEndAngle), oldStartValue, oldEndValue, pointer.currentRadius, pointer.pointerWidth, pointer.pointerWidth));\n                    radius = 0;\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(location, startAngle, endAngle, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth), checkMinValue));\n                }\n            }\n            else {\n                if (pointer.type === 'Marker' && pointer.markerShape === 'Text') {\n                    var textangle = getAngleFromValue(pointer.value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n                    var textlocation = getLocationFromAngle((pointer.markerShape === 'Text') ? textangle : 0, pointer.currentRadius, _this.gauge.midPoint);\n                    element.setAttribute('transform', 'rotate(' + (textangle + 90) + ',' + textlocation.x + ',' + textlocation.y + ')');\n                    element.setAttribute('x', String(textlocation.x));\n                    element.setAttribute('y', String(textlocation.y));\n                }\n                else {\n                    element.setAttribute('transform', 'rotate(' + getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise) + ',' + location.x + ',' + location.y + ')');\n                }\n            }\n            element.setAttribute('aria-label', pointer.description || 'Pointer:' + value.toString());\n        });\n    };\n    /**\n     * Method to render the marker pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawMarkerPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var gradientMarkerColor;\n        var angle = Math.round(getAngleFromValue(pointer.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n        var shapeBasedOnPosition = pointer.markerShape;\n        if (gauge.gradientModule) {\n            gradientMarkerColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        if (isNullOrUndefined(pointer.radius) && !isNullOrUndefined(pointer.position) && (pointer.markerShape === 'InvertedTriangle' ||\n            pointer.markerShape === 'Triangle')) {\n            shapeBasedOnPosition = ((pointer.position === 'Outside' || pointer.position === 'Cross') && pointer.markerShape === 'Triangle' ?\n                'InvertedTriangle' : (pointer.position === 'Inside' &&\n                pointer.markerShape === 'InvertedTriangle' ? 'Triangle' : pointer.markerShape));\n        }\n        var location = getLocationFromAngle((pointer.markerShape === 'Text') ? angle : 0, pointer.currentRadius, gauge.midPoint);\n        if (pointer.markerShape === 'Text') {\n            var textOption = new TextOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, location.x, location.y, 'middle', pointer.text, 'rotate(' + (angle + 90) + ',' +\n                (location.x) + ',' + location.y + ')', 'auto');\n            textElement(textOption, pointer.textStyle, pointer.textStyle.color, parentElement, 'pointer-events : auto; ');\n        }\n        else {\n            pointer.pathElement.push(appendPath(calculateShapes(location, shapeBasedOnPosition, new Size(pointer.markerWidth, pointer.markerHeight), pointer.imageUrl, new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, gradientMarkerColor ? gradientMarkerColor : pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, null, '0', '', '')), parentElement, gauge, pointer.markerShape === 'Circle' ? 'Ellipse' : (pointer.markerShape === 'Image' ? 'Image' : 'Path')));\n        }\n    };\n    /**\n     * Method to render the range bar pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawRangeBarPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var gradientBarColor;\n        if (gauge.gradientModule) {\n            gradientBarColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_RangeBar_' + index, gradientBarColor ? gradientBarColor :\n            pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, 1, '0', ''), parentElement, gauge));\n    };\n    /**\n     * Method to perform the animation of the pointer in circular gauge.\n     *\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.doPointerAnimation = function (pointer, axis) {\n        var _this = this;\n        var startValue = !isNullOrUndefined(pointer.previousValue) ? pointer.previousValue : axis.visibleRange.min;\n        var endValue = pointer.currentValue;\n        if (pointer.animation.enable && startValue !== endValue && this.gauge.animatePointer) {\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    _this.performRangeBarAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.performNeedleAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n            });\n        }\n    };\n    /**\n     * Perform the needle and marker pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element\n     * @param {number} start - Specifies the start\n     * @param {number} end - Specifies the end\n     * @param {Axis} axis - Specifies the axis\n     * @param {Pointer} pointer - Specifies the pointer\n     * @param {number} radius - Specifies the radius\n     * @param {number} innerRadius - Specifies the innerRadius\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performNeedleAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        var sweepAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (args) {\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                element.style.animation = 'None';\n                if (start !== end) {\n                    element.setAttribute('transform', 'rotate(' + linear(args.timeStamp, startAngle, sweepAngle, args.duration) + ',' +\n                        _this.gauge.midPoint.x.toString() + ',' + _this.gauge.midPoint.y.toString() + ')');\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                if (pointer.type === 'Marker' || (element.id.indexOf('_Pointer_NeedleCap') >= 0)) {\n                    _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n                }\n            }\n        });\n    };\n    /**\n     * Perform the range bar pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {number} start - Specifies the start.\n     * @param {number} end - Specifies the end.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} radius - Specifies the radius.\n     * @param {number} innerRadius - Specifies the innerRadius.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performRangeBarAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var minAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var roundRadius = pointer.roundedCornerRadius;\n        var sweepAngle;\n        var endAngle;\n        var oldStart;\n        var minRadius = (radius * 0.25);\n        if (roundRadius) {\n            minAngle = ((((pointer.currentRadius) * ((minAngle * Math.PI) / 180) +\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            pointAngle = ((((pointer.currentRadius) * ((pointAngle * Math.PI) / 180) -\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            oldStart = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        }\n        // eslint-disable-next-line prefer-const\n        endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (arg) {\n                element.style.animation = 'None';\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                if (isClockWise) {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, minAngle, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration) + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, Math.floor(minAngle), linear(arg.timeStamp, Math.floor(minAngle), sweepAngle, arg.duration) + 0.0001, oldStart, linear(arg.timeStamp, Math.floor(minAngle + (roundRadius / 2)), sweepAngle, arg.duration) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n                else {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration), minAngle + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        sweepAngle += roundRadius;\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, linear(arg.timeStamp, Math.floor(oldStart), sweepAngle, arg.duration), Math.floor(oldStart) + 0.0001, linear(arg.timeStamp, Math.floor(minAngle - roundRadius - (roundRadius / 2)), sweepAngle, arg.duration), Math.floor(oldStart + (roundRadius / 2)) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n            }\n        });\n    };\n    return PointerRenderer;\n}());\nexport { PointerRenderer };\n","import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { stringToNumber, measureText, getLocationFromAngle, getLabelFormat, VisibleLabels, isCompleteAngle, Size, Rect } from '../utils/helper-common';\nimport { calculateSum } from '../utils/helper-axis-panel';\nimport { axisLabelRender, radiusCalculate } from '../model/constants';\nimport { AxisRenderer } from './axis-renderer';\nimport { PointerRenderer } from './pointer-renderer';\n/**\n * Specifies the CircularGauge Axis Layout\n */\nvar AxisLayoutPanel = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function AxisLayoutPanel(gauge) {\n        this.gauge = gauge;\n        this.axisRenderer = new AxisRenderer(gauge);\n        this.pointerRenderer = new PointerRenderer(gauge);\n    }\n    /**\n     * Measure the calculate the axis size and radius.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxis = function (rect) {\n        this.measureAxisSize(this.gauge, rect);\n        this.calculateAxesRadius();\n    };\n    /**\n     * Measure to calculate the axis radius of the circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxesRadius = function () {\n        var _this = this;\n        var totalRadius;\n        var currentRadius;\n        var rangeMaximumRadius = 0;\n        var xMarginDiff = this.gauge.margin.left + this.gauge.margin.right;\n        var yMarginDiff = this.gauge.margin.top + this.gauge.margin.bottom;\n        var _loop_1 = function (axis) {\n            totalRadius = (Math.min(axis.rect.width, axis.rect.height) / 2);\n            currentRadius = axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius;\n            // eslint-disable-next-line prefer-spread\n            rangeMaximumRadius = Math.max.apply(Math, axis.ranges.map(function (value) {\n                return value.radius ?\n                    (value.radius.indexOf('%') < 0 ? 100 : parseInt(value.radius, 10)) : 0;\n            }));\n            currentRadius = (rangeMaximumRadius > 100 && axis.radius == null) ?\n                (currentRadius * 100) / rangeMaximumRadius : currentRadius;\n            axis.currentRadius = currentRadius - axis.nearSize;\n            if (this_1.gauge.moveToCenter && this_1.gauge.axes.length === 1 &&\n                isNullOrUndefined(this_1.gauge.centerXpoint) && isNullOrUndefined(this_1.gauge.centerYpoint)) {\n                var endAngle = void 0;\n                var startAngle = axis.startAngle;\n                var startPoint = getLocationFromAngle(startAngle - 90, currentRadius, this_1.gauge.midPoint);\n                endAngle = axis.endAngle;\n                endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                var endPoint = getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint);\n                var xDiff = void 0;\n                var yDiff = void 0;\n                var startXDiff = void 0;\n                var endXDiff = void 0;\n                var startYDiff = void 0;\n                var endYDiff = void 0;\n                var newPoint = void 0;\n                if (startAngle > endAngle ? Math.abs(startAngle - endAngle) > 90 ? true : false : true) {\n                    if ((startAngle >= 270 && startAngle <= 360) && ((endAngle > 270 && endAngle <= 360) ||\n                        (endAngle >= 0 && endAngle <= 180))) {\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle <= 360 && endAngle >= 270) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle <= 360 && endAngle >= 270) ? endPoint :\n                            getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            this_1.gauge.midPoint : (endAngle >= 90 && endAngle <= 180) ? endPoint :\n                            getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint);\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 0 && startAngle < 90) && (endAngle >= 0 && endAngle <= 270)) {\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        newPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) :\n                            endPoint;\n                        endYDiff = Math.abs(newPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                        startPoint = (endAngle >= 180) ? endPoint : this_1.gauge.midPoint;\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        endPoint = (endAngle >= 90) ? getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endXDiff = Math.abs(endPoint.x - this_1.gauge.gaugeRect.width);\n                    }\n                    else if ((startAngle >= 90 && startAngle < 180) && (endAngle > 90 && endAngle <= 360)) {\n                        newPoint = (endAngle <= 180) ? this_1.gauge.midPoint : (endAngle >= 270) ?\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        startXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.x);\n                        endXDiff = Math.abs(startPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle > 270) ? getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint) :\n                            this_1.gauge.midPoint;\n                        startYDiff = Math.abs(this_1.gauge.gaugeRect.y - startPoint.y);\n                        endPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 180 && startAngle <= 270) && ((endAngle <= 360 && endAngle >= 270) ||\n                        (endAngle <= 180 && endAngle >= 0))) {\n                        newPoint = (endAngle > 180 && endAngle < 270) ? endPoint :\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint);\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(newPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle >= 180 && endAngle <= 360) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(0, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        newPoint = (endAngle > 180 && endAngle < 270) ? this_1.gauge.midPoint : (endAngle >= 270 && endAngle <= 360) ?\n                            endPoint : getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(newPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            startPoint : ((270 - startAngle) < (endAngle - 90)) ? endPoint : startPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    if ((!isNullOrUndefined(startXDiff) && !isNullOrUndefined(endXDiff) && !isNullOrUndefined(startYDiff) &&\n                        !isNullOrUndefined(endYDiff)) && ((startXDiff > 0 || endXDiff > 0) && (startYDiff > 0 || endYDiff > 0))) {\n                        xDiff = Math.abs((startXDiff + endXDiff) - xMarginDiff);\n                        yDiff = Math.abs((startYDiff + endYDiff) - yMarginDiff);\n                        this_1.gauge.midPoint.x = this_1.gauge.midPoint.x - (startXDiff / 2) + (endXDiff / 2);\n                        this_1.gauge.midPoint.y = this_1.gauge.midPoint.y - (startYDiff / 2) + (endYDiff / 2);\n                        totalRadius = (Math.min(this_1.gauge.gaugeRect.width, this_1.gauge.gaugeRect.height) / 2) +\n                            (Math.min(xDiff, yDiff) / 2);\n                        axis.currentRadius = (axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius) - axis.nearSize;\n                    }\n                }\n            }\n            axis.visibleRange.interval = this_1.calculateNumericInterval(axis, axis.rect);\n            var args = {\n                cancel: false, name: radiusCalculate, currentRadius: axis.currentRadius, gauge: this_1.gauge,\n                midPoint: this_1.gauge.midPoint, axis: axis\n            };\n            this_1.gauge.trigger('radiusCalculate', args, function () {\n                axis.currentRadius = args.currentRadius;\n                _this.gauge.midPoint = args.midPoint;\n                _this.calculateVisibleLabels(axis);\n            });\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            _loop_1(axis);\n        }\n    };\n    /**\n     * Measure to calculate the axis size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxisSize = function (gauge, rect) {\n        var _this = this;\n        var sum;\n        this.computeSize(gauge.axes, rect);\n        gauge.axes.map(function (axis, index) {\n            sum = calculateSum(index, _this.farSizes.length - 1, _this.farSizes);\n            axis.rect = new Rect(rect.x + sum, rect.y + sum, rect.width - (sum * 2), rect.height - (sum * 2));\n        });\n    };\n    /**\n     * Calculate the axis values of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxisValues = function (rect) {\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            this.calculateVisibleRange(axis, rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Calculate the visible range of an axis.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Rect} rect - Specifies the rect.\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleRange = function (axis, rect) {\n        var interval = axis.majorTicks.interval;\n        var minimumValue = Math.min(axis.minimum === null ? 0 : axis.minimum, axis.maximum !== null ? axis.maximum : 100);\n        var maximumValue = Math.max(axis.minimum, axis.maximum === null ? 100 : axis.maximum);\n        axis.pointers.map(function (pointer) {\n            pointer.currentValue = pointer.value !== null ?\n                pointer.value < minimumValue ? minimumValue : pointer.value > maximumValue ? maximumValue : pointer.value\n                : minimumValue;\n            minimumValue = axis.minimum === null ? Math.min(pointer.currentValue, minimumValue) : minimumValue;\n            maximumValue = axis.maximum === null ? Math.max(pointer.currentValue, maximumValue) : maximumValue;\n        });\n        minimumValue = (minimumValue === maximumValue) ?\n            (interval !== null ? minimumValue - interval : minimumValue - 1) : minimumValue;\n        axis.visibleRange = { min: minimumValue, max: maximumValue, interval: interval };\n        axis.visibleRange.interval = this.calculateNumericInterval(axis, rect);\n    };\n    /**\n     * Calculate the numeric intervals of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNumericInterval = function (axis, rect) {\n        var allowComponentRender = ((!isNullOrUndefined(axis.minimum) && !isNullOrUndefined(axis.maximum) && axis.minimum !== axis.maximum) || (isNullOrUndefined(axis.minimum) || isNullOrUndefined(axis.maximum)));\n        if (!allowComponentRender) {\n            return 0;\n        }\n        else if (axis.majorTicks.interval !== null) {\n            return axis.majorTicks.interval;\n        }\n        var totalAngle = axis.endAngle - axis.startAngle;\n        totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n        return this.calculateNiceInterval(axis.visibleRange.max, axis.visibleRange.min, axis.currentRadius ? axis.currentRadius : (rect.width / 2), totalAngle);\n    };\n    /**\n     * Calculate the nice interval of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNiceInterval = function (maxValue, minValue, radius, degree) {\n        var delta = maxValue - minValue;\n        var circumference = 2 * Math.PI * radius * (degree / 360);\n        var desiredIntervalsCount = Math.max((circumference * ((0.533 * 3) / 100)), 1);\n        var niceInterval = delta / desiredIntervalsCount;\n        var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));\n        for (var _i = 0, _a = [10, 5, 2, 1]; _i < _a.length; _i++) {\n            var interval = _a[_i];\n            var currentInterval = minInterval * interval;\n            if (desiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    };\n    /**\n     * Calculate the visible labels of an axis.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleLabels = function (axis) {\n        var style = axis.labelStyle;\n        var customLabelFormat = style.format && style.format.match('{value}') !== null;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var format = this.gauge.intl.getNumberFormat({\n            format: getLabelFormat(style.format), useGrouping: this.gauge.useGroupingSeparator\n        });\n        var argsData;\n        axis.visibleLabels = [];\n        var roundValue;\n        var interval = axis.visibleRange.interval;\n        var max = axis.visibleRange.max;\n        if ((isNullOrUndefined(axis.minimum) && isNullOrUndefined(axis.maximum)) || axis.minimum !== axis.maximum) {\n            var _loop_2 = function (i) {\n                roundValue = axis.roundingPlaces ? parseFloat(i.toFixed(axis.roundingPlaces)) : i;\n                argsData = {\n                    cancel: false, name: axisLabelRender, axis: axis,\n                    text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                        format(roundValue),\n                    value: roundValue\n                };\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var axisLabelRenderSuccess = function (argsData) {\n                    if (!argsData.cancel) {\n                        axis.visibleLabels.push(new VisibleLabels(argsData.text, i));\n                    }\n                };\n                axisLabelRenderSuccess.bind(this_2);\n                this_2.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n            };\n            var this_2 = this;\n            for (var i = axis.visibleRange.min; (i <= max && interval); i += interval) {\n                _loop_2(i);\n            }\n        }\n        var lastLabel = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value : null;\n        var maxVal = axis.visibleRange.max;\n        if (!isNullOrUndefined(lastLabel) && lastLabel !== maxVal && axis.showLastLabel === true) {\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(maxVal)) :\n                    format(maxVal),\n                value: maxVal\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var axisLabelRenderSuccess = function (argsData) {\n                if (!argsData.cancel) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, maxVal));\n                }\n            };\n            axisLabelRenderSuccess.bind(this);\n            this.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n        }\n        this.getMaxLabelWidth(this.gauge, axis);\n    };\n    /**\n     * Measure the axes available size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.computeSize = function (axes, rect) {\n        var lineSize;\n        var outerHeight;\n        var innerHeight;\n        var heightForCross;\n        var axisPadding = 5;\n        var majorTickOffset = 0;\n        var minorTickOffset = 0;\n        var labelOffset = 0;\n        var labelPadding = 10;\n        this.farSizes = [];\n        this.calculateAxisValues(rect);\n        for (var _i = 0, axes_1 = axes; _i < axes_1.length; _i++) {\n            var axis = axes_1[_i];\n            lineSize = (axis.lineStyle.width / 2);\n            outerHeight = 0;\n            innerHeight = 0;\n            heightForCross = axis.majorTicks.position === 'Cross' ? axis.majorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.minorTicks.position === 'Cross' && heightForCross < axis.minorTicks.height / 2) ?\n                axis.minorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.labelStyle.position === 'Cross' && heightForCross < axis.maxLabelSize.height / 2) ?\n                axis.maxLabelSize.height / 2 : heightForCross;\n            lineSize = lineSize < heightForCross ? heightForCross : lineSize;\n            majorTickOffset = axis.majorTicks.offset;\n            minorTickOffset = axis.minorTicks.offset;\n            labelOffset = axis.labelStyle.offset;\n            labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : 0;\n            // Calculating the outer space of the axis\n            outerHeight += !(axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside' &&\n                axis.labelStyle.position === 'Outside') ? axisPadding : 0;\n            outerHeight += (axis.majorTicks.position === 'Outside' ? (axis.majorTicks.height + lineSize) : 0) +\n                (axis.labelStyle.position === 'Outside' ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Outside' && !(axis.majorTicks.position === 'Outside')) ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            outerHeight += (axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside') ?\n                Math.max(majorTickOffset, minorTickOffset) : (axis.majorTicks.position === 'Outside' ?\n                majorTickOffset : axis.minorTicks.position === 'Outside' ? minorTickOffset : 0);\n            // Calculating the inner space of the axis\n            innerHeight += ((axis.majorTicks.position === 'Inside') ? (axis.majorTicks.height + lineSize) : 0) +\n                ((axis.labelStyle.position === 'Inside') ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Outside') ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            innerHeight += ((axis.majorTicks.position === 'Inside') && (axis.minorTicks.position === 'Inside')) ?\n                Math.max(majorTickOffset, minorTickOffset) : ((axis.majorTicks.position === 'Inside') ?\n                majorTickOffset : (axis.minorTicks.position === 'Inside') ? minorTickOffset : 0);\n            if (this.farSizes[this.farSizes.length - 1]) {\n                this.farSizes[this.farSizes.length - 1] += (innerHeight + outerHeight);\n            }\n            axis.nearSize = outerHeight - axisPadding;\n            axis.farSize = innerHeight;\n            outerHeight = (this.gauge.axes.length === (this.farSizes.length + 1)) ? 0 : outerHeight;\n            this.farSizes.push(outerHeight);\n        }\n    };\n    /**\n     * To render the Axis element of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.renderAxes = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var gauge = this.gauge;\n        var renderer = this.axisRenderer;\n        var element;\n        var axesElements = gauge.renderer.createGroup({\n            'id': gauge.element.id + '_AxesCollection',\n            'clip-path': 'url(#' + gauge.element.id + '_GaugeAreaClipRect_' + ')'\n        });\n        // To append the secondary element for annotation and tooltip\n        gauge.element.appendChild(createElement('div', {\n            id: gauge.element.id + '_Secondary_Element',\n            styles: 'position: relative'\n        }));\n        gauge.axes.map(function (axis, index) {\n            element = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_Group_' + index\n            });\n            _this.gauge.allowComponentRender = ((!isNullOrUndefined(axis.minimum) && !isNullOrUndefined(axis.maximum) && axis.minimum !== axis.maximum) || (isNullOrUndefined(axis.minimum) || isNullOrUndefined(axis.maximum)));\n            renderer.checkAngles(axis);\n            renderer.drawAxisOuterLine(axis, index, element, gauge);\n            renderer.drawAxisRange(axis, index, element);\n            renderer.drawAxisLine(axis, index, element, gauge);\n            renderer.drawMajorTickLines(axis, index, element, gauge);\n            renderer.drawMinorTickLines(axis, index, element, gauge);\n            renderer.drawAxisLabels(axis, index, element, gauge);\n            _this.pointerRenderer.drawPointers(axis, index, element, gauge, animate);\n            if (gauge.annotationsModule) {\n                gauge.annotationsModule.renderAnnotation(axis, index);\n            }\n            axesElements.appendChild(element);\n        });\n        // For append clip rect for axes\n        gauge.svgObject.appendChild(gauge.renderer.drawClipPath({\n            'id': gauge.element.id + '_GaugeAreaClipRect_',\n            'x': 0, 'y': 0,\n            'width': gauge.availableSize.width,\n            'height': gauge.availableSize.height,\n            'fill': 'transparent', 'stroke': 'transparent'\n        }));\n        gauge.svgObject.appendChild(axesElements);\n    };\n    /**\n     * Calculate maximum label width for the axis.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     */\n    AxisLayoutPanel.prototype.getMaxLabelWidth = function (gauge, axis) {\n        axis.maxLabelSize = new Size(0, 0);\n        for (var _i = 0, _a = axis.visibleLabels; _i < _a.length; _i++) {\n            var label = _a[_i];\n            label.size = measureText(label.text, axis.labelStyle.font);\n            axis.maxLabelSize.width = label.size.width > axis.maxLabelSize.width ?\n                label.size.width : axis.maxLabelSize.width;\n            axis.maxLabelSize.height = label.size.height > axis.maxLabelSize.height ?\n                label.size.height : axis.maxLabelSize.height;\n        }\n    };\n    return AxisLayoutPanel;\n}());\nexport { AxisLayoutPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { removeElement, getElement, stringToNumber, measureText, textElement, appendPath, calculateShapes, PathOption, RectOption, Size, GaugeLocation, Rect, TextOption } from '../utils/helper-common';\nimport { textTrim, showTooltip } from '../utils/helper-legend';\nimport { Property, Complex, ChildProperty, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Font, Border, Margin } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the location of the legend in circular gauge.\n */\nvar Location = /** @class */ (function (_super) {\n    __extends(Location, _super);\n    function Location() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"y\", void 0);\n    return Location;\n}(ChildProperty));\nexport { Location };\n/**\n * Sets and gets the options to customize the legend for the ranges in the circular gauge.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"toggleVisibility\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Property(8)\n    ], LegendSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Auto')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(5)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Location)\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], LegendSettings.prototype, \"margin\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/*\n * Sets and gets the module to add the legend in the circular gauge.\n */\nvar Legend = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Legend(gauge) {\n        this.legendRegions = [];\n        this.rowCount = 0; // legend row counts per page\n        this.pageButtonSize = 8;\n        this.pageXCollections = []; // pages of x locations\n        this.maxColumns = 0;\n        this.maxWidth = 0;\n        this.currentPage = 1;\n        this.pagingRegions = [];\n        /**\n         * @private\n         */\n        this.position = 'Auto';\n        this.gauge = gauge;\n        this.toggledIndexes = [];\n        this.legend = this.gauge.legendSettings;\n        this.legendID = this.gauge.element.id + '_gauge_legend';\n        this.addEventListener();\n    }\n    /**\n     * Binding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //   this.gauge.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.gauge.on('click', this.click, this);\n        // this.gauge.on(Browser.touchEndEvent, this.mouseEnd, this);\n    };\n    /**\n     * UnBinding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //  this.gauge.off(Browser.touchMoveEvent, this.mouseMove);\n        this.gauge.off('click', this.click);\n        //  this.gauge.off(Browser.touchEndEvent, this.mouseEnd);\n    };\n    /**\n     * Get the legend options.\n     *\n     * @param {Axis[]} axes - Specifies the axes.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendOptions = function (axes) {\n        this.legendCollection = [];\n        var range;\n        var text = '';\n        for (var i = 0; i < axes.length; i++) {\n            for (var j = 0; j < axes[i].ranges.length; j++) {\n                range = axes[i].ranges[j];\n                if (!isNullOrUndefined(range.start) && !isNullOrUndefined(range.end) && (range.start !== range.end)) {\n                    text = range.legendText ? range.legendText : range.start + ' - ' + range.end;\n                    this.legendCollection.push(new LegendOptions(text, text, range.color, this.legend.shape, this.legend.visible, this.legend.border, this.legend.shapeBorder, this.legend.shapeWidth, this.legend.shapeHeight, j, i));\n                }\n            }\n        }\n    };\n    Legend.prototype.calculateLegendBounds = function (rect, availableSize) {\n        var legend = this.legend;\n        this.position = (legend.position !== 'Auto') ? legend.position :\n            (availableSize.width > availableSize.height ? 'Right' : 'Bottom');\n        this.legendBounds = new Rect(rect.x, rect.y, 0, 0);\n        this.isVertical = (this.position === 'Left' || this.position === 'Right');\n        if (this.isVertical) {\n            this.legendBounds.height = stringToNumber(legend.height, availableSize.height - (rect.y - this.gauge.margin.top)) || rect.height;\n            this.legendBounds.width = stringToNumber(legend.width || '20%', availableSize.width);\n        }\n        else {\n            this.legendBounds.width = stringToNumber(legend.width, availableSize.width) || rect.width;\n            this.legendBounds.height = stringToNumber(legend.height || '20%', availableSize.height);\n        }\n        this.getLegendBounds(availableSize, this.legendBounds, legend);\n        this.getLocation(this.position, legend.alignment, this.legendBounds, rect, availableSize);\n    };\n    /**\n     * To find legend alignment for chart and accumulation chart\n     *\n     * @param {number} start - Specifies the start.\n     * @param {number} size - Specifies the size.\n     * @param {number} legendSize - Specifies the  legendSize.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @returns {number} - Returns the start value.\n     */\n    Legend.prototype.alignLegend = function (start, size, legendSize, alignment) {\n        switch (alignment) {\n            case 'Far':\n                start = (size - legendSize) - start;\n                break;\n            case 'Center':\n                start = ((size - legendSize) / 2);\n                break;\n        }\n        return start;\n    };\n    /**\n     * To find legend location based on position, alignment for chart and accumulation chart\n     *\n     * @param {LegendPosition} position - Specifies the position.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @returns {void}\n     */\n    Legend.prototype.getLocation = function (position, alignment, legendBounds, rect, availableSize) {\n        var padding = this.legend.border.width;\n        var legendHeight = legendBounds.height + padding + this.legend.margin.top + this.legend.margin.bottom;\n        var legendWidth = legendBounds.width + padding + this.legend.margin.left + this.legend.margin.right;\n        var marginBottom = this.gauge.margin.bottom;\n        if (position === 'Bottom') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + (rect.height - legendHeight) + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, 0, legendHeight);\n        }\n        else if (position === 'Top') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, legendHeight, 0);\n        }\n        else if (position === 'Right') {\n            legendBounds.x = rect.x + (rect.width - legendBounds.width) + this.legend.margin.right;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, 0, legendWidth, 0, 0);\n        }\n        else {\n            legendBounds.x = legendBounds.x + this.legend.margin.left;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, legendWidth, 0, 0, 0);\n        }\n    };\n    /**\n     * Renders the legend.\n     *\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {boolean} redraw - Specifies the redraw.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.renderLegend = function (legend, legendBounds, redraw) {\n        var firstLegend = this.findFirstLegendPosition(this.legendCollection);\n        var padding = legend.padding;\n        this.legendRegions = [];\n        this.maxItemHeight = Math.max(this.legendCollection[0].textSize.height, legend.shapeHeight);\n        var legendGroup = this.gauge.renderer.createGroup({ id: this.legendID + '_g' });\n        var legendTranslateGroup = this.createLegendElements(legendBounds, legendGroup, legend, this.legendID, redraw);\n        if (firstLegend !== this.legendCollection.length) {\n            this.totalPages = 0;\n            var legendAxisGroup = void 0; // legendItem group for each series group element\n            // starting shape center x,y position && to resolve lint error used new line for declaration\n            var start = new GaugeLocation(legendBounds.x + padding + (legend.shapeWidth / 2), legendBounds.y + padding + this.maxItemHeight / 2);\n            var textOptions = new TextOption('', start.x, start.y, 'start');\n            var textPadding = (2 * legend.shapePadding) + (2 * padding) + legend.shapeWidth;\n            var count = 0;\n            this.pageXCollections = [];\n            this.legendCollection[firstLegend].location = start;\n            var previousLegend = this.legendCollection[firstLegend];\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legendOption = _a[_i];\n                if (legendOption.render && legendOption.text !== '') {\n                    legendAxisGroup = this.gauge.renderer.createGroup({\n                        id: this.legendID + '_g_' + count\n                    });\n                    this.getRenderPoint(legendOption, start, textPadding, previousLegend, legendBounds, count, firstLegend);\n                    this.renderSymbol(legendOption, legendAxisGroup, legendOption.axisIndex, legendOption.rangeIndex);\n                    this.renderText(legendOption, legendAxisGroup, textOptions, legendOption.axisIndex, legendOption.rangeIndex);\n                    if (legendAxisGroup) {\n                        legendAxisGroup.setAttribute('style', 'cursor: ' + ((!legend.toggleVisibility) ? 'auto' : 'pointer'));\n                    }\n                    if (legendTranslateGroup) {\n                        legendTranslateGroup.appendChild(legendAxisGroup);\n                    }\n                    previousLegend = legendOption;\n                }\n                count++;\n            }\n            if (this.isPaging) {\n                this.renderPagingElements(legendBounds, textOptions, legendGroup);\n            }\n            else {\n                this.totalPages = 1;\n            }\n        }\n        this.appendChildElement(this.gauge.svgObject, legendGroup, redraw);\n        this.setStyles(this.toggledIndexes);\n    };\n    /**\n     * To render legend paging elements for chart and accumulation chart\n     *\n     * @param {Rect} bounds - Specifies the bounds.\n     * @param {TextOption} textOption - Specifies the textOption.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @returns {void}\n     */\n    Legend.prototype.renderPagingElements = function (bounds, textOption, legendGroup) {\n        var paginggroup = this.gauge.renderer.createGroup({ id: this.legendID + '_navigation' });\n        this.pagingRegions = [];\n        legendGroup.appendChild(paginggroup);\n        var grayColor = '#545454';\n        var legend = this.gauge.legendSettings; // to solve parameter lint error, legend declaration is here\n        var padding = 8; // const padding for paging elements\n        if (!this.isVertical) {\n            this.totalPages = Math.ceil(this.totalPages / Math.max(1, this.rowCount - 1));\n        }\n        else {\n            this.totalPages = Math.ceil(this.totalPages / this.maxColumns);\n        }\n        var symbolOption = new PathOption(this.legendID + '_pageup', 'transparent', 5, grayColor, 1, '', '');\n        var iconSize = this.pageButtonSize;\n        if (paginggroup) {\n            paginggroup.setAttribute('style', 'cursor: pointer');\n        }\n        // Page left arrow drawing calculation started here\n        this.clipPathHeight = (this.rowCount - 1) * (this.maxItemHeight + legend.padding);\n        this.clipRect.setAttribute('height', this.clipPathHeight.toString());\n        var x = bounds.x + iconSize / 2;\n        var y = bounds.y + this.clipPathHeight + ((bounds.height - this.clipPathHeight) / 2);\n        var size = measureText(this.totalPages + '/' + this.totalPages, legend.textStyle);\n        appendPath(calculateShapes({ x: x, y: y }, 'LeftArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(x + bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5, y - iconSize * 0.5, iconSize, iconSize));\n        // Page numbering rendering calculation started here\n        textOption.x = x + (iconSize / 2) + padding;\n        textOption.y = y + (size.height / 4);\n        textOption.id = this.legendID + '_pagenumber';\n        textOption.text = '1/' + this.totalPages;\n        var pageTextElement = textElement(textOption, legend.textStyle, legend.textStyle.color || this.gauge.themeStyle.labelColor, paginggroup);\n        x = (textOption.x + padding + (iconSize / 2) + size.width);\n        symbolOption.id = this.legendID + '_pagedown';\n        appendPath(calculateShapes({ x: x, y: y }, 'RightArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(x + (bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5), y - iconSize * 0.5, iconSize, iconSize));\n        //placing the navigation buttons and page numbering in legend right corner\n        paginggroup.setAttribute('transform', 'translate(' + (bounds.width - (2 * (iconSize + padding) +\n            padding + size.width)) + ', ' + 0 + ')');\n        this.translatePage(pageTextElement, this.currentPage - 1, this.currentPage);\n    };\n    /**\n     * To translate legend pages for chart and accumulation chart\n     *\n     * @param {Element} pagingText - Specifies the pagingText.\n     * @param {number} page - Specifies the page.\n     * @param {number} pageNumber - Specifies the pageNumber.\n     * @returns {number} - Returns the size.\n     */\n    Legend.prototype.translatePage = function (pagingText, page, pageNumber) {\n        var size = (this.clipPathHeight) * page;\n        var translate = 'translate(0,-' + size + ')';\n        if (this.isVertical) {\n            var pageLength = page * this.maxColumns;\n            size = this.pageXCollections[page * this.maxColumns] - this.legendBounds.x;\n            size = size < 0 ? 0 : size; // to avoid small pixel variation\n            translate = 'translate(-' + size + ',0)';\n        }\n        this.legendTranslateGroup.setAttribute('transform', translate);\n        pagingText.textContent = (pageNumber) + '/' + this.totalPages;\n        this.currentPage = pageNumber;\n        return size;\n    };\n    /**\n     * To render legend text for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {TextOption} textOptions - Specifies the textOptions.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderText = function (legendOption, group, textOptions, axisIndex, rangeIndex) {\n        var legend = this.gauge.legendSettings;\n        var hiddenColor = '#D3D3D3';\n        textOptions.id = this.legendID + '_Axis_' + axisIndex + '_text_' + rangeIndex;\n        var fontcolor = legendOption.visible ? legend.textStyle.color || this.gauge.themeStyle.labelColor : hiddenColor;\n        legend.textStyle.fontFamily = legend.textStyle.fontFamily || this.gauge.themeStyle.labelFontFamily;\n        textOptions.text = legendOption.text;\n        textOptions.x = legendOption.location.x + (legend.shapeWidth / 2) + legend.shapePadding;\n        textOptions.y = legendOption.location.y + this.maxItemHeight / 4;\n        var element = textElement(textOptions, legend.textStyle, fontcolor, group, '');\n    };\n    /**\n     * To render legend symbols for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderSymbol = function (legendOption, group, axisIndex, rangeIndex) {\n        legendOption.fill = legendOption.fill ? legendOption.fill : this.gauge.axes[axisIndex].ranges[rangeIndex].rangeColor;\n        appendPath(calculateShapes(legendOption.location, legendOption.shape, new Size(legendOption.shapeWidth, legendOption.shapeHeight), '', new PathOption(this.legendID + '_Axis_' + axisIndex + '_Shape_' + rangeIndex, legendOption.fill, legendOption.shapeBorder.width, legendOption.shapeBorder.color, null, '0', '', '')), group, this.gauge, legendOption.shape === 'Circle' ? 'Ellipse' : 'Path');\n    };\n    /**\n     * To find legend rendering locations from legend options.\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {GaugeLocation} start - Specifies the start.\n     * @param {number} textPadding - Specifies the textPadding.\n     * @param {LegendOptions} prevLegend - Specifies the prevLegend.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} count - Specifies the count.\n     * @param {number} firstLegend - Specifies the firstLegend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n        var padding = this.legend.padding;\n        if (this.isVertical) {\n            if (count === firstLegend || (prevLegend.location.y + (this.maxItemHeight * 1.5) + (padding * 2) > rect.y + rect.height)) {\n                legendOption.location.x = prevLegend.location.x + ((count === firstLegend) ? 0 : this.maxColumnWidth);\n                legendOption.location.y = start.y;\n                this.pageXCollections.push(legendOption.location.x - (this.legend.shapeWidth / 2) - padding);\n                this.totalPages++;\n            }\n            else {\n                legendOption.location.x = prevLegend.location.x;\n                legendOption.location.y = prevLegend.location.y + this.maxItemHeight + padding;\n            }\n        }\n        else {\n            var previousBound = (prevLegend.location.x + textPadding + prevLegend.textSize.width);\n            if ((previousBound + (legendOption.textSize.width + textPadding)) > (rect.x + rect.width + this.legend.shapeWidth / 2)) {\n                legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                    prevLegend.location.y + this.maxItemHeight + padding;\n                legendOption.location.x = start.x;\n            }\n            else {\n                legendOption.location.y = prevLegend.location.y;\n                legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            }\n            this.totalPages = this.totalRowCount;\n        }\n        var availablewidth = this.getAvailWidth(legendOption.location.x, this.legendBounds.width, this.legendBounds.x);\n        legendOption.text = textTrim(+availablewidth.toFixed(4), legendOption.text, this.legend.textStyle);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To show or hide the legend on clicking the legend.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.click = function (event) {\n        var targetId = event.target.id;\n        var legendItemsId = ['_text_', '_Shape_'];\n        var index;\n        var toggledIndex = -1;\n        if (targetId.indexOf(this.legendID) > -1) {\n            for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n                var id = legendItemsId_1[_i];\n                if (targetId.indexOf(id) > -1) {\n                    var axisIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[0], 10);\n                    var rangeIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[1], 10);\n                    if (this.gauge.legendSettings.toggleVisibility && !isNaN(rangeIndex)) {\n                        var legendOption = this.legendByIndex(axisIndex, rangeIndex, this.legendCollection);\n                        index = new Index(axisIndex, rangeIndex, !legendOption.render);\n                        if (this.toggledIndexes.length === 0) {\n                            this.toggledIndexes.push(index);\n                        }\n                        else {\n                            for (var i = 0; i < this.toggledIndexes.length; i++) {\n                                if (this.toggledIndexes[i].axisIndex === index.axisIndex &&\n                                    this.toggledIndexes[i].rangeIndex === index.rangeIndex) {\n                                    toggledIndex = i;\n                                    break;\n                                }\n                                else {\n                                    toggledIndex = -1;\n                                }\n                            }\n                            if (toggledIndex === -1) {\n                                this.toggledIndexes.push(index);\n                            }\n                            else {\n                                this.toggledIndexes[toggledIndex].isToggled = !this.toggledIndexes[toggledIndex].isToggled;\n                            }\n                        }\n                        this.setStyles(this.toggledIndexes);\n                    }\n                }\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, true);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, false);\n        }\n    };\n    /**\n     * Set toggled legend styles.\n     *\n     * @param {Index[]} toggledIndexes - Specifies the toggledIndexes.\n     * @returns {void}\n     */\n    Legend.prototype.setStyles = function (toggledIndexes) {\n        for (var i = 0; i < toggledIndexes.length; i++) {\n            var count = 0;\n            for (var j = 0; j < toggledIndexes[i].rangeIndex; j++) {\n                var rangeStart = this.gauge.axes[toggledIndexes[i].axisIndex].ranges[j].start;\n                var rangeEnd = this.gauge.axes[toggledIndexes[i].axisIndex].ranges[j].end;\n                if (rangeStart == rangeEnd) {\n                    count++;\n                }\n            }\n            var rangeID = this.gauge.element.id + '_Axis_' + toggledIndexes[i].axisIndex + '_Range_' + toggledIndexes[i].rangeIndex;\n            var shapeID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_Shape_' + toggledIndexes[i].rangeIndex;\n            var textID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_text_' + toggledIndexes[i].rangeIndex;\n            var rangeElement = this.gauge.svgObject.querySelector('#' + rangeID);\n            var shapeElement = this.gauge.svgObject.querySelector('#' + shapeID);\n            var textElement_1 = this.gauge.svgObject.querySelector('#' + textID);\n            if (toggledIndexes[i].isToggled) {\n                if (!isNullOrUndefined(rangeElement)) {\n                    rangeElement.style.visibility = 'visible';\n                    shapeElement.setAttribute('fill', this.legendCollection[toggledIndexes[i].rangeIndex - count].fill);\n                    textElement_1.setAttribute('fill', this.legend.textStyle.color || this.gauge.themeStyle.labelColor);\n                }\n            }\n            else {\n                var hiddenColor = '#D3D3D3';\n                if (!isNullOrUndefined(rangeElement)) {\n                    rangeElement.style.visibility = 'hidden';\n                    shapeElement.setAttribute('fill', hiddenColor);\n                    textElement_1.setAttribute('fill', hiddenColor);\n                }\n            }\n        }\n    };\n    /**\n     * To get legend by index\n     *\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @param {LegendOptions[]} legendCollections - Specifies the legendCollections.\n     * @returns {LegendOptions} - Specifies the LegendOptions.\n     */\n    Legend.prototype.legendByIndex = function (axisIndex, rangeIndex, legendCollections) {\n        for (var _i = 0, legendCollections_1 = legendCollections; _i < legendCollections_1.length; _i++) {\n            var legend = legendCollections_1[_i];\n            if (legend.axisIndex === axisIndex && legend.rangeIndex === rangeIndex) {\n                return legend;\n            }\n        }\n        return null;\n    };\n    /**\n     * To change legend pages for chart and accumulation chart\n     *\n     * @param {Event} event - Specifies the event.\n     * @param {boolean} pageUp - Specifies the pageUp.\n     * @returns {void}\n     */\n    Legend.prototype.changePage = function (event, pageUp) {\n        var pageText = document.getElementById(this.legendID + '_pagenumber');\n        var page = parseInt(pageText.textContent.split('/')[0], 10);\n        if (pageUp && page > 1) {\n            this.translatePage(pageText, (page - 2), (page - 1));\n        }\n        else if (!pageUp && page < this.totalPages) {\n            this.translatePage(pageText, page, (page + 1));\n        }\n    };\n    /**\n     * To find available width from legend x position.\n     *\n     * @param {number} tx - Specifies the tx value.\n     * @param {number} width - Specifies the width.\n     * @param {number} legendX - Specifies the legendX.\n     * @returns {number} - Returns the number.\n     */\n    Legend.prototype.getAvailWidth = function (tx, width, legendX) {\n        if (this.isVertical) {\n            width = this.maxWidth;\n        }\n        return width - ((this.legend.padding * 2) + this.legend.shapeWidth + this.legend.shapePadding);\n    };\n    /**\n     * To create legend rendering elements for chart and accumulation chart\n     *\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {string} id - Specifies the id.\n     * @param {boolean} redraw - Specifies the redraw.\n     * @returns {Element} - Returns the element.\n     */\n    Legend.prototype.createLegendElements = function (legendBounds, legendGroup, legend, id, redraw) {\n        var padding = legend.padding;\n        var options = new RectOption(id + '_element', legend.background, legend.border, legend.opacity, legendBounds);\n        options.width = this.isVertical ? this.maxWidth : legendBounds.width;\n        // eslint-disable-next-line max-len\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        legendGroup ? legendGroup.appendChild(this.gauge.renderer.drawRectangle(options)) : this.gauge.renderer.drawRectangle(options);\n        var legendItemsGroup = this.gauge.renderer.createGroup({ id: id + '_collections' });\n        legendGroup.appendChild(legendItemsGroup);\n        this.legendTranslateGroup = this.gauge.renderer.createGroup({ id: id + '_translate_g' });\n        legendItemsGroup.appendChild(this.legendTranslateGroup);\n        var clippath = this.gauge.renderer.createClipPath({ id: id + '_clipPath' });\n        options.id += '_clipPath_rect';\n        options.width = this.isVertical ? options.width - padding : options.width;\n        this.clipRect = this.gauge.renderer.drawRectangle(options);\n        clippath.appendChild(this.clipRect);\n        this.appendChildElement(this.gauge.svgObject, clippath, redraw);\n        legendItemsGroup.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n        return this.legendTranslateGroup;\n    };\n    /**\n     * Method to append child element\n     *\n     * @param {Element} parent - Specifies the element.\n     * @param {Element} childElement - Specifies the child element.\n     * @param {boolean} redraw - Specifies the boolean value.\n     * @param {boolean} isAnimate - Specifies the boolean value.\n     * @param {string} x - Specifies the x value.\n     * @param {string} y - Specifies the y value.\n     * @param {GaugeLocation} start - Specifies the start value.\n     * @param {string} direction - Specifies the direction.\n     * @param {boolean} forceAnimate - Specifies the boolean value.\n     * @param {boolean} isRect - Specifies the rect value.\n     * @param {Rect} previousRect - Specifies the previous rect value.\n     * @param {number} animateDuration - Specifies the animate duration.\n     * @returns {void}\n     */\n    Legend.prototype.appendChildElement = function (parent, childElement, redraw, isAnimate, x, y, start, direction, forceAnimate, isRect, previousRect, animateDuration) {\n        if (isAnimate === void 0) { isAnimate = false; }\n        if (x === void 0) { x = 'x'; }\n        if (y === void 0) { y = 'y'; }\n        if (forceAnimate === void 0) { forceAnimate = false; }\n        if (isRect === void 0) { isRect = false; }\n        if (previousRect === void 0) { previousRect = null; }\n        var existChild = parent.querySelector('#' + childElement.id);\n        var element = (existChild || getElement(childElement.id));\n        var child = childElement;\n        var duration = animateDuration ? animateDuration : 300;\n        if (existChild) {\n            parent.replaceChild(child, element);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    };\n    /**\n     * To find first valid legend text index for chart and accumulation chart\n     *\n     * @param {LegendOptions[]} legendCollection - Specifies the legend collection.\n     * @returns {number} - Returns the count.\n     */\n    Legend.prototype.findFirstLegendPosition = function (legendCollection) {\n        var count = 0;\n        for (var _i = 0, legendCollection_1 = legendCollection; _i < legendCollection_1.length; _i++) {\n            var legend = legendCollection_1[_i];\n            if (legend.render && legend.text !== '') {\n                break;\n            }\n            count++;\n        }\n        return count;\n    };\n    /**\n     * To find legend bounds for accumulation chart.\n     *\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n        var extraWidth = 0;\n        var extraHeight = 0;\n        var padding = legend.padding;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.width += extraWidth;\n        legendBounds.height += extraHeight;\n        var maximumWidth = 0;\n        var rowWidth = 0;\n        var rowCount = 0;\n        var columnWidth = [];\n        var columnHeight = 0;\n        var legendWidth = 0;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n        var legendEventArgs;\n        var render = false;\n        for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n            var legendOption = _a[_i];\n            legendEventArgs = {\n                fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                name: 'legendRender', cancel: false\n            };\n            this.gauge.trigger('legendRender', legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = legendEventArgs.text;\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n            if (legendOption.render && legendOption.text !== '') {\n                render = true;\n                legendWidth = legend.shapeWidth + (2 * legend.shapePadding) + legendOption.textSize.width + (2 * padding);\n                if (this.isVertical) {\n                    ++rowCount;\n                    columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    if ((rowCount * (this.maxItemHeight + padding)) + padding > legendBounds.height) {\n                        columnHeight = Math.max(columnHeight, (rowCount * (this.maxItemHeight + padding)) + padding);\n                        rowWidth = rowWidth + maximumWidth;\n                        columnWidth.push(maximumWidth);\n                        this.totalPages = Math.max(rowCount, this.totalPages || 1);\n                        maximumWidth = 0;\n                        rowCount = 1;\n                    }\n                    maximumWidth = Math.max(legendWidth, maximumWidth);\n                }\n                else {\n                    rowWidth = rowWidth + legendWidth;\n                    if (legendBounds.width < (padding + rowWidth)) {\n                        maximumWidth = Math.max(maximumWidth, (rowWidth + padding - legendWidth));\n                        if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                            rowCount = 1;\n                        }\n                        rowWidth = legendWidth;\n                        rowCount++;\n                        columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    }\n                }\n            }\n        }\n        if (this.isVertical) {\n            rowWidth = rowWidth + maximumWidth;\n            this.isPaging = legendBounds.width < (rowWidth + padding);\n            columnHeight = Math.max(columnHeight, ((this.totalPages || 1) * (this.maxItemHeight + padding)) + padding);\n            this.isPaging = this.isPaging && (this.totalPages > 1);\n            if (columnWidth[columnWidth.length - 1] !== maximumWidth) {\n                columnWidth.push(maximumWidth);\n            }\n        }\n        else {\n            this.isPaging = legendBounds.height < columnHeight;\n            this.totalPages = this.totalRowCount = rowCount;\n            columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding);\n        }\n        this.maxColumns = 0; // initialization for max columns\n        var width = this.isVertical ? this.getMaxColumn(columnWidth, legendBounds.width, padding, rowWidth + padding) :\n            Math.max(rowWidth + padding, maximumWidth);\n        if (render) { // if any legends not skipped in event check\n            this.setBounds(width, columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    };\n    /**\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} left - Specifies the left.\n     * @param {number} right - Specifies the right.\n     * @param {number} top - Specifies the top.\n     * @param {number} bottom - Specifies the bottom.\n     * @returns {Rect} - Returns the rect.\n     * @private\n     */\n    Legend.prototype.subtractThickness = function (rect, left, right, top, bottom) {\n        rect.x += left;\n        rect.y += top;\n        rect.width -= left + right;\n        rect.height -= top + bottom;\n        return rect;\n    };\n    /**\n     * To set bounds for chart and accumulation chart\n     *\n     * @param {number} computedWidth - Specifies compute width.\n     * @param {number} computedHeight - Specifies compute height.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legend bounds.\n     * @returns {void}\n     */\n    Legend.prototype.setBounds = function (computedWidth, computedHeight, legend, legendBounds) {\n        computedWidth = computedWidth < legendBounds.width ? computedWidth : legendBounds.width;\n        computedHeight = computedHeight < legendBounds.height ? computedHeight : legendBounds.height;\n        legendBounds.width = !legend.width ? computedWidth : legendBounds.width;\n        legendBounds.height = !legend.height ? computedHeight : legendBounds.height;\n        this.rowCount = Math.max(1, Math.ceil((legendBounds.height - legend.padding) / (this.maxItemHeight + legend.padding)));\n    };\n    /**\n     * To find maximum column size for legend\n     *\n     * @param {number[]} columns - Specifies the columns\n     * @param {number} width - Specifies the width\n     * @param {number} padding - Specifies the padding\n     * @param {number} rowWidth - Specifies the row width\n     * @returns {number} - Returns the number\n     */\n    Legend.prototype.getMaxColumn = function (columns, width, padding, rowWidth) {\n        var maxPageColumn = padding;\n        this.maxColumnWidth = Math.max.apply(null, columns);\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            maxPageColumn += this.maxColumnWidth;\n            this.maxColumns++;\n            if (maxPageColumn + padding > width) {\n                maxPageColumn -= this.maxColumnWidth;\n                this.maxColumns--;\n                break;\n            }\n        }\n        this.isPaging = (maxPageColumn < rowWidth) && (this.totalPages > 1);\n        if (maxPageColumn === padding) {\n            maxPageColumn = width;\n        }\n        this.maxColumns = Math.max(1, this.maxColumns);\n        this.maxWidth = maxPageColumn;\n        return maxPageColumn;\n    };\n    /**\n     * To show or hide trimmed text tooltip for legend.\n     *\n     * @param {Event} event - Specifies the event.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.move = function (event) {\n        var x = this.gauge.mouseX;\n        var y = this.gauge.mouseY;\n        var targetId = event.target.id;\n        if (event.target.textContent.indexOf('...') > -1 && targetId.indexOf('_gauge_legend_') > -1) {\n            var axisIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[0], 10);\n            var rangeIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[1], 10);\n            var text = '';\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legends = _a[_i];\n                if (legends.rangeIndex === rangeIndex && legends.axisIndex === axisIndex) {\n                    text = legends.originalText;\n                }\n            }\n            showTooltip(text, x, y, this.gauge.element.offsetWidth, this.gauge.element.id + '_EJ2_Legend_Tooltip', getElement(this.gauge.element.id + '_Secondary_Element'));\n        }\n        else {\n            removeElement(this.gauge.element.id + '_EJ2_Legend_Tooltip');\n        }\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the legend.\n     *\n     * @param {CircularGauge} circulargauge - Specifies the instance of the gauge\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.destroy = function (circulargauge) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return Legend;\n}());\nexport { Legend };\n/**\n * @private\n */\nvar Index = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Index(axisIndex, rangeIndex, isToggled) {\n        this.axisIndex = axisIndex;\n        this.rangeIndex = rangeIndex;\n        this.isToggled = isToggled;\n    }\n    return Index;\n}());\nexport { Index };\n/**\n * Class for legend options\n *\n * @private\n */\nvar LegendOptions = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function LegendOptions(text, originalText, fill, shape, visible, border, shapeBorder, shapeWidth, shapeHeight, rangeIndex, axisIndex) {\n        this.location = { x: 0, y: 0 };\n        this.text = text;\n        this.originalText = originalText;\n        this.fill = fill;\n        this.shape = shape;\n        this.visible = visible;\n        this.border = border;\n        this.shapeBorder = shapeBorder;\n        this.shapeWidth = shapeWidth;\n        this.shapeHeight = shapeHeight;\n        this.rangeIndex = rangeIndex;\n        this.axisIndex = axisIndex;\n    }\n    return LegendOptions;\n}());\nexport { LegendOptions };\n","import { createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Represent the Pdf export for gauge\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specfies the instance of the gauge.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function PdfExport(control) {\n        this.control = control;\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {ExportType} type - Specifies the type of the document.\n     * @param {string} fileName Specfies the file name of the document.\n     * @param {PdfPageOrientation} orientation - Specfies the orientation of the PDF document to export the component.\n     * @param {boolean} allowDownload - Specfies whether to download the document or not.\n     * @returns {Promise<string>} - Returns the promise string\n     * @private\n     */\n    PdfExport.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var promise = new Promise(function (resolve, reject) {\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': _this.control.availableSize.width.toString(),\n                    'height': _this.control.availableSize.height.toString()\n                }\n            });\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n            var exportElement = _this.control.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            var backgroundColor = backgroundElement.getAttribute('fill');\n            if ((_this.control.theme === 'Tailwind' || _this.control.theme === 'TailwindDark' || _this.control.theme === 'Bootstrap5' || _this.control.theme === 'Bootstrap5Dark')\n                && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n            }\n            var url = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n            var image = new Image();\n            var context = element.getContext('2d');\n            image.onload = (function () {\n                context.drawImage(image, 0, 0);\n                window.URL.revokeObjectURL(url);\n                var document = new PdfDocument();\n                var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                document.pageSettings.orientation = orientation;\n                imageString = imageString.slice(imageString.indexOf(',') + 1);\n                document.pages.add().graphics.\n                    drawImage(new PdfBitmap(imageString), 0, 0, _this.control.availableSize.width, _this.control.availableSize.height);\n                if (allowDownload) {\n                    document.save(fileName + '.pdf');\n                    document.destroy();\n                }\n                else {\n                    resolve(null);\n                }\n            });\n            image.src = url;\n        });\n        return promise;\n    };\n    PdfExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'PdfExport';\n    };\n    /**\n     * To destroy the PdfExport.\n     *\n     * @param {CircularGauge} gauge - Specfies the instance of the gauge\n     * @returns {void}\n     * @private\n     */\n    PdfExport.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { createElement, Browser } from '@syncfusion/ej2-base';\n/**\n * Represent the Image Export for gauge\n *\n * @hidden\n */\nvar ImageExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specfies the instance of the gauge\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function ImageExport(control) {\n        this.control = control;\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {ExportType} type - Specifies the type of the image file.\n     * @param {string} fileName - Specifies the file name of the image file.\n     * @param {boolean} allowDownload - Specifies whether to download the image file or not.\n     * @returns {Promise<string>} - Returns promise string.\n     * @private\n     */\n    ImageExport.prototype.export = function (type, fileName, allowDownload) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var promise = new Promise(function (resolve, reject) {\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': _this.control.availableSize.width.toString(),\n                    'height': _this.control.availableSize.height.toString()\n                }\n            });\n            var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n                _this.control.svgObject.outerHTML +\n                '</svg>';\n            var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n                [(new XMLSerializer()).serializeToString(_this.control.svgObject)], { type: 'image/svg+xml' }));\n            if (type === 'SVG') {\n                if (allowDownload) {\n                    _this.triggerDownload(fileName, type, url, isDownload);\n                }\n                else {\n                    resolve(null);\n                }\n            }\n            else {\n                var image_1 = new Image();\n                var context_1 = element.getContext('2d');\n                image_1.onload = (function () {\n                    context_1.drawImage(image_1, 0, 0);\n                    window.URL.revokeObjectURL(url);\n                    if (allowDownload) {\n                        _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                    }\n                    else {\n                        if (type === 'JPEG') {\n                            resolve(element.toDataURL('image/jpeg'));\n                        }\n                        else if (type === 'PNG') {\n                            resolve(element.toDataURL('image/png'));\n                        }\n                    }\n                });\n                image_1.src = url;\n            }\n        });\n        return promise;\n    };\n    ImageExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'ImageExport';\n    };\n    /**\n     * To destroy the ImageExport.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    ImageExport.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    /**\n    * To trigger the download element\n    *\n    * @param {string} fileName - Specifies the file name.\n    * @param {ExportType} type - Specifies the export type.\n    * @param {string} url - Specifies the url.\n    * @param {boolean} isDownload - Specifies the boolean value.\n    * @returns {void}\n    */\n    ImageExport.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ImageExport;\n}());\nexport { ImageExport };\n","import { print as printWindow, createElement } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper-common';\nimport { beforePrint } from './constants';\n/**\n * Represent the print for gauge\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specifies the instance of the gauge.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Print(control) {\n        this.control = control;\n    }\n    /**\n     * To print the gauge\n     *\n     * @param {string[] | string | Element} elements - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.print = function (elements) {\n        var _this = this;\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger('beforePrint', argsData, function (beforePrintArgs) {\n            if (!argsData.cancel) {\n                printWindow(argsData.htmlContent, _this.printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the gauge\n     *\n     * @param { string[] | string | Element} elements - Specifies the element.\n     * @returns {Element} - Returns the div element.\n     * @private\n     */\n    Print.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    Print.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Print';\n    };\n    /**\n     * To destroy the Print.\n     *\n     * @param {CircularGauge} gauge - Specfies the instance of the gauge\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Specifies the color information for the gradient in the circular gauge.\n */\nvar ColorStop = /** @class */ (function (_super) {\n    __extends(ColorStop, _super);\n    function ColorStop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#000000')\n    ], ColorStop.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ColorStop.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('0%')\n    ], ColorStop.prototype, \"offset\", void 0);\n    __decorate([\n        Property('')\n    ], ColorStop.prototype, \"style\", void 0);\n    return ColorStop;\n}(ChildProperty));\nexport { ColorStop };\n/**\n * Specifies the position in percentage from which the radial gradient must be applied.\n */\nvar GradientPosition = /** @class */ (function (_super) {\n    __extends(GradientPosition, _super);\n    function GradientPosition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"x\", void 0);\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"y\", void 0);\n    return GradientPosition;\n}(ChildProperty));\nexport { GradientPosition };\n/**\n * This specifies the properties of the linear gradient colors for the circular gauge.\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"startValue\", void 0);\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"endValue\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], LinearGradient.prototype, \"colorStop\", void 0);\n    return LinearGradient;\n}(ChildProperty));\nexport { LinearGradient };\n/**\n * This specifies the properties of the radial gradient colors for the circular gauge.\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], RadialGradient.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"outerPosition\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"innerPosition\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], RadialGradient.prototype, \"colorStop\", void 0);\n    return RadialGradient;\n}(ChildProperty));\nexport { RadialGradient };\n/**\n * Sets and gets the module that enables the gradient option for pointers and ranges.\n *\n * @hidden\n */\nvar Gradient = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Gradient(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {name} name - Specifies the name of the gradient.\n     * @param {name} direction - Specifies the gradient position.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.calculateLinearGradientPosition = function (element, name, direction) {\n        var linearPosition = {\n            id: name,\n            x1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'right' ? '100%' : '0%')\n                : (!isNullOrUndefined(element.linearGradient.startValue) ? ((element.linearGradient.startValue.indexOf('%') === -1 ?\n                    element.linearGradient.startValue :\n                    parseFloat(element.linearGradient.startValue).toString()) + '%') : '0%')),\n            x2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1 ?\n                (direction === 'left' ? '100%' : '0%') :\n                (!isNullOrUndefined(element.linearGradient.endValue) ? ((element.linearGradient.endValue.indexOf('%') === -1 ?\n                    element.linearGradient.endValue : parseFloat(element.linearGradient.endValue).toString()) + '%') : '100%')),\n            y1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'bottom' ? '100%' : '0%') : '0%'),\n            y2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1\n                ? (direction === 'top' ? '100%' : '0%') : '0%')\n        };\n        return linearPosition;\n    };\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {number} index - Specifies the index of the axis.\n     * @param { string } direction - Specifies the gradient position.\n     * @param { number } rangeIndex - Specifies the index of the range.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.getLinearGradientColor = function (element, index, direction, rangeIndex) {\n        var render = new SvgRenderer('');\n        var colors = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            this.getCircularGradientColor(element.linearGradient.colorStop, index) :\n            this.getGradientColor(element.linearGradient.colorStop);\n        var name = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            '_' + this.gauge.svgObject.id + '_range_' +\n                rangeIndex + '_color_' + index + '_' + 'linearGradient'\n            : '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'linearGradient';\n        var gradientPosition = this.calculateLinearGradientPosition(element, name, direction);\n        gradientPosition = {\n            id: gradientPosition.id,\n            x1: gradientPosition.x1,\n            x2: gradientPosition.x2,\n            y1: gradientPosition.y1,\n            y2: gradientPosition.y2\n        };\n        var def = render.drawGradient('linearGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To get color, opacity, offset and style for circular gradient path.\n     *\n     * @private\n     */\n    Gradient.prototype.getCircularGradientColor = function (colorStop, index) {\n        var colors = [];\n        var colorIndex = index;\n        for (var j = colorIndex; j < (index === (colorStop.length - 1) ? index + 1 : index + 2); j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n            colorIndex++;\n        }\n        return colors;\n    };\n    /**\n     * To get the radial gradient string.\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    Gradient.prototype.getRadialGradientColor = function (element) {\n        var render = new SvgRenderer('');\n        var colors = this.getGradientColor(element.radialGradient.colorStop);\n        var name = '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'radialGradient';\n        var gradientPosition = {\n            id: name,\n            r: (element.radialGradient.radius.indexOf('%') === -1 ?\n                element.radialGradient.radius :\n                parseFloat(element.radialGradient.radius).toString()) + '%',\n            cx: (element.radialGradient.outerPosition.x.indexOf('%') === -1 ?\n                element.radialGradient.outerPosition.x :\n                parseFloat(element.radialGradient.outerPosition.x).toString()) + '%',\n            cy: (element.radialGradient.outerPosition.y.indexOf('%') === -1 ?\n                element.radialGradient.outerPosition.y :\n                parseFloat(element.radialGradient.outerPosition.y).toString()) + '%',\n            fx: (element.radialGradient.innerPosition.x.indexOf('%') === -1 ?\n                element.radialGradient.innerPosition.x :\n                parseFloat(element.radialGradient.innerPosition.x).toString()) + '%',\n            fy: (element.radialGradient.innerPosition.y.indexOf('%') === -1 ?\n                element.radialGradient.innerPosition.y :\n                parseFloat(element.radialGradient.innerPosition.y).toString()) + '%'\n        };\n        var def = render.drawGradient('radialGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    /**\n     * To get color, opacity, offset and style.\n     *\n     * @param { ColorStopModel[]} colorStop - Specifies the color stop.\n     * @returns {GradientColor[]} - Returns the gradientColor.\n     * @private\n     */\n    Gradient.prototype.getGradientColor = function (colorStop) {\n        var colors = [];\n        for (var j = 0; j < colorStop.length; j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n        }\n        return colors;\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To get a gradient color string\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @returns {string} - Returns the string\n     * @private\n     */\n    Gradient.prototype.getGradientColorString = function (element, index, direction, rangeIndex) {\n        var gradientColor;\n        if ((element.linearGradient && !isNullOrUndefined(element.linearGradient.colorStop)) ||\n            (element.radialGradient && !isNullOrUndefined(element.radialGradient.colorStop))) {\n            if (element.linearGradient) {\n                gradientColor = this.getLinearGradientColor(element, index, direction, rangeIndex);\n            }\n            else {\n                gradientColor = this.getRadialGradientColor(element);\n            }\n            this.gauge.gradientCount = this.gauge.gradientCount + 1;\n        }\n        else {\n            return null;\n        }\n        return gradientColor;\n    };\n    Gradient.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Gradient';\n    };\n    /**\n     * To destroy the Gradient.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    Gradient.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Gradient;\n}());\nexport { Gradient };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable max-len */\n/* eslint-disable brace-style */\n/**\n * Circular Gauge\n */\nimport { Property, NotifyPropertyChanges, Component } from '@syncfusion/ej2-base';\nimport { Complex, Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, Collection, Internationalization } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { removeElement, getElement, stringToNumber, measureText, toPixel, textElement, getAngleFromValue, getAngleFromLocation, getPathArc, getPointer, RectOption, Size, GaugeLocation, Rect, TextOption } from './utils/helper-common';\nimport { setStyles, getValueFromAngle, getRange } from './utils/helper-circular-gauge';\nimport { Border, Margin, Font, TooltipSettings } from './model/base';\nimport { Axis } from './axes/axis';\nimport { Annotations } from './annotations/annotations';\nimport { GaugeTooltip } from './user-interaction/tooltip';\nimport { load, loaded, gaugeMouseMove, gaugeMouseLeave, gaugeMouseDown, pointerMove } from './model/constants';\nimport { rangeMove, pointerStart, rangeStart, pointerEnd, rangeEnd } from './model/constants';\nimport { gaugeMouseUp, dragEnd, dragMove, dragStart, resized } from './model/constants';\nimport { AxisLayoutPanel } from './axes/axis-panel';\nimport { getThemeStyle } from './model/theme';\nimport { LegendSettings, Legend } from './legend/legend';\nimport { PdfExport } from './model/pdf-export';\nimport { ImageExport } from './model/image-export';\nimport { Print } from './model/print';\nimport { Gradient } from './axes/gradient';\n/**\n * Represents the circular gauge control.\n * ```html\n * <div id=\"gauge\"/>\n * <script>\n *   var gaugeObj = new CircularGauge();\n *   gaugeObj.appendTo(\"#gauge\");\n * </script>\n * ```\n */\nvar CircularGauge = /** @class */ (function (_super) {\n    __extends(CircularGauge, _super);\n    /**\n     * Constructor for creating the widget\n     *\n     * @param {CircularGaugeModel} options - Specifies the options\n     * @param {string} element - Specifies the element\n     * @hidden\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function CircularGauge(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.isRangeUpdate = false;\n        /** @private */\n        _this.isDrag = false;\n        /**\n         * @private\n         */\n        _this.gradientCount = 0;\n        return _this;\n    }\n    /**\n     * To create svg object, renderer and binding events for the container.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.preRender = function () {\n        this.unWireEvents();\n        this.trigger(load, { gauge: this });\n        this.initPrivateVariable();\n        this.setCulture();\n        this.createSvg();\n        this.wireEvents();\n    };\n    /**\n     * To render the circular gauge elements\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.render = function () {\n        this.setTheme();\n        this.calculateBounds();\n        this.renderElements();\n        this.renderComplete();\n    };\n    CircularGauge.prototype.setTheme = function () {\n        this.themeStyle = getThemeStyle(this.theme);\n    };\n    /**\n     * Method to unbind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'click', this.gaugeOnMouseClick);\n        EventHandler.remove(this.element, 'contextmenu', this.gaugeRightClick);\n        EventHandler.remove(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize);\n    };\n    /**\n     * Method to bind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.wireEvents = function () {\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'click', this.gaugeOnMouseClick, this);\n        EventHandler.add(this.element, 'contextmenu', this.gaugeRightClick, this);\n        EventHandler.add(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize.bind(this));\n        /*! Apply the style for circular gauge */\n        this.setGaugeStyle(this.element);\n    };\n    /**\n     * Handles the mouse click on accumulation chart.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseClick = function (e) {\n        this.setMouseXY(e);\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.click(e);\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse move.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseMove = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseMove);\n        this.trigger('gaugeMouseMove', args, function (observedArgs) {\n            var dragArgs;\n            var tooltip = _this.tooltipModule;\n            if (!args.cancel) {\n                if ((_this.enablePointerDrag || _this.enableRangeDrag) && _this.svgObject.getAttribute('cursor') !== 'grabbing') {\n                    if ((args.target.id.indexOf('_Pointer_') !== -1 && _this.enablePointerDrag) || (_this.enableRangeDrag && args.target.id.indexOf('_Range_') !== -1)) {\n                        _this.svgObject.setAttribute('cursor', 'pointer');\n                    }\n                    else {\n                        _this.svgObject.setAttribute('cursor', 'auto');\n                    }\n                }\n                var svgElement = getElement(_this.element.id + '_svg');\n                var extraWidth = _this.element.getBoundingClientRect().left - svgElement.getBoundingClientRect().left;\n                if (_this.enablePointerDrag && _this.activePointer) {\n                    _this.isDrag = true;\n                    var dragPointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                    var dragAxisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        pointer: _this.activePointer,\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        type: pointerMove,\n                        currentValue: null,\n                        axisIndex: dragAxisInd,\n                        pointerIndex: dragPointInd\n                    };\n                    _this.pointerDrag(new GaugeLocation(args.x + extraWidth, args.y), dragAxisInd, dragPointInd);\n                    dragArgs.currentValue = _this.activePointer.currentValue;\n                    _this.trigger(dragMove, dragArgs);\n                    _this.activeRange = null;\n                }\n                else if (_this.enableRangeDrag && _this.activeRange) {\n                    _this.isDrag = true;\n                    var dragAxisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                    var dragRangeInd = parseInt(_this.activeRange.pathElement[0].id.split('Range_')[1], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        name: dragMove,\n                        type: rangeMove,\n                        range: _this.activeRange,\n                        axisIndex: dragAxisInd,\n                        rangeIndex: dragRangeInd\n                    };\n                    _this.rangeDrag(new GaugeLocation(args.x + extraWidth, args.y), dragAxisInd, dragRangeInd);\n                    _this.trigger(dragMove, dragArgs);\n                }\n            }\n        });\n        if (!this.isTouch) {\n            if (this.legendModule && this.legendSettings.visible) {\n                this.legendModule.move(e);\n            }\n        }\n        this.notify(Browser.touchMoveEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse leave.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseLeave = function (e) {\n        this.setMouseXY(e);\n        this.activeAxis = null;\n        this.activePointer = null;\n        this.activeRange = null;\n        this.svgObject.setAttribute('cursor', 'auto');\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseLeave);\n        this.trigger(gaugeMouseLeave, args);\n        return false;\n    };\n    /**\n     * Handles the mouse right click.\n     *\n     * @param {MouseEvent | PointerEvent} event - Specifies the pointer or mouse event.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    CircularGauge.prototype.gaugeRightClick = function (event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Handles the pointer draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the location of the gauge\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} pointerIndex - Specifies the pointer index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.pointerDrag = function (location, axisIndex, pointerIndex) {\n        var axis = this.activeAxis;\n        var range = axis.visibleRange;\n        var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        if (value >= range.min && value <= range.max) {\n            this.axes[axisIndex].pointers[pointerIndex].value = value;\n            this.activePointer.currentValue = value;\n            this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, this.activePointer, value);\n        }\n    };\n    /**\n     * Handles the range draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the gauge location\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} rangeIndex - Specifies the range index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.rangeDrag = function (location, axisIndex, rangeIndex) {\n        if (this.activeAxis) {\n            var axis = this.activeAxis;\n            var range = axis.visibleRange;\n            var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n            if (value >= range.min && value <= range.max) {\n                var previousValue1 = this.activeRange.currentValue;\n                this.activeRange.currentValue = value;\n                var add = (this.activeRange.end - this.activeRange.start);\n                var div = add / 2;\n                var avg = parseFloat(this.activeRange.start.toString()) + div;\n                this.startValue = (value < avg) ? value : ((previousValue1 < avg) ? previousValue1 : ((this.activeRange.start < this.activeRange.end) ? this.activeRange.start : this.activeRange.end));\n                this.endValue = (value < avg) ? ((previousValue1 > avg) ? previousValue1 : ((this.activeRange.start < this.activeRange.end) ? this.activeRange.end : this.activeRange.start)) : value;\n                this.axes[axisIndex].ranges[rangeIndex].start = this.startValue;\n                this.axes[axisIndex].ranges[rangeIndex].end = this.endValue;\n            }\n        }\n    };\n    /**\n     * Handles the mouse down on gauge.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseDown = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var currentPointer;\n        var currentRange;\n        var args = this.getMouseArgs(e, 'touchstart', gaugeMouseDown);\n        this.trigger('gaugeMouseDown', args, function (observedArgs) {\n            if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Pointer_') >= 0) {\n                currentPointer = getPointer(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentPointer.axisIndex];\n                _this.activePointer = _this.activeAxis.pointers[currentPointer.pointerIndex];\n                if (isNullOrUndefined(_this.activePointer.pathElement)) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                if (_this.activePointer.type === 'Marker' && _this.activePointer.markerShape === 'Text' && _this.activePointer.pathElement.length === 0) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                var pointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                var axisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: pointerStart,\n                    pointer: _this.activePointer,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd\n                });\n                if (_this.enablePointerDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n            else if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Range_') >= 0) {\n                currentRange = getRange(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentRange.axisIndex];\n                _this.activeRange = _this.activeAxis.ranges[currentRange.rangeIndex];\n                if (isNullOrUndefined(_this.activeRange.pathElement)) {\n                    _this.activeRange.pathElement = [e.target];\n                }\n                var rangeInd = parseInt(_this.activeRange.pathElement[0].id.split('Range_')[1], 10);\n                var axisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: rangeStart,\n                    range: _this.activeRange,\n                    axisIndex: axisInd,\n                    rangeIndex: rangeInd\n                });\n                if (_this.enableRangeDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n        });\n        return false;\n    };\n    /**\n     * Handles the mouse end.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseEnd = function (e) {\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchend', gaugeMouseUp);\n        this.isTouch = e.pointerType === 'touch' || e.pointerType === '2' || e.type === 'touchend';\n        var tooltip = this.tooltipModule;\n        this.trigger(gaugeMouseUp, args);\n        if (this.activeAxis && this.activePointer && this.enablePointerDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var pointerInd = parseInt(this.activePointer.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, {\n                name: dragEnd,\n                type: pointerEnd,\n                axis: this.activeAxis,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue,\n                axisIndex: axisInd,\n                pointerIndex: pointerInd\n            });\n            this.activeAxis = null;\n            this.activePointer = null;\n            this.isDrag = false;\n        }\n        else if (this.activeAxis && this.activeRange && this.enableRangeDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var rangeInd = parseInt(this.activeRange.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, {\n                name: dragEnd,\n                type: rangeEnd,\n                axis: this.activeAxis,\n                range: this.activeRange,\n                axisIndex: axisInd,\n                rangeIndex: rangeInd\n            });\n            this.activeAxis = null;\n            this.activeRange = null;\n            this.isDrag = false;\n        }\n        if (!isNullOrUndefined(this.activePointer)) {\n            this.activePointer = null;\n        }\n        this.svgObject.setAttribute('cursor', 'auto');\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse event arguments.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @param {string} type - Specifies the type\n     * @param {string} name - Specifies the name\n     * @returns {IMouseEventArgs} - Returns the mouse event args\n     * @private\n     */\n    CircularGauge.prototype.getMouseArgs = function (e, type, name) {\n        var rect = this.element.getBoundingClientRect();\n        var location = new GaugeLocation(-rect.left, -rect.top);\n        var isTouch = (e.type === type);\n        location.x += isTouch ? e.changedTouches[0].clientX : e.clientX;\n        location.y += isTouch ? e.changedTouches[0].clientY : e.clientY;\n        return {\n            cancel: false, name: name,\n            x: location.x, y: location.y,\n            target: isTouch ? e.target : e.target\n        };\n    };\n    /**\n     * Handles the gauge resize.\n     *\n     * @param {Event} e - Specifies the event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeResize = function (e) {\n        var _this = this;\n        var args = {\n            gauge: this,\n            previousSize: this.availableSize,\n            name: resized,\n            cancel: false,\n            currentSize: this.calculateSvgSize()\n        };\n        this.trigger(resized, args);\n        if (!args.cancel) {\n            if (this.resizeTo) {\n                clearTimeout(this.resizeTo);\n            }\n            if (!isNullOrUndefined(this.element) && this.element.classList.contains('e-circulargauge')) {\n                this.animatePointer = false;\n                this.resizeTo = window.setTimeout(function () {\n                    _this.createSvg();\n                    _this.calculateBounds();\n                    _this.renderElements();\n                }, 500);\n            }\n        }\n        return false;\n    };\n    /**\n     * Applying styles for circular gauge elements\n     *\n     * @param {HTMLElement} element - Specifies the html element\n     * @returns {void}\n     */\n    CircularGauge.prototype.setGaugeStyle = function (element) {\n        element.style.touchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msTouchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    };\n    /**\n     * Method to set culture for gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * Methods to create svg element for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.createSvg = function () {\n        this.removeSvg();\n        this.availableSize = this.calculateSvgSize();\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To Remove the SVG from circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.removeSvg = function () {\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        removeElement(this.element.id + '_svg');\n        this.clearTemplate();\n    };\n    /**\n     * To initialize the circular gauge private variable.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-circulargauge').length;\n            this.element.id = 'circulargauge_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        this.animatePointer = true;\n    };\n    /**\n     * To calculate the size of the circular gauge element.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateSvgSize = function () {\n        var containerWidth = this.element.offsetWidth;\n        var containerHeight = this.element.offsetHeight;\n        var borderWidth = parseInt(this.element.style.borderWidth.split('px').join(''), 10) * 2;\n        var width = stringToNumber(this.width, containerWidth) || containerWidth || 600;\n        var height = stringToNumber(this.height, containerHeight) || containerHeight || 450;\n        width = !isNaN(borderWidth) ? (width - borderWidth) : width;\n        height = !isNaN(borderWidth) ? (height - borderWidth) : height;\n        return new Size(width, height);\n    };\n    /**\n     * To calculate the spacing of the circular gauge element.\n     *\n     * @param {number} top - Specifies the top value\n     * @param {number} left - Specifies the left value\n     * @param {number} width - Specifies the width\n     * @param {number} height - Specifies the height\n     * @param {number} radius - Specifies the radius\n     * @param {number} titleHeight - Specifies the titleHeight\n     * @param {number} isUpperAngle - Specifies the isUpperAngle\n     * @param {number} isLowerAngle - Specifies the isLowerAngle\n     * @param {number} isFullPercent - Specifies the boolean value\n     * @param {number} isUpper - Specifies the boolean value\n     * @param {number} isLower - Specifies the boolean value\n     * @returns {void}\n     */\n    /* eslint-disable max-len */\n    CircularGauge.prototype.radiusAndCenterCalculation = function (top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower) {\n        var rect;\n        var bottom = this.margin.bottom + this.border.width;\n        var minRadius;\n        var widthRadius;\n        var centerX;\n        var centerY;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerXpoint) && isNullOrUndefined(this.centerYpoint)) {\n            rect = new Rect(left, top, width, height);\n        }\n        else {\n            if (!this.allowMargin) {\n                if (!isNullOrUndefined(this.legendModule) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                    minRadius = Math.min(width, height) / 2;\n                    rect = new Rect((left + (width / 2) - minRadius), (top + (height / 2) - minRadius), minRadius * 2, minRadius * 2);\n                }\n                else {\n                    if (width > height && (isLowerAngle && isLower || isUpperAngle && isUpper)) {\n                        widthRadius = ((width) / 2);\n                        var heightValue = isUpper && isLower ? (height / 2) : (height * (3 / 4));\n                        if (widthRadius > heightValue) {\n                            widthRadius = heightValue;\n                        }\n                        rect = new Rect((left + (width / 2) - widthRadius), (top + (height / 2) - widthRadius), widthRadius * 2, widthRadius * 2);\n                    }\n                    else {\n                        if (height > width) {\n                            var heightRadius = height / 2;\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - heightRadius), radius * 2, heightRadius * 2);\n                        }\n                        else {\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n                        }\n                    }\n                }\n            }\n            else {\n                rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            }\n        }\n        this.gaugeRect = rect;\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            this.legendModule.calculateLegendBounds(this.gaugeRect, this.availableSize);\n        }\n        if (!this.allowMargin) {\n            if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                var difference = height - this.gaugeRect.height;\n                this.gaugeRect.width = width - ((this.availableSize.width - this.gaugeRect.width) / 2);\n                this.gaugeRect.y = this.gaugeRect.y - difference;\n                this.gaugeRect.height = this.gaugeRect.height + difference + ((this.availableSize.height - this.gaugeRect.height) / 2);\n            }\n            else if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Left' || this.legendSettings.position === 'Right')) {\n                var difference = this.gaugeRect.height - this.gaugeRect.width;\n                this.gaugeRect.x = this.legendSettings.position === 'Right'\n                    ? this.gaugeRect.x + this.margin.right : this.gaugeRect.x;\n                this.gaugeRect.width = this.legendSettings.position === 'Left' ?\n                    Math.abs(width - ((this.availableSize.width - this.gaugeRect.width + difference) / 2))\n                    : Math.abs(width - ((this.availableSize.width - this.gaugeRect.width) / 2) - 10);\n            }\n            centerX = this.centerXpoint !== null ?\n                stringToNumber(this.centerXpoint, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            if ((isUpperAngle || isLowerAngle) && !isNullOrUndefined(this.legendModule)) {\n                centerX = (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')\n                    ? this.availableSize.width / 2 : this.legendSettings.position === 'Right' ? (this.gaugeRect.width / 2) + this.margin.right :\n                    centerX;\n            }\n            centerY = ((isUpperAngle || isLowerAngle) ? (isUpperAngle ?\n                (((this.gaugeRect.height * (3 / 4) + this.gaugeRect.y) - bottom))\n                : (((this.gaugeRect.height * (1 / 4)) + (this.gaugeRect.y)))) : this.gaugeRect.y + (this.gaugeRect.height / 2));\n            centerY = !isFullPercent && (isUpperAngle || isLowerAngle) ? (this.gaugeRect.height / 2) + this.gaugeRect.y + (radiusPercent * (3 / 4) * (1 / 2)) : centerY;\n            if (!isNullOrUndefined(this.axes) && this.axes.length > 1 && !isNullOrUndefined(this.midPoint)) {\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                if (isUpper && isLower) {\n                    centerY = (this.availableSize.height / 2) - bottom;\n                }\n            }\n        }\n        else {\n            centerX = this.centerXpoint !== null ?\n                stringToNumber(this.centerXpoint, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            centerY = this.centerYpoint !== null ?\n                stringToNumber(this.centerYpoint, this.availableSize.height) : this.gaugeRect.y + (this.gaugeRect.height / 2);\n        }\n        this.midPoint = new GaugeLocation(centerX, centerY);\n    };\n    /**\n     * Method to calculate the availble size for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateBounds = function () {\n        var padding = 5;\n        var rect;\n        var margin = this.margin;\n        var titleHeight = 0;\n        if (this.title) {\n            titleHeight = measureText(this.title, this.titleStyle).height + padding;\n        }\n        var top = margin.top + titleHeight + this.border.width;\n        var bottom = margin.bottom + this.border.width;\n        var left = margin.left + this.border.width;\n        var isUpper = false;\n        var isLower = false;\n        var width = this.availableSize.width - left - margin.right - this.border.width;\n        var height = this.availableSize.height - top - this.border.width - margin.bottom;\n        var radius = Math.min(width, height) / 2;\n        this.centerXpoint = (this.centerX === '') ? null : this.centerX;\n        this.centerYpoint = (this.centerY === '') ? null : this.centerY;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerXpoint) && isNullOrUndefined(this.centerYpoint)) {\n            rect = new Rect(left, top, width, height);\n        }\n        if (!this.allowMargin) {\n            for (var j = 0; j < this.axes.length; j++) {\n                var isUpperAngle = 270 <= this.axes[j].startAngle && this.axes[j].startAngle <= 360 &&\n                    0 <= this.axes[j].endAngle && this.axes[j].endAngle <= 90;\n                var isLowerAngle = 90 >= this.axes[j].startAngle && this.axes[j].startAngle <= 180 &&\n                    180 <= this.axes[j].endAngle && 270 <= this.axes[j].endAngle && 0 !== this.axes[j].startAngle &&\n                    360 !== this.axes[j].endAngle;\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                var isFullPercent = this.axes[j].radius !== null ? parseInt(this.axes[0].radius.split('%')[0], 10) >= 100 : true;\n                var radiusPercent = this.axes[j].radius !== null ? radius * (parseInt(this.axes[0].radius.split('%')[0], 10) / 100) : radius;\n                this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower);\n            }\n        }\n        else {\n            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, false, false, null, null, false, false);\n        }\n        this.gaugeAxisLayoutPanel.measureAxis(this.gaugeRect);\n    };\n    /**\n     * To render elements for circular gauge\n     *\n     * @param {boolean} animate - Specifies whether animation is true or false\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderElements = function (animate) {\n        if (animate === void 0) { animate = true; }\n        this.renderBorder();\n        this.renderTitle();\n        this.gaugeAxisLayoutPanel.renderAxes(animate);\n        this.renderLegend();\n        this.element.appendChild(this.svgObject);\n        this.trigger(loaded, { gauge: this });\n        removeElement('gauge-measuretext');\n    };\n    /**\n     * Method to render legend for accumulation chart\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderLegend = function () {\n        if (!this.legendModule || !this.legendSettings.visible) {\n            return null;\n        }\n        if (this.legendModule.legendCollection.length) {\n            this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds, true);\n        }\n    };\n    /**\n     * Method to render the title for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderTitle = function () {\n        if (this.title) {\n            this.titleStyle.fontFamily = this.themeStyle.fontFamily || this.titleStyle.fontFamily;\n            this.titleStyle.size = this.themeStyle.fontSize || this.titleStyle.size;\n            this.titleStyle.fontWeight = this.titleStyle.fontWeight || this.themeStyle.titleFontWeight;\n            var titleSize = this.titleStyle.size;\n            if (!isNaN(Number(titleSize))) {\n                this.titleStyle.size = titleSize + 'px';\n            }\n            var size = measureText(this.title, this.titleStyle);\n            var options = new TextOption(this.element.id + '_CircularGaugeTitle', this.availableSize.width / 2, this.margin.top + 3 * (size.height / 4), 'middle', this.title);\n            var element = textElement(options, this.titleStyle, this.titleStyle.color || this.themeStyle.titleFontColor, this.svgObject, '');\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    };\n    /**\n     * Method to render the border for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderBorder = function () {\n        var borderWidth = this.border.width;\n        if (borderWidth > 0 || (this.background || this.themeStyle.backgroundColor)) {\n            this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_CircularGaugeBorder', this.background || this.themeStyle.backgroundColor, this.border, null, new Rect(borderWidth / 2, borderWidth / 2, this.availableSize.width - borderWidth, this.availableSize.height - borderWidth))));\n        }\n    };\n    /* eslint-disable valid-jsdoc */\n    /**\n     * This method is used to set the pointer value dynamically for circular gauge.\n     *\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param pointerIndex - Specifies the index value for the pointer in circular gauge.\n     * @param value - Specifies the value for the pointer in circular gauge.\n     */\n    CircularGauge.prototype.setPointerValue = function (axisIndex, pointerIndex, value) {\n        var _this = this;\n        var axis = this.axes[axisIndex];\n        var pointer = axis.pointers[pointerIndex];\n        var pointerRadius = pointer.currentRadius;\n        var enableAnimation = pointer.animation.enable;\n        value = value < axis.visibleRange.min ? axis.visibleRange.min : value;\n        value = value > axis.visibleRange.max ? axis.visibleRange.max : value;\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                setStyles(element, pointer.color, pointer.border);\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performRangeBarAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n            else {\n                if (element.id.indexOf('_Pointer_NeedleCap_') >= 0) {\n                    setStyles(element, pointer.cap.color, pointer.cap.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleTail_') >= 0) {\n                    setStyles(element, pointer.needleTail.color, pointer.needleTail.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleRect_') >= 0) {\n                    setStyles(element, 'transparent', { color: 'transparent', width: 0 });\n                }\n                else {\n                    setStyles(element, pointer.color, pointer.border);\n                }\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performNeedleAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n        });\n        this.isProtectedOnChange = true;\n        pointer.previousValue = pointer.currentValue;\n        pointer.currentValue = value;\n        pointer.value = value;\n        this.isProtectedOnChange = false;\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * This method is used to set the annotation content dynamically for circular gauge.\n     *\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param annotationIndex - Specifies the index value for the annotation in circular gauge.\n     * @param content - Specifies the content for the annotation in circular gauge.\n     */\n    CircularGauge.prototype.setAnnotationValue = function (axisIndex, annotationIndex, content) {\n        var isElementExist = getElement(this.element.id + '_Annotations_' + axisIndex) !== null;\n        var element = getElement(this.element.id + '_Annotations_' + axisIndex) ||\n            createElement('div', {\n                id: this.element.id + '_Annotations_' + axisIndex\n            });\n        var annotation = this.axes[axisIndex].annotations[annotationIndex];\n        if (content !== null) {\n            removeElement(this.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex);\n            annotation.content = content;\n            this.annotationsModule.createTemplate(element, annotationIndex, axisIndex);\n            var secondaryElement = getElement(this.element.id + '_Secondary_Element');\n            if (!isElementExist && !isNullOrUndefined(secondaryElement)) {\n                secondaryElement.appendChild(element);\n            }\n        }\n    };\n    /**\n     * This method is used to print the rendered circular gauge.\n     *\n     * @param id - Specifies the element to print the circular gauge.\n     */\n    CircularGauge.prototype.print = function (id) {\n        if (this.allowPrint && this.printModule) {\n            this.printModule.print(id);\n        }\n    };\n    /**\n     * This method is used to perform the export functionality for the circular gauge.\n     *\n     * @param type - Specifies the type of the export.\n     * @param fileName - Specifies the file name for the exported file.\n     * @param  orientation - Specified the orientation for the exported pdf document.\n     * @param allowDownload - Specifies whether to download as a file.\n     */\n    CircularGauge.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        if (isNullOrUndefined(allowDownload)) {\n            allowDownload = true;\n        }\n        if (type === 'PDF' && this.allowPdfExport && this.pdfExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return new Promise(function (resolve, reject) {\n                resolve(_this.pdfExportModule.export(type, fileName, orientation, allowDownload));\n            });\n        }\n        else if (this.allowImageExport && (type !== 'PDF') && this.imageExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return new Promise(function (resolve, reject) {\n                resolve(_this.imageExportModule.export(type, fileName, allowDownload));\n            });\n        }\n        return null;\n    };\n    /**\n     * Method to set mouse x, y from events\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {void}\n     */\n    CircularGauge.prototype.setMouseXY = function (e) {\n        var pageX;\n        var pageY;\n        var svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        var rect = this.element.getBoundingClientRect();\n        if (e.type.indexOf('touch') > -1) {\n            this.isTouch = true;\n            var touchArg = e;\n            pageY = touchArg.changedTouches[0].clientY;\n            pageX = touchArg.changedTouches[0].clientX;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        this.mouseY = (pageY - rect.top) - Math.max(svgRect.top - rect.top, 0);\n        this.mouseX = (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);\n    };\n    /**\n     * This method is used to set the range values dynamically for circular gauge.\n     *\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param rangeIndex - Specifies the index value for the range in circular gauge.\n     * @param start - Specifies the start value for the current range in circular gauge.\n     * @param end - Specifies the end value for the current range i circular gauge.\n     */\n    CircularGauge.prototype.setRangeValue = function (axisIndex, rangeIndex, start, end) {\n        var element = getElement(this.element.id + '_Axis_' + axisIndex + '_Range_' + rangeIndex);\n        var axis = this.axes[axisIndex];\n        var range = axis.ranges[rangeIndex];\n        var axisRange = axis.visibleRange;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue = Math.min(Math.max(start, axisRange.min), end);\n        var endValue = Math.min(Math.max(start, end), axisRange.max);\n        var oldRangeStart = range.start;\n        var oldRangeEnd = range.end;\n        range.start = start;\n        range.end = end;\n        if (range.start !== range.end && oldRangeStart === oldRangeEnd && this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            var height = this.legendModule.legendBounds.height + this.legendSettings.margin.top + this.legendSettings.margin.bottom + this.legendSettings.border.width;\n            var width = this.legendModule.legendBounds.width + this.legendSettings.margin.left + this.legendSettings.margin.right + this.legendSettings.border.width;\n            var rect = this.gaugeRect;\n            var position = this.legendModule.position;\n            if (position === 'Bottom') {\n                rect.height = rect.height + height;\n            }\n            if (position === 'Top') {\n                rect.height = rect.height + height;\n                rect.y = rect.y - height;\n            }\n            if (position === 'Left') {\n                rect.width = rect.width + width;\n                rect.x = rect.x - width;\n            }\n            if (position === 'Right') {\n                rect.width = rect.width + width;\n            }\n            this.legendModule.calculateLegendBounds(rect, this.availableSize);\n            if (this.legendModule.legendCollection.length) {\n                this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds, true);\n            }\n        }\n        this.isRangeUpdate = true;\n        var startAngle = getAngleFromValue(startValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(endValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var startWidth;\n        if (range.startWidth.length > 0) {\n            startWidth = toPixel(range.startWidth, range.currentRadius);\n        }\n        else {\n            startWidth = range.startWidth;\n        }\n        var endWidth;\n        if (range.endWidth.length > 0) {\n            endWidth = toPixel(range.endWidth, range.currentRadius);\n        }\n        else {\n            endWidth = range.endWidth;\n        }\n        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n        endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n        element.setAttribute('d', getPathArc(this.midPoint, Math.round(startAngle), Math.round(endAngle), range.currentRadius, startWidth, endWidth, range, axis));\n        setStyles(element, (range.color ? range.color : range.rangeColor), {\n            color: (range.color ? range.color : range.rangeColor),\n            width: 0\n        });\n    };\n    /**\n     * To destroy the widget\n     *\n     * @method destroy\n     * @return {void}\n     * @member of Circular-Gauge\n     */\n    CircularGauge.prototype.destroy = function () {\n        this.unWireEvents();\n        this.removeSvg();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns the modules\n     * @private\n     */\n    CircularGauge.prototype.requiredModules = function () {\n        var modules = [];\n        var annotationEnable = false;\n        var axes = this.axes;\n        axes.map(function (axis) {\n            axis.annotations.map(function (annotation) {\n                annotationEnable = annotationEnable || annotation.content !== null;\n            });\n        });\n        if (annotationEnable) {\n            modules.push({\n                member: 'Annotations',\n                args: [this, Annotations]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this, GaugeTooltip]\n            });\n        }\n        if (this.allowPrint) {\n            modules.push({\n                member: 'Print',\n                args: [this, Print]\n            });\n        }\n        if (this.allowImageExport) {\n            modules.push({\n                member: 'ImageExport',\n                args: [this, ImageExport]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this, PdfExport]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'Legend',\n                args: [this, Legend]\n            });\n        }\n        modules.push({\n            member: 'Gradient',\n            args: [this, Gradient]\n        });\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns the string\n     * @private\n     */\n    CircularGauge.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {CircularGaugeModel} newProp - Specifies the new property\n     * @param {CircularGaugeModel} oldProp - Specifies the old property\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // property method calculated\n        var renderer = false;\n        var refreshBounds = false;\n        var refreshWithoutAnimation = false;\n        var isPointerValueSame = (Object.keys(newProp).length === 1 && newProp instanceof Object &&\n            !isNullOrUndefined(this.activePointer));\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                case 'width':\n                case 'centerX':\n                case 'centerY':\n                case 'margin':\n                    this.createSvg();\n                    refreshBounds = true;\n                    break;\n                case 'title':\n                    refreshBounds = (newProp.title === '' || oldProp.title === '');\n                    renderer = !(newProp.title === '' || oldProp.title === '');\n                    break;\n                case 'titleStyle':\n                    if (newProp.titleStyle && newProp.titleStyle.size) {\n                        refreshBounds = true;\n                    }\n                    else {\n                        renderer = true;\n                    }\n                    break;\n                case 'border':\n                    renderer = true;\n                    break;\n                case 'background':\n                    renderer = true;\n                    break;\n                case 'legendSettings':\n                    refreshWithoutAnimation = true;\n                    break;\n                case 'axes':\n                    refreshWithoutAnimation = true;\n                    break;\n            }\n        }\n        if (!isPointerValueSame && !this.isRangeUpdate) {\n            if (!refreshBounds && renderer) {\n                this.removeSvg();\n                this.renderElements();\n            }\n            if (refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements();\n            }\n            if (refreshWithoutAnimation && !renderer && !refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements(false);\n            }\n        }\n        this.isRangeUpdate = false;\n    };\n    /**\n     * Get component name for circular gauge\n     *\n     * @returns {string} - Returns the module name\n     * @private\n     */\n    CircularGauge.prototype.getModuleName = function () {\n        return 'circulargauge';\n    };\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], CircularGauge.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"background\", void 0);\n    __decorate([\n        Property('')\n    ], CircularGauge.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '15px', color: null, fontWeight: null }, Font)\n    ], CircularGauge.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], CircularGauge.prototype, \"margin\", void 0);\n    __decorate([\n        Collection([{}], Axis)\n    ], CircularGauge.prototype, \"axes\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], CircularGauge.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enablePointerDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enableRangeDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPrint\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowImageExport\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerX\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerY\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"moveToCenter\", void 0);\n    __decorate([\n        Property('Material')\n    ], CircularGauge.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], CircularGauge.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(true)\n    ], CircularGauge.prototype, \"allowMargin\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], CircularGauge.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"radiusCalculate\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"annotationRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragEnd\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"resized\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"beforePrint\", void 0);\n    CircularGauge = __decorate([\n        NotifyPropertyChanges\n    ], CircularGauge);\n    return CircularGauge;\n}(Component));\nexport { CircularGauge };\n","import * as index from './index';\nindex.CircularGauge.Inject(index.GaugeTooltip, index.Annotations, index.Legend, index.Print, index.PdfExport, index.ImageExport, index.Gradient);\nexport * from './index';\n"],"names":["measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","style","getFontStyle","innerHTML","setAttribute","Size","clientWidth","clientHeight","toPixel","value","maxDimension","undefined","indexOf","parseInt","size","fontStyle","fontWeight","fontFamily","opacity","color","textElement","options","parent","styles","renderOptions","renderer","SvgRenderer","x","y","fill","text-anchor","anchor","transform","dominant-baseline","baseLine","createText","appendPath","element","gauge","functionName","isCompleteAngle","startAngle","endAngle","totalAngle","Math","floor","getDegree","degree","getAngleFromValue","maximumValue","minimumValue","isClockWise","angle","round","getAngleFromLocation","center","point","atan2","PI","getLocationFromAngle","radius","radian","GaugeLocation","cos","sin","getPathArc","start","end","startWidth","endWidth","range","axis","isNullOrUndefined","startRadius","position","isLinearCircularGradient","direction","endRadius","arcRadius","insideArcRadius","insideEndRadius","insideStartRadius","getRangePath","getCirclePath","arcPath","arcStartOne","arcEndOne","arcStartTwo","arcEndTwo","clockWise","innerStart","innerEnd","pointPosition","arcRoundedPath","outerOldEnd","innerOldEnd","innerOldStart","outerOldStart","roundedPath","arcWidthPath","endArc","startArc","widthDifference","abs","arcWidthPathCalculation","roundedArcWidthPathCalculation","startValueToAngle","maximum","minimum","endRadii","sqrt","pow","centerStartDistance","centerDistance","roundedCornerRadius","arcStart","arcEnd","angleValueDirection","endRadiusValue","arcTwo","startGreater","arcOne","degreeAngle","degreeValueOne","degreeValueTwo","startAddArc","startSubArc","getRoundedPathArc","actualStart","actualEnd","oldStart","oldEnd","getTemplateFunction","template","templateFn","isNaN","parseFloat","querySelectorAll","length","charAt","templateComplier","querySelector","trim","e","removeElement","getElement","remove","stringToNumber","containerSize","getPointer","targetId","tempString","replace","split","axisIndex","pointerIndex","getLabelFormat","format","match","calculateShapes","location","shape","url","path","space","width","height","locX","locY","isLegend","merge","rx","ry","cx","cy","d","href","stroke","setStyles","border","setStyleAttribute","stroke-width","getValueFromAngle","getRange","rangeIndex","getRangePalette","theme","palette","toLowerCase","getThemeStyle","backgroundColor","titleFontColor","tooltipFillColor","tooltipFontColor","labelColor","lineColor","majorTickColor","minorTickColor","pointerColor","capColor","needleColor","needleTailColor","labelFontFamily","titleFontWeight","fontSize","tooltipFillOpacity","tooltipTextOpacity","getMousePosition","pageX","pageY","elementRect","getBoundingClientRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","left","positionY","top","getElementSize","elementSize","tooltipData","templateElement","templateLength","calculateSum","from","to","values","sum","getRangeColor","ranges","min","max","currentRange","filter","rangeColor","linear","currentTime","startValue","endValue","duration","getCompleteArc","innerRadius","checkMinValue","getCompletePath","textTrim","maxWidth","label","i","substring","showTooltip","areaWidth","tooltip","toString","Theme","__extends","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","CustomizeOption","PathOption","_super","dashArray","_this","call","RectOption","rect","Rect","TextOption","VisibleLabels","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","apply","Property","ChildProperty","Font","RangeTooltip","Complex","AnnotationTooltip","Margin","TooltipSettings","axisLabelFont","legendLabelFont","Line","Label","Range","Tick","Cap","NeedleTail","Animation","Annotation","Pointer","Axis","visibleLabels","Collection","Annotations","elementId","renderAnnotation","index","availableSize","parentElement","annotations","map","annotation","annotationIndex","content","createTemplate","childElementCount","renderReactTemplates","axes","childElement","zIndex","autoAngle","argsData","cancel","name","textStyle","trigger","observedArgs","length_1","slice","updateLocation","currentRadius","midPoint","measureElementRect","description","getModuleName","destroy","bounds","GaugeTooltip","tooltipId","borderStyle","addEventListener","renderTooltip","gaugeId","getAttribute","touchArg","samePointerEle","isTooltipRender","type","changedTouches","pointerEle","svgRect_1","svgObject","axisRect_1","rect_1","currentPointer","currentAxis","angle_1","currentValue","visibleRange","tooltipFormat","labelStyle","customLabelFormat","intl","getNumberFormat","useGrouping","useGroupingSeparator","tooltipElement","tooltipEle","enablePointerDrag","showAtMousePosition","roundValue","roundedValue","pointerContent_1","RegExp","tooltipArgs","pointer","event","appendInBodyTag","pointerTooltip","tooltipRect","findPosition","themeStyle","svgTooltip","svgTooltipCreate","arrowInverted","appendTo","isDrag","rangeSvgRect_1","rangeElementRect","rangeAxisRect_1","rect_2","rangeAngle_1","rangeTooltipFormat","rangeSettings","rangeFormat","roundStartValue","roundEndValue","startData_1","endData_1","rangeContent_1","rangeTooltipArgs","rangeTooltipTextStyle_1","rangeTooltip","rangeTemplate","checkParentAnnotationId","annotationTargetElement","annotationSvgRect","annotationElementRect","rect_3","currentAnnotation","annotationAngle","annotationContent","annotationSettings","annotationTooltipArgs","annotationTooltip","annotationTemplate","elementSizeAn","tooltipPosition","removeTooltip","clearTemplate","gaugeRect","offsetLeft","tooltipLeft","tooltipArg","Tooltip","enable","data","enableAnimation","inverted","areaBounds","className","child","roundingPlaces","toFixed","addLeft","addTop","addHeight","addWidth","getElementsByClassName","mouseUpHandler","clearTimeout","setTimeout","bind","isDestroyed","on","Browser","touchMoveEvent","touchEndEvent","removeEventListener","off","AxisRenderer","drawAxisOuterLine","background","setRangeColor","checkAngles","drawAxisLine","lineStyle","allowComponentRender","drawAxisLabels","textWidth","textHeight","currentTextWidth","currentTextHeight","previousLocation","currentLocation","lastLabelLocation","lastLabelAngle","lastLabelAnchor","lastTextWidth","lastTextHeight","labelElement","createGroup","labelCollection","labelsVisible","checkLabelOpposed","majorTicks","minorTicks","labelPadding","shouldMaintainPadding","nearSize","maxLabelSize","offset","farSize","hideIntersectingLabel","findAnchor","showLastLabel","hiddenLabel","offsetAxisLabelsize","getAxisLabelStartPosition","lastlabel","FindAxisLabelCollision","useRangeColor","previousWidth","previousHeight","currentWidth","currentHeight","actualLocation","anchorPosition","drawMinorTickLines","minorTickElements","minorLineStyle","minorInterval","interval","isRangeColor","majorValues","calculateTicks","drawMajorTickLines","majorTickElements","majorLineStyle","push","axisLineWidth","drawRangePath","rangeElement","colorIndex","roundedStartAngle","roundedEndAngle","gradientRangeColor","rangeSplitValue","linearGradient","colorStop","rangeStart","rangeEnd","isAngleCross360","rangeGap","startAndEndRangeGap","process","degreeValue","gradientModule","radialGradient","rangeColorLength","degreeRange","degreeRangeValue","gradientDegree","gradientAngle","gradientAntiAngle","getGradientColorString","roundedRangeAppendPathCalculation","ceil","rangeAppendPathCalculation","pathElement","drawAxisRange","startEndDifference","previousEndWidth","previousStartWidth","currentDistanceFromScale","calculateRangeRadius","calculateRangeRadiusWithPosition","rangeColors","PointerRenderer","drawPointers","animate","pointerElement","pointers","calculatePointerRadius","setPointerValue","animation","doPointerAnimation","pointerRadiusForPosition","markerShape","pointerSize","markerOffset","rangeBarOffset","pointerWidth","markerWidth","drawNeedlePointer","pointerRadius","rectDirection","gradientColor","gradientTailColor","gradientCapColor","needle","needleTail","cap","needleStartWidth","needleEndWidth","mid","minRadius","oldStartValue","oldEndValue","roundStartAngle","roundEndAngle","textangle","textlocation","String","drawMarkerPointer","gradientMarkerColor","shapeBasedOnPosition","markerHeight","imageUrl","drawRangeBarPointer","gradientBarColor","previousValue","animatePointer","performRangeBarAnimation","performNeedleAnimation","sweepAngle","pointAngle","progress","args","timeStamp","model","minAngle","roundRadius","arg","AxisLayoutPanel","axisRenderer","pointerRenderer","measureAxis","measureAxisSize","calculateAxesRadius","totalRadius","rangeMaximumRadius","xMarginDiff","margin","right","yMarginDiff","bottom","this_1","_i","_a","moveToCenter","centerXpoint","centerYpoint","startPoint","endPoint","xDiff","yDiff","startXDiff","endXDiff","startYDiff","endYDiff","newPoint","calculateNumericInterval","calculateVisibleLabels","computeSize","farSizes","calculateAxisValues","calculateVisibleRange","calculateNiceInterval","maxValue","minValue","delta","circumference","desiredIntervalsCount","niceInterval","minInterval","log","currentInterval","this_2","axisLabelRenderSuccess","lastLabel","maxVal","getMaxLabelWidth","lineSize","outerHeight","innerHeight","heightForCross","majorTickOffset","minorTickOffset","labelOffset","axes_1","renderAxes","axesElements","clip-path","annotationsModule","drawClipPath","Location","LegendSettings","Legend","legendRegions","rowCount","pageButtonSize","pageXCollections","maxColumns","currentPage","pagingRegions","toggledIndexes","legend","legendSettings","legendID","click","getLegendOptions","legendCollection","j","legendText","LegendOptions","visible","shapeBorder","shapeWidth","shapeHeight","calculateLegendBounds","legendBounds","isVertical","getLegendBounds","getLocation","alignment","alignLegend","legendSize","padding","legendHeight","legendWidth","marginBottom","subtractThickness","renderLegend","redraw","firstLegend","findFirstLegendPosition","maxItemHeight","textSize","legendGroup","legendTranslateGroup","createLegendElements","totalPages","legendAxisGroup","textOptions","textPadding","shapePadding","count","previousLegend","legendOption","render","getRenderPoint","renderSymbol","renderText","toggleVisibility","isPaging","renderPagingElements","appendChildElement","textOption","paginggroup","symbolOption","iconSize","clipPathHeight","clipRect","pageTextElement","translatePage","pagingText","page","pageNumber","translate","textContent","group","fontcolor","prevLegend","maxColumnWidth","previousBound","totalRowCount","availablewidth","getAvailWidth","legendItemsId","toggledIndex","legendItemsId_1","legendByIndex","Index","isToggled","changePage","rangeID","shapeID","textID","shapeElement","textElement_1","visibility","legendCollections","legendCollections_1","pageUp","pageText","tx","legendX","drawRectangle","legendItemsGroup","clippath","createClipPath","isAnimate","forceAnimate","isRect","previousRect","animateDuration","existChild","replaceChild","legendCollection_1","extraWidth","extraHeight","maximumWidth","rowWidth","columnWidth","columnHeight","legendEventArgs","getMaxColumn","setBounds","computedWidth","computedHeight","columns","maxPageColumn","columns_1","move","mouseX","mouseY","legends","originalText","offsetWidth","circulargauge","PdfExport","control","export","fileName","orientation","allowDownload","Promise","resolve","reject","attrs","userAgent","PdfPageOrientation","Landscape","exportElement","cloneNode","childNodes","window","URL","createObjectURL","Blob","XMLSerializer","serializeToString","image","Image","context","getContext","onload","drawImage","revokeObjectURL","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","src","ImageExport","isDownload","svgData","outerHTML","triggerDownload","image_1","context_1","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","Print","print","elements","printWindow","open","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","htmlContent","getHTMLContent","beforePrintArgs","div","forEach","Element","ColorStop","GradientPosition","LinearGradient","RadialGradient","Gradient","calculateLinearGradientPosition","x1","x2","y1","y2","getLinearGradientColor","colors","getCircularGradientColor","getGradientColor","gradientCount","gradientPosition","def","drawGradient","getRadialGradientColor","outerPosition","fx","innerPosition","fy","CircularGauge","isRangeUpdate","preRender","unWireEvents","initPrivateVariable","setCulture","createSvg","wireEvents","setTheme","calculateBounds","renderElements","renderComplete","EventHandler","touchStartEvent","gaugeOnMouseDown","mouseMove","mouseEnd","gaugeOnMouseClick","gaugeRightClick","isPointer","mouseLeave","isTouch","gaugeResize","setGaugeStyle","setMouseXY","legendModule","getMouseArgs","dragArgs","tooltipModule","enableRangeDrag","svgElement","activePointer","dragPointInd","dragAxisInd","activeAxis","pointerDrag","activeRange","dragRangeInd","rangeDrag","notify","buttons","pointerType","preventDefault","stopPropagation","gaugeAxisLayoutPanel","previousValue1","avg","pointInd","axisInd","rangeInd","pointerInd","clientX","clientY","previousSize","currentSize","calculateSvgSize","classList","contains","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","Internationalization","removeSvg","removeChild","firstChild","hasChildNodes","parentNode","collection","containerWidth","containerHeight","offsetHeight","borderWidth","join","radiusAndCenterCalculation","titleHeight","isUpperAngle","isLowerAngle","isFullPercent","radiusPercent","isUpper","isLower","widthRadius","centerX","centerY","allowMargin","heightValue","heightRadius","difference","title","titleStyle","renderBorder","renderTitle","titleSize","Number","tabIndex","isProtectedOnChange","setAnnotationValue","isElementExist","secondaryElement","allowPrint","printModule","allowPdfExport","pdfExportModule","allowImageExport","imageExportModule","svgRect","setRangeValue","axisRange","oldRangeStart","oldRangeEnd","requiredModules","modules","annotationEnable","member","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","refreshBounds","refreshWithoutAnimation","isPointerValueSame","keys","Event","NotifyPropertyChanges","Component","index.CircularGauge","Inject","index.GaugeTooltip","index.Annotations","index.Legend","index.Print","index.PdfExport","index.ImageExport","index.Gradient"],"mappings":"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"}