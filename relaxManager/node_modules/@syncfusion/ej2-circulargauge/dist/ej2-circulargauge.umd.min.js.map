{"version":3,"file":"ej2-circulargauge.umd.min.js","sources":["../src/circular-gauge/utils/helper-common.js","../src/circular-gauge/utils/helper-circular-gauge.js","../src/circular-gauge/utils/helper-tooltip.js","../src/circular-gauge/utils/helper-axis-panel.js","../src/circular-gauge/utils/helper-axis-renderer.js","../src/circular-gauge/utils/helper-pointer-renderer.js","../src/circular-gauge/utils/helper-legend.js","../src/circular-gauge/model/theme.js","../src/circular-gauge/model/base.js","../src/circular-gauge/axes/axis.js","../src/circular-gauge/model/constants.js","../src/circular-gauge/annotations/annotations.js","../src/circular-gauge/user-interaction/tooltip.js","../src/circular-gauge/axes/axis-renderer.js","../src/circular-gauge/axes/pointer-renderer.js","../src/circular-gauge/axes/axis-panel.js","../src/circular-gauge/legend/legend.js","../src/circular-gauge/model/pdf-export.js","../src/circular-gauge/model/image-export.js","../src/circular-gauge/model/print.js","../src/circular-gauge/axes/gradient.js","../src/circular-gauge/circular-gauge.js"],"sourcesContent":["/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge Common Helper methods\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { compile as templateComplier, isNullOrUndefined, remove, createElement, merge } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Function to measure the height and width of the text.\n *\n * @param  {string} text - Specifies the text.\n * @param  {FontModel} font - Specifies the font.\n * @param  {string} id - Specifies the id of the text.\n * @returns {Size} - Returns the size of the text.\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('gauge-measuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'gauge-measuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    var style = 'position: absolute; visibility: hidden;' +\n        ';left: 0px; top: -100px; white-space: nowrap;' + getFontStyle(font);\n    htmlObject.innerHTML = text;\n    htmlObject.setAttribute('style', style);\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to find number from string\n *\n * @param {string} value - Specifies the value.\n * @param {number} maxDimension - Specifies the  maximum dimension.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function toPixel(value, maxDimension) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (maxDimension / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get the style from FontModel.\n *\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getFontStyle(font) {\n    var style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/**\n * Function to create the text element.\n *\n * @param {TextOption} options - Specifies the options.\n * @param {FontModel} font - Specifies the font.\n * @param {string} color - Specifies the color.\n * @param {HTMLElement | Element} parent - Specifies the html element.\n * @param {string} styles - Specifies the style.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function textElement(options, font, color, parent, styles) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var renderOptions = {};\n    var renderer = new SvgRenderer('');\n    var style = styles + ' font-size:' + font.size + '; font-style:' + font.fontStyle +\n        ' ; font-weight:' + font.fontWeight + '; font-family:' + font.fontFamily + ';';\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'style': style\n    };\n    var htmlObject = renderer.createText(renderOptions, options.text);\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to append the path to the element.\n *\n * @param {PathOption} options - Specifies the options.\n * @param {Element} element - Specifies the element.\n * @param {CircularGauge} gauge - Specifies the gauge.\n * @param {string} functionName - Specifies the function name.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function appendPath(options, element, gauge, functionName) {\n    functionName = functionName ? functionName : 'Path';\n    var htmlObject = gauge.renderer['draw' + functionName](options);\n    htmlObject.setAttribute('transform', options.transform);\n    htmlObject.setAttribute('style', options.style);\n    element.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to check whether it's a complete circle for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {boolean} Returns the boolean value.\n * @private\n */\nexport function isCompleteAngle(startAngle, endAngle) {\n    var totalAngle = endAngle - startAngle;\n    totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n    return Math.floor(totalAngle / 360) !== 0;\n}\n/**\n * Function to get the degree for circular gauge.\n *\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getDegree(startAngle, endAngle) {\n    var degree = endAngle - startAngle;\n    return degree < 0 ? (degree + 360) : degree;\n}\n/**\n * Function to get the angle from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromValue(value, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    var angle;\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    startAngle -= 90;\n    endAngle -= 90;\n    if (isClockWise) {\n        angle = ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue))) + startAngle;\n    }\n    else {\n        angle = endAngle - ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue)));\n        angle = angle < 0 ? 360 + angle : angle;\n    }\n    angle = Math.round(angle) >= 360 ? (angle - 360) : Math.round(angle) < 0 ? (360 + angle) : angle;\n    return angle;\n}\n/**\n * Function to get angle from location for circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {GaugeLocation} point - Specifies the point.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function getAngleFromLocation(center, point) {\n    var angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = Math.round((angle < 0 ? (6.283 + angle) : angle) * (180 / Math.PI)) - 270;\n    angle += angle < 0 ? 360 : 0;\n    return angle;\n}\n/**\n * Function to get the location from angle for circular gauge.\n *\n * @param {number} degree - Specifies the degree.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} center - Specifies the center.\n * @returns {GaugeLocation} - Returns the gauge location.\n * @private\n */\nexport function getLocationFromAngle(degree, radius, center) {\n    var radian = (degree * Math.PI) / 180;\n    return new GaugeLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Function to get the path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center.\n * @param {number} start - Specifies the start.\n * @param {number} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} startWidth - Specifies the startWidth.\n * @param {number} endWidth - Specifies the endWidth.\n * @param {Range} range - Specifies the range.\n * @param {Axis} axis - Specifies the axis.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function getPathArc(center, start, end, radius, startWidth, endWidth, range, axis) {\n    if (isNullOrUndefined(range) || (range.start !== range.end)) {\n        end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    }\n    var degree = getDegree(start, end);\n    var startRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + startWidth : range.position === 'Cross'\n        && axis.direction === 'AntiClockWise' ? radius - (endWidth + startWidth) / 2 : radius - startWidth) : radius - startWidth;\n    var endRadius = !isNullOrUndefined(range) ? (range.position === 'Outside'\n        && !range.isLinearCircularGradient ? radius + endWidth : range.position === 'Cross' &&\n        axis.direction === 'ClockWise' ? radius - (endWidth + startWidth) / 2 : radius - endWidth) : radius - endWidth;\n    var arcRadius = !isNullOrUndefined(range) ? (range.position === 'Outside' && !range.isLinearCircularGradient\n        ? radius + ((startWidth + endWidth) / 2) :\n        range.position === 'Cross' ? (radius - ((startWidth + endWidth) / 4) - (axis.direction === 'ClockWise' ? startWidth : endWidth)\n            / 2) : radius - ((startWidth + endWidth) / 2)) : radius - ((startWidth + endWidth) / 2);\n    var insideArcRadius = !isNullOrUndefined(range) && range.position === 'Cross' ?\n        radius + ((startWidth + endWidth) / 4)\n            - (axis.direction === 'ClockWise' ? startWidth : endWidth) / 2 : radius;\n    var insideEndRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'ClockWise' ?\n        radius - ((startWidth - endWidth) / 2) : radius;\n    var insideStartRadius = !isNullOrUndefined(range) && range.position === 'Cross' && axis.direction === 'AntiClockWise' ?\n        radius + ((startWidth - endWidth) / 2) : radius;\n    if (startWidth !== undefined && endWidth !== undefined) {\n        insideEndRadius = range.position === 'Cross' ? (degree > 325 ? insideStartRadius : insideEndRadius) : insideEndRadius;\n        return getRangePath(getLocationFromAngle(start, insideStartRadius, center), getLocationFromAngle(end, insideEndRadius, center), getLocationFromAngle(start, startRadius, center), getLocationFromAngle(end, endRadius, center), insideArcRadius, startRadius, endRadius, arcRadius, (degree < 180) ? 0 : 1, center, degree, range, axis);\n    }\n    else {\n        return getCirclePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, (degree < 180) ? 0 : 1);\n    }\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcPath(start, end, radius, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + pointPosition.x\n        + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo\n        + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z ';\n}\n/**\n * Function to get the range path arc direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {number} radius - Specifies the radius.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd.\n * @param {number} arcStartOne - Specifies the arcStartOne.\n * @param {number} arcEndOne - Specifies the arcEndOne.\n * @param {number} arcStartTwo - Specifies the arcStartTwo.\n * @param {number} arcEndTwo - Specifies the arcEndTwo.\n * @param {number} clockWise - Specifies the clockWise.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart.\n * @param {GaugeLocation} pointPosition - Specifies the pointPosition.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition) {\n    var roundedPath = 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y;\n    if (isNullOrUndefined(arcStartTwo) && isNullOrUndefined(arcEndTwo)) {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 ' + innerStart.x + ' '\n            + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n    else {\n        return roundedPath + ' A ' + arcStartOne + ' ' + arcEndOne + ' 0 ' + clockWise + ' 0 '\n            + pointPosition.x + ' ' + pointPosition.y + ' ' + ' A ' + arcStartTwo + ' ' + arcEndTwo + ' 0 ' + clockWise + ' 0 '\n            + innerStart.x + ' ' + innerStart.y + ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n            outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n    }\n}\n/**\n * Function to get the range path direction for different start and end width of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the options.\n * @param {GaugeLocation} end - Specifies the end.\n * @param {GaugeLocation} innerStart - Specifies the innerStart.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd.\n * @param {number} radius - Specifies the radius.\n * @param {number} startRadius - Specifies the startRadius.\n * @param {number} endRadius - Specifies the endRadius.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the string.\n * @private\n */\nexport function arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get the range path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start values.\n * @param {GaugeLocation} end - Specifies the end values.\n * @param {GaugeLocation} innerStart - Specifies the innerStart values.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd values.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the string value.\n * @private\n */\nexport function getRangePath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, degree, range, axis) {\n    var startWidth = range.startWidth;\n    var endWidth = range.endWidth;\n    var widthDifference = Math.abs(startWidth - endWidth);\n    var endArc;\n    var startArc;\n    if (startWidth > endWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (endRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (startRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if (endWidth > startWidth && degree <= 260 && range.position !== 'Cross' && range.position !== 'Outside') {\n        endArc = (startRadius + (axis.direction === 'ClockWise' ? -(widthDifference / 2) : (widthDifference / 2)));\n        startArc = (endRadius + (axis.direction === 'ClockWise' ? (widthDifference / 2) : -(widthDifference / 2)));\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startArc, endArc, clockWise);\n    }\n    else if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n        return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n    }\n    else if ((degree > 260) || (!range.isLinearCircularGradient && axis.startAngle === 0 && axis.endAngle === 0)) {\n        return arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, null, null, null, null, startWidth, endWidth, degree, range, axis);\n    }\n    else {\n        if (range.position === 'Cross' || range.position === 'Outside') {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n        }\n        else {\n            return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n        }\n    }\n}\n/**\n * Function to get start and end width range path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} arcRadius - Specifies the arcRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {number} degree - Specifies the degree value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the svg path.\n * @private\n */\nexport function arcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, arcRadius, clockWise, center, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart, startWidth, endWidth, degree, range, axis) {\n    if (!isNullOrUndefined(range)) {\n        var arcStartOne = void 0;\n        var arcEndOne = void 0;\n        var widthDifference = Math.abs(startWidth - endWidth);\n        var arcStartTwo = void 0;\n        var arcEndTwo = void 0;\n        var startValueToAngle = getAngleFromValue(((range.start + range.end) / 2), axis.maximum, axis.minimum, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var pointPosition = (startWidth < ((endWidth))) ?\n            getLocationFromAngle(startValueToAngle, endRadius, center) : getLocationFromAngle(startValueToAngle, startRadius, center);\n        // eslint-disable-next-line max-len\n        var endDistance = Math.sqrt((Math.pow((innerEnd.x - pointPosition.x), 2)) + (Math.pow((innerEnd.y - pointPosition.y), 2)));\n        var endRadii = endDistance / 2;\n        var centerStartDistance = Math.sqrt((Math.pow((center.x - innerStart.x), 2)) + (Math.pow((center.y - innerStart.y), 2)));\n        var centerDistance = Math.sqrt((Math.pow((center.x - pointPosition.x), 2)) + (Math.pow((center.y - pointPosition.y), 2)));\n        if (range.roundedCornerRadius <= 0) {\n            widthDifference = widthDifference === 0 ? 1 : widthDifference;\n            innerEnd.y = (range.position === 'Cross' && axis.direction === 'ClockWise') ? degree > 325 ?\n                innerEnd.y - (widthDifference / 2) : innerEnd.y : innerEnd.y;\n            var degreeValue = range.position === 'Cross' ? 330 : 325;\n            if (((degreeValue <= degree && degree <= 360))) {\n                arcStartTwo = (axis.direction === 'ClockWise' ? (centerDistance / 2)\n                    : (degree >= 345 ? (startRadius - (widthDifference / 2) - (endWidth / 2))\n                        : range.position === 'Cross' ? (startRadius + (widthDifference / 4) - (startWidth / 2))\n                            : (startRadius - (widthDifference / 2) - (startWidth / 2))));\n                arcEndTwo = (axis.direction === 'ClockWise' ? (centerStartDistance / 2)\n                    : range.position === 'Cross' ?\n                        (endRadius + (widthDifference / 4)) - (endWidth / 4) :\n                        (range.position === 'Outside' && axis.direction === 'AntiClockWise') ? degree < 345 ?\n                            (startRadius - (widthDifference) - (endWidth / 4))\n                            : (startRadius - (widthDifference / 2))\n                            : (endRadius + (widthDifference / 2)) - (endWidth / 2));\n                return arcPath(start, end, radius, endRadii, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, pointPosition);\n            }\n            else if ((degree > 260 && degree < 325) && range.position !== 'Cross' && range.position !== 'Outside') {\n                var arcStart = (arcRadius - (widthDifference / 2));\n                var arcEnd = (arcRadius - (widthDifference / 2));\n                var angleValueDirection = axis.direction === 'ClockWise' ? degree >= 310 : degree < 345;\n                if (degree < 310) {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcStart, arcEnd, clockWise);\n                }\n                else if (degree >= 310 || angleValueDirection) {\n                    arcStart = (arcRadius - (widthDifference));\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, arcEnd, arcStart, clockWise);\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n            else {\n                if (range.position === 'Cross') {\n                    var endRadiusValue = axis.direction === 'ClockWise' ? degree <= 300 && degree >= 260 ?\n                        endRadius - (widthDifference / 2) - (startWidth / 4) : endRadius\n                        - (widthDifference) - (startWidth / 2) : degree <= 300 && degree >= 260 ?\n                        endRadius + (widthDifference / 4) - (startWidth / 4) :\n                        endRadius + (widthDifference / 4) - (startWidth / 2);\n                    var startRadiusValue = axis.direction === 'ClockWise' ? degree > 325 ? degree > 340 ? (startRadius - startWidth)\n                        - (widthDifference / 4) : startRadius - (widthDifference / 4)\n                        : startRadius : startRadius - (widthDifference / 4);\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadiusValue, endRadiusValue, clockWise);\n                }\n                else if (range.position === 'Outside') {\n                    if (degree < 325 && degree > 285) {\n                        var arcTwo = void 0;\n                        var startGreater = startWidth / 2;\n                        var endGreater = endWidth / 2;\n                        var arcOne = arcTwo = arcRadius + (widthDifference / 2) + startGreater + endGreater;\n                        innerEnd.y = axis.direction === 'ClockWise' && startWidth !== endWidth && startWidth > widthDifference ?\n                            innerEnd.y - (widthDifference / 2) : innerEnd.y + startGreater;\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcOne, arcTwo, clockWise);\n                    }\n                    else {\n                        return arcWidthPath(start, end, innerStart, innerEnd, radius, arcRadius, arcRadius, clockWise);\n                    }\n                }\n                else {\n                    return arcWidthPath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise);\n                }\n            }\n        }\n        else {\n            var degreeAngle = axis.endAngle < 4 ? 356 : 360;\n            clockWise = degree > degreeAngle ? 0 : clockWise;\n            var degreeValueOne = axis.direction === 'ClockWise' ? 327 : 322;\n            var degreeValueTwo = axis.direction === 'ClockWise' ? 328 : 325;\n            if ((endWidth === startWidth) && (axis.startAngle !== 0 || axis.endAngle !== 0)) {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n            else if ((degree <= degreeAngle && degree > degreeValueOne) && range.roundedCornerRadius > 0) {\n                arcStartOne = axis.direction === 'ClockWise' ? degree < 334 && degree > 324 ? endRadii - (widthDifference / 2) :\n                    endRadii - (widthDifference / 4) : endRadii;\n                arcStartTwo = (centerDistance / 2);\n                arcEndTwo = axis.direction === 'ClockWise' ? ((centerStartDistance / 2) + (widthDifference / 2)) :\n                    (centerStartDistance / 2);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, endRadii, arcStartTwo, arcEndTwo, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, pointPosition);\n            }\n            else if (degree > 270 && degree < degreeValueTwo) {\n                var startAddArc = endRadius + (widthDifference / 2) - (endWidth / 2);\n                var startSubArc = endRadius - (widthDifference / 2) - (endWidth / 2);\n                arcStartOne = (startRadius - (widthDifference / 2) - (startWidth / 2));\n                arcEndOne = (axis.direction === 'ClockWise' ? startSubArc : startAddArc);\n                return arcRoundedPath(start, end, radius, outerOldEnd, innerOldEnd, arcStartOne, arcEndOne, null, null, clockWise, innerStart, innerEnd, innerOldStart, outerOldStart, null);\n            }\n            else {\n                return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n            }\n        }\n    }\n    else {\n        return roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart);\n    }\n}\n/**\n * Function to get start and end width range rounded path calculation to the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startRadius - Specifies the startRadius value.\n * @param {number} endRadius - Specifies the endRadius value.\n * @param {number} clockWise - Specifies the clockWise value.\n * @param {GaugeLocation} outerOldEnd - Specifies the outerOldEnd value.\n * @param {GaugeLocation} innerOldEnd - Specifies the innerOldEnd value.\n * @param {GaugeLocation} outerOldStart - Specifies the outerOldStart value.\n * @param {GaugeLocation} innerOldStart - Specifies the innerOldStart value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function roundedArcWidthPathCalculation(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y + ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y +\n        ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n        outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n}\n/**\n * Function to get the rounded path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} actualStart - Specifies the actualStart value.\n * @param {number} actualEnd - Specifies the actualEnd value.\n * @param {number} oldStart - Specifies the oldStart value.\n * @param {number} oldEnd - Specifies the oldEnd value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} startWidth - Specifies the startWidth value.\n * @param {number} endWidth - Specifies the endWidth value.\n * @param {Range} range - Specifies the range value.\n * @param {Axis} axis - Specifies the axis value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getRoundedPathArc(center, actualStart, actualEnd, oldStart, oldEnd, radius, startWidth, endWidth, range, axis) {\n    actualEnd -= isCompleteAngle(actualStart, actualEnd) ? 0.0001 : 0;\n    var degree = getDegree(actualStart, actualEnd);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    return arcWidthPathCalculation(getLocationFromAngle(actualStart, radius, center), getLocationFromAngle(actualEnd, radius, center), getLocationFromAngle(actualStart, startRadius, center), getLocationFromAngle(actualEnd, endRadius, center), radius, arcRadius, arcRadius, arcRadius, (degree < 180) ? 0 : 1, center, getLocationFromAngle(oldEnd, radius, center), getLocationFromAngle(oldEnd, endRadius, center), getLocationFromAngle(oldStart, radius, center), getLocationFromAngle(oldStart, startRadius, center), startWidth, endWidth, degree, range, axis);\n}\n/**\n * Function to get the circular path direction of the circular gauge.\n *\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCirclePath(start, end, radius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n        radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y;\n}\n/**\n * Function to compile the template function for circular gauge.\n *\n * @param {string} template - Specifies the template.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {Function} - Returns the template function.\n * @private\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getTemplateFunction(template, gauge) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = null;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var e;\n    try {\n        if (isNaN(parseFloat(template)) && document.querySelectorAll(template).length) {\n            if ((template.charAt(0) !== 'a' || template.charAt(0) !== 'A') && template.length !== 1) {\n                templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n            }\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/**\n * Function to remove the element from id.\n *\n * @param {string} id Specifies the id\n * @returns {void}\n * @private\n */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * Function to get element from id.\n *\n * @param {string} id - Specifies the id.\n * @returns {Element} - Returns the element.\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Function to convert the number from string.\n *\n * @param {string} value - Specifies the value.\n * @param {number} containerSize - Specifies the container size.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisiblePointer} - Returns the pointer and axis index.\n * @private\n */\nexport function getPointer(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        pointerIndex: +tempString[tempString.length - 1]\n    };\n}\n/**\n * Function to convert the label using format for cirular gauge.\n *\n * @param {string} format - Specifies the format.\n * @returns {string} - Returns th string.\n * @private\n */\nexport function getLabelFormat(format) {\n    var customLabelFormat = format && format.match('{value}') !== null;\n    var skeleton = customLabelFormat ? '' : format;\n    return skeleton;\n}\n/**\n * Function to calculate the marker shape for circular gauge.\n *\n * @param {GaugeLocation} location - Specifies the location.\n * @param {string} shape - Specifies the shape.\n * @param {Size} size - Specifies the size.\n * @param {string} url - Specifies the url.\n * @param {PathOption} options - Specifies the path option.\n * @returns {PathOption} - Returns the path.\n * @private\n */\nexport function calculateShapes(location, shape, size, url, options) {\n    var path;\n    var width = size.width;\n    var height = size.height;\n    var locX = location.x;\n    var locY = location.y;\n    var x = location.x + (-width / 2);\n    var y = location.y + (-height / 2);\n    var isLegend = options.id.indexOf('Shape') > -1;\n    var space;\n    switch (shape) {\n        case 'Circle':\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Triangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + (width / 2)) + ' ' + y + ' ' + 'L' + ' ' + (x + width) + ' ' +\n                    (y + height) + 'L' + ' ' + x + ' ' + (y + height) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX - height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX - height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'InvertedTriangle':\n            if (isLegend) {\n                path = 'M' + ' ' + (x + width) + ' ' + y + ' ' + 'L' + ' ' + (x + (width / 2)) + ' ' + (y + height) +\n                    'L' + ' ' + x + ' ' + (y) + ' Z';\n            }\n            else {\n                path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                    'L' + ' ' + (locX + height) + ' ' + (locY - (width / 2)) +\n                    'L' + ' ' + (locX + height) + ' ' + (locY + (width / 2)) + ' Z';\n            }\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n        case 'RightArrow':\n            space = 2;\n            path = 'M' + ' ' + (locX + (-width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (-width / 2)) + ' ' + (locY + (height / 2)) + ' L' + ' ' + (locX + (-width / 2)) + ' ' +\n                (locY + (height / 2) - space) + ' ' + 'L' + ' ' + (locX + (width / 2) - (2 * space)) + ' ' + (locY) +\n                ' L' + (locX + (-width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'LeftArrow':\n            options.fill = options.stroke;\n            options.stroke = 'transparent';\n            space = 2;\n            path = 'M' + ' ' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (-width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2) - space) + ' L' + ' ' + (locX + (-width / 2) + (2 * space))\n                + ' ' + (locY) + ' L' + (locX + (width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n    }\n    return options;\n}\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d, transform, style) {\n        if (transform === void 0) { transform = ''; }\n        if (style === void 0) { style = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color;\n        _this['stroke-width'] = width;\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        _this.transform = transform;\n        _this.style = style;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect) {\n        var _this = _super.call(this, id) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = border.color;\n        _this['stroke-width'] = border.width;\n        return _this;\n    }\n    return RectOption;\n}(CustomizeOption));\nexport { RectOption };\n/**\n * Internal class size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/**\n * Internal use of circular gauge location\n */\nvar GaugeLocation = /** @class */ (function () {\n    function GaugeLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return GaugeLocation;\n}());\nexport { GaugeLocation };\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.transform = '';\n        _this.baseLine = 'auto';\n        _this.x = x;\n        _this.y = y;\n        _this.anchor = anchor;\n        _this.text = text;\n        _this.transform = transform;\n        _this.baseLine = baseLine;\n        return _this;\n    }\n    return TextOption;\n}(CustomizeOption));\nexport { TextOption };\n/** @private */\nvar VisibleLabels = /** @class */ (function () {\n    function VisibleLabels(text, value, size) {\n        this.text = text;\n        this.value = value;\n        this.size = size;\n    }\n    return VisibleLabels;\n}());\nexport { VisibleLabels };\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge Helper methods\n */\nimport { setStyleAttribute } from '@syncfusion/ej2-base';\nimport { isCompleteAngle, getDegree } from './helper-common';\n/**\n * Function to set style to the element.\n *\n * @param {HTMLElement} element - Specifies the element.\n * @param {string} fill - Specifies the fill of the element.\n * @param {BorderModel} border - Specifies the border of the element.\n * @returns {void}\n * @private\n */\nexport function setStyles(element, fill, border) {\n    setStyleAttribute(element, {\n        'stroke': border.color, 'stroke-width': border.width,\n        'fill': fill\n    });\n}\n/**\n * Function to get the value from angle for circular gauge.\n *\n * @param {number} angle - Specifies the angle.\n * @param {number} maximumValue - Specifies the maximumValue.\n * @param {number} minimumValue - Specifies the minimumValue.\n * @param {number} startAngle - Specifies the startAngle.\n * @param {number} endAngle - Specifies the endAngle.\n * @param {boolean} isClockWise - Specifies the isClockWise.\n * @returns {number} - Returs the number.\n * @private\n */\nexport function getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    angle = angle < startAngle ? (angle + 360) : angle;\n    if (isClockWise) {\n        return (((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;\n    }\n    else {\n        return maximumValue - ((((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue);\n    }\n}\n/**\n * Function to get current point for circular gauge using element id.\n *\n * @param {string} targetId - Specifies the target id.\n * @param {CircularGauge} gauge - Specifies the gauge instance.\n * @returns {IVisibleRange} - Returns the current point.\n * @private\n */\nexport function getRange(targetId, gauge) {\n    var tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        rangeIndex: +tempString.split('Range_')[1]\n    };\n}\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge Tooltip Helper methods\n */\nimport { GaugeLocation, getTemplateFunction, Size } from './helper-common';\nimport { remove } from '@syncfusion/ej2-base';\n/**\n * Function to get the mouse position\n *\n * @param {number} pageX - Specifies the pageX value.\n * @param {number} pageY - Specifies the pageY value.\n * @param {Element} element - Specifies the element.\n * @returns {GaugeLocation} - Returns the location.\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new GaugeLocation((pageX - positionX), (pageY - positionY));\n}\nexport function getElementSize(template, gauge, parent) {\n    var elementSize;\n    var element;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = getTemplateFunction(template, gauge);\n    var tooltipData = templateFn ? templateFn({}, null, null, gauge.element.id + 'Template') : [];\n    if (templateFn && tooltipData.length) {\n        element = gauge.createElement('div', { id: gauge.element.id + '_Measure_Element' });\n        gauge.element.appendChild(element);\n        var templateElement = templateFn({}, null, null, gauge.element.id + 'Template');\n        var templateLength = templateElement.length;\n        while (templateLength > 0) {\n            element.appendChild(templateElement[0]);\n            templateLength--;\n        }\n        parent.appendChild(element);\n        elementSize = new Size(parent.getBoundingClientRect().width, parent.getBoundingClientRect().height);\n        remove(element);\n    }\n    return elementSize;\n}\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge axis-panel Helper methods\n */\n/**\n * Function to calculate the sum of array values.\n *\n * @param {number} from - Specifies the from value.\n * @param {number} to - Specifies the to value.\n * @param {number[]} values - Specifies the number.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function calculateSum(from, to, values) {\n    var sum = 0;\n    var length = values.length;\n    for (; from < length; from++) {\n        sum += values[from];\n    }\n    return sum;\n}\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge axis-render Helper methods\n */\n/**\n * Function to get range color from value for circular gauge.\n *\n * @param {number} value - Specifies the value.\n * @param {Range[]} ranges - Specifies the ranges.\n * @param {string} color - Specifies the color.\n * @returns {string} - Returns the color.\n * @private\n */\nexport function getRangeColor(value, ranges, color) {\n    var min = 0;\n    var max = 0;\n    var currentRange = ranges.filter(function (range) {\n        min = Math.min(range.start, range.end);\n        max = Math.max(range.start, range.end);\n        return (value >= min && max >= value);\n    });\n    return currentRange.length ? currentRange[0].rangeColor : color;\n}\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge pointer-render Helper methods\n */\nimport { getLocationFromAngle, isCompleteAngle, getDegree } from './helper-common';\n/**\n * Function to calculate the value for linear animation effect\n *\n * @param {number} currentTime - Specifies the currentTime.\n * @param {number} startValue - Specifies the startValue.\n * @param {number} endValue - Specifies the endValue.\n * @param {number} duration - Specifies the duration.\n * @returns {number} - Returns the number.\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Function to calculate the complete path arc of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {number} start - Specifies the start value.\n * @param {number} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {boolean} checkMinValue - Specifies the checkMinValue value.\n * @returns {string} - Returns the path value.\n * @private\n */\nexport function getCompleteArc(center, start, end, radius, innerRadius, checkMinValue) {\n    end -= isCompleteAngle(start, end) && !checkMinValue ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    return getCompletePath(center, getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, getLocationFromAngle(start, innerRadius, center), getLocationFromAngle(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the complete path direction of the circular gauge.\n *\n * @param {GaugeLocation} center - Specifies the center value.\n * @param {GaugeLocation} start - Specifies the start value.\n * @param {GaugeLocation} end - Specifies the end value.\n * @param {number} radius - Specifies the radius value.\n * @param {GaugeLocation} innerStart - Specifies the innerStart value.\n * @param {GaugeLocation} innerEnd - Specifies the innerEnd value.\n * @param {number} innerRadius - Specifies the innerRadius value.\n * @param {number} clockWise - Specifies the clockWise.\n * @returns {string} - Returns the path.\n * @private\n */\nexport function getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/**\n * Specifies Circular-Gauge Common Helper methods\n */\nimport { measureText } from '../utils/helper-common';\nimport { createElement } from '@syncfusion/ej2-base';\n/**\n * @param {number} maxWidth - Specifies the maximum width.\n * @param {string} text - Specifies the text.\n * @param {FontModel} font - Specifies the font.\n * @returns {string} - Returns the label.\n * @private */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * @param {string} text - Specifies the text.\n * @param {number} x - Specifies the x value.\n * @param {number} y - Specifies the y value.\n * @param {number} areaWidth - Specifies the area width.\n * @param {string} id - Specifies the id.\n * @param {Element} element - Specifies the element.\n * @returns {void}\n * @private */\nexport function showTooltip(text, x, y, areaWidth, id, element) {\n    //let id1: string = 'EJ2_legend_tooltip';\n    var tooltip = document.getElementById(id);\n    var width = measureText(text, {\n        fontFamily: 'Segoe UI', size: '12px',\n        fontStyle: 'Normal', fontWeight: 'Regular'\n    }).width + 5;\n    x = (x + width > areaWidth) ? x - width : x;\n    if (!tooltip) {\n        tooltip = createElement('div', {\n            innerHTML: text,\n            id: id,\n            styles: 'top:' + (y + 15).toString() + 'px;left:' + (x + 15).toString() +\n                'px;background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n                'position:absolute;border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n                'padding-bottom : 2px; padding-top : 2px; font-size:12px; font-family: \"Segoe UI\"'\n        });\n        element.appendChild(tooltip);\n    }\n    else {\n        tooltip.innerHTML = text;\n        tooltip.style.top = (y + 15).toString() + 'px';\n        tooltip.style.left = (x + 15).toString() + 'px';\n    }\n}\n","/**\n * Specifies gauge Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: null\n    };\n    Theme.legendLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: null\n    };\n})(Theme || (Theme = {}));\n/**\n * @param {string} theme theme\n * @returns {string[]} palette\n * @private */\nexport function getRangePalette(theme) {\n    var palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    switch (theme.toLowerCase()) {\n        case 'tailwind':\n            palette = ['#0369A1', '#14B8A6', '#15803D', '#334155', '#5A61F6',\n                '#65A30D', '#8B5CF6', '#9333EA', '#F59E0B', '#F97316'];\n            break;\n        case 'tailwinddark':\n            palette = ['#10B981', '#22D3EE', '#2DD4BF', '#4ADE80', '#8B5CF6',\n                '#E879F9', '#F472B6', '#F87171', '#F97316', '#FCD34D'];\n            break;\n        case 'bootstrap5':\n            palette = ['#262E0B', '#668E1F', '#AF6E10', '#862C0B', '#1F2D50',\n                '#64680B', '#311508', '#4C4C81', '#0C7DA0', '#862C0B'];\n            break;\n        case 'bootstrap5dark':\n            palette = ['#5ECB9B', '#A860F1', '#EBA844', '#557EF7', '#E9599B',\n                '#BFC529', '#3BC6CF', '#7A68EC', '#74B706', '#EA6266'];\n            break;\n        case 'fluentui':\n            palette = ['#614570', '#4C6FB1', '#CC6952', '#3F579A', '#4EA09B',\n                '#6E7A89', '#D4515C', '#E6AF5D', '#639751', '#9D4D69'];\n            break;\n        case 'fluentuidark':\n            palette = ['#8AB113', '#2A72D5', '#43B786', '#584EC6', '#E85F9C',\n                '#6E7A89', '#EA6266', '#EBA844', '#26BC7A', '#BC4870'];\n            break;\n    }\n    return palette;\n}\n/**\n * Function to get ThemeStyle\n *\n * @param {GaugeTheme} theme theme\n * @returns {IThemeStyle} style\n * @private */\nexport function getThemeStyle(theme) {\n    var style;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n        case 'fabricdark':\n        case 'bootstrapdark':\n            style = {\n                backgroundColor: '#333232',\n                titleFontColor: '#ffffff',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#000000',\n                labelColor: '#DADADA',\n                lineColor: '#C8C8C8',\n                majorTickColor: '#C8C8C8',\n                minorTickColor: '#9A9A9A',\n                pointerColor: '#9A9A9A',\n                capColor: '#9A9A9A',\n                needleColor: '#9A9A9A',\n                needleTailColor: '#9A9A9A',\n                labelFontFamily: 'Segoe UI',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                tooltipFillColor: '#ffffff',\n                tooltipFontColor: '#000000',\n                labelColor: '#FFFFFF',\n                lineColor: '#FFFFFF',\n                majorTickColor: '#FFFFFF',\n                minorTickColor: '#FFFFFF',\n                pointerColor: '#FFFFFF',\n                capColor: '#FFFFFF',\n                needleColor: '#FFFFFF',\n                needleTailColor: '#FFFFFF',\n                labelFontFamily: 'Segoe UI',\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                labelColor: '#212529',\n                lineColor: '#DEE2E6',\n                majorTickColor: '#ADB5BD',\n                minorTickColor: '#CED4DA',\n                pointerColor: '#6C757D',\n                capColor: '#6C757D',\n                needleColor: '#6C757D',\n                needleTailColor: '#6C757D',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                labelFontFamily: 'HelveticaNeue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                titleFontWeight: 'Normal'\n            };\n            break;\n        case 'tailwind':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#374151',\n                tooltipFillColor: '#111827',\n                tooltipFontColor: '#F9FAFB',\n                labelColor: '#6B7280',\n                lineColor: '#E5E7EB',\n                majorTickColor: '#9CA3AF',\n                minorTickColor: '#9CA3AF',\n                pointerColor: '#1F2937',\n                capColor: '#1F2937',\n                needleColor: '#1F2937',\n                needleTailColor: '#1F2937',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                labelFontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                titleFontWeight: '500'\n            };\n            break;\n        case 'tailwinddark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#D1D5DB',\n                tooltipFillColor: '#F9FAFB',\n                tooltipFontColor: '#1F2937',\n                labelColor: '#9CA3AF',\n                lineColor: '#374151',\n                majorTickColor: '#6B7280',\n                minorTickColor: '#6B7280',\n                pointerColor: '#9CA3AF',\n                capColor: '#9CA3AF',\n                needleColor: '#9CA3AF',\n                needleTailColor: '#9CA3AF',\n                fontFamily: 'Inter',\n                fontSize: '14px',\n                labelFontFamily: 'Inter',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9,\n                titleFontWeight: '500'\n            };\n            break;\n        case 'bootstrap5':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#343A40',\n                tooltipFillColor: '#212529',\n                tooltipFontColor: '#F9FAFB',\n                labelColor: '#495057',\n                lineColor: '#E5E7EB',\n                majorTickColor: '#9CA3AF',\n                minorTickColor: '#9CA3AF',\n                pointerColor: '#1F2937',\n                capColor: '#1F2937',\n                needleColor: '#1F2937',\n                needleTailColor: '#1F2937',\n                fontFamily: 'Helvetica Neue',\n                fontSize: '14px',\n                labelFontFamily: 'Helvetica Neue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                titleFontWeight: '500'\n            };\n            break;\n        case 'bootstrap5dark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#E9ECEF',\n                tooltipFillColor: '#E9ECEF',\n                tooltipFontColor: '#212529',\n                labelColor: '#CED4DA',\n                lineColor: '#343A40',\n                majorTickColor: '#6C757D',\n                minorTickColor: '#6C757D',\n                pointerColor: '#ADB5BD',\n                capColor: '#ADB5BD',\n                needleColor: '#ADB5BD',\n                needleTailColor: '#ADB5BD',\n                fontFamily: 'Helvetica Neue',\n                fontSize: '14px',\n                labelFontFamily: 'Helvetica Neue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                titleFontWeight: '500'\n            };\n            break;\n        case 'fluentui':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#201F1E',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#323130',\n                labelColor: '#3B3A39',\n                lineColor: '#EDEBE9',\n                majorTickColor: '#C8C6C4',\n                minorTickColor: '#C8C6C4',\n                pointerColor: '#A19F9D',\n                capColor: '#A19F9D',\n                needleColor: '#A19F9D',\n                needleTailColor: '#A19F9D',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                labelFontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                titleFontWeight: '600'\n            };\n            break;\n        case 'fluentuidark':\n            style = {\n                backgroundColor: 'rgba(255,255,255, 0.0)',\n                titleFontColor: '#F3F2F1',\n                tooltipFillColor: '#252423',\n                tooltipFontColor: '#F3F2F1',\n                labelColor: '#C8C6C4',\n                lineColor: '#292827',\n                majorTickColor: '#484644',\n                minorTickColor: '#484644',\n                pointerColor: '#797775',\n                capColor: '#797775',\n                needleColor: '#797775',\n                needleTailColor: '#797775',\n                fontFamily: 'Segoe UI',\n                fontSize: '14px',\n                labelFontFamily: 'Segoe UI',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 1,\n                titleFontWeight: '600'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                labelColor: '#212121',\n                lineColor: '#E0E0E0',\n                majorTickColor: '#9E9E9E',\n                minorTickColor: '#9E9E9E',\n                pointerColor: '#757575',\n                capColor: '#757575',\n                needleColor: '#757575',\n                needleTailColor: '#757575',\n                labelFontFamily: 'Segoe UI',\n                titleFontWeight: 'Normal'\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Sets and gets the options to customize the color and width of the borders in circular gauge.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Sets and gets the font style for the circular gauge.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Sets and gets the options to customize the tooltip properties for range tooltip.\n */\nvar RangeTooltip = /** @class */ (function (_super) {\n    __extends(RangeTooltip, _super);\n    function RangeTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], RangeTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], RangeTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], RangeTooltip.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], RangeTooltip.prototype, \"showAtMousePosition\", void 0);\n    return RangeTooltip;\n}(ChildProperty));\nexport { RangeTooltip };\n/**\n * Sets and gets the options to customize the tooltip for annotation in circular gauge.\n */\nvar AnnotationTooltip = /** @class */ (function (_super) {\n    __extends(AnnotationTooltip, _super);\n    function AnnotationTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], AnnotationTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], AnnotationTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], AnnotationTooltip.prototype, \"border\", void 0);\n    return AnnotationTooltip;\n}(ChildProperty));\nexport { AnnotationTooltip };\n/**\n * Sets and gets the margin of circular gauge.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Sets and gets the options to customize the tooltip of the circular gauge.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, RangeTooltip)\n    ], TooltipSettings.prototype, \"rangeSettings\", void 0);\n    __decorate([\n        Complex({}, AnnotationTooltip)\n    ], TooltipSettings.prototype, \"annotationSettings\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], TooltipSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"showAtMousePosition\", void 0);\n    __decorate([\n        Property('Pointer')\n    ], TooltipSettings.prototype, \"type\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/member-delimiter-style */\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the axis line in circular gauge component.\n */\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Line.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Line.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], Line.prototype, \"color\", void 0);\n    return Line;\n}(ChildProperty));\nexport { Line };\n/**\n * Sets and gets the axis label in circular gauge component.\n */\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Label.prototype, \"font\", void 0);\n    __decorate([\n        Property('')\n    ], Label.prototype, \"format\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Label.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], Label.prototype, \"hiddenLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Label.prototype, \"offset\", void 0);\n    __decorate([\n        Property(true)\n    ], Label.prototype, \"shouldMaintainPadding\", void 0);\n    return Label;\n}(ChildProperty));\nexport { Label };\n/**\n * Sets and gets the option to customize the ranges of an axis in circular gauge component.\n */\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.isLinearCircularGradient = false;\n        return _this;\n    }\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"start\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radius\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"startWidth\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"endWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], Range.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('')\n    ], Range.prototype, \"legendText\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Range.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radialGradient\", void 0);\n    return Range;\n}(ChildProperty));\nexport { Range };\n/**\n * Sets and gets the major and minor tick lines of an axis in circular gauge component.\n */\nvar Tick = /** @class */ (function (_super) {\n    __extends(Tick, _super);\n    function Tick() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Tick.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"interval\", void 0);\n    __decorate([\n        Property(0)\n    ], Tick.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"color\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Tick.prototype, \"position\", void 0);\n    __decorate([\n        Property(false)\n    ], Tick.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property('0')\n    ], Tick.prototype, \"dashArray\", void 0);\n    return Tick;\n}(ChildProperty));\nexport { Tick };\n/**\n * Sets and gets the needle cap of pointer in circular gauge component.\n */\nvar Cap = /** @class */ (function (_super) {\n    __extends(Cap, _super);\n    function Cap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"radialGradient\", void 0);\n    __decorate([\n        Complex({ color: null, width: 8 }, Border)\n    ], Cap.prototype, \"border\", void 0);\n    __decorate([\n        Property(8)\n    ], Cap.prototype, \"radius\", void 0);\n    return Cap;\n}(ChildProperty));\nexport { Cap };\n/**\n * Sets and gets the pointer needle in the circular gauge component.\n */\nvar NeedleTail = /** @class */ (function (_super) {\n    __extends(NeedleTail, _super);\n    function NeedleTail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0 }, Border)\n    ], NeedleTail.prototype, \"border\", void 0);\n    __decorate([\n        Property('0%')\n    ], NeedleTail.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"radialGradient\", void 0);\n    return NeedleTail;\n}(ChildProperty));\nexport { NeedleTail };\n/**\n * Sets and gets the animation of pointers in circular gauge component.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * Sets and gets the annotation element for an axis in circular gauge component.\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(90)\n    ], Annotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property('50%')\n    ], Annotation.prototype, \"radius\", void 0);\n    __decorate([\n        Property('-1')\n    ], Annotation.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], Annotation.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Complex({ size: '12px', color: '#686868' }, Font)\n    ], Annotation.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"description\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Sets and gets the pointers of an axis in circular gauge component.\n */\nvar Pointer = /** @class */ (function (_super) {\n    __extends(Pointer, _super);\n    function Pointer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"value\", void 0);\n    __decorate([\n        Property('Needle')\n    ], Pointer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Pointer.prototype, \"position\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radius\", void 0);\n    __decorate([\n        Property(20)\n    ], Pointer.prototype, \"pointerWidth\", void 0);\n    __decorate([\n        Complex({}, Cap)\n    ], Pointer.prototype, \"cap\", void 0);\n    __decorate([\n        Complex({}, Font)\n    ], Pointer.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, NeedleTail)\n    ], Pointer.prototype, \"needleTail\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], Pointer.prototype, \"border\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], Pointer.prototype, \"animation\", void 0);\n    __decorate([\n        Property('Circle')\n    ], Pointer.prototype, \"markerShape\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerHeight\", void 0);\n    __decorate([\n        Property('')\n    ], Pointer.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"description\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleStartWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"needleEndWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"linearGradient\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radialGradient\", void 0);\n    return Pointer;\n}(ChildProperty));\nexport { Pointer };\n/**\n * Sets and gets the options to customize the axis for the circular gauge component.\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        /**\n         * Sets and gets the minimum value of an axis in the circular gauge component.\n         *\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleLabels = [];\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"showLastLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"hideIntersectingLabel\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"roundingPlaces\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({}, Line)\n    ], Axis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Collection([{}], Range)\n    ], Axis.prototype, \"ranges\", void 0);\n    __decorate([\n        Collection([{}], Pointer)\n    ], Axis.prototype, \"pointers\", void 0);\n    __decorate([\n        Collection([{}], Annotation)\n    ], Axis.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 10 }, Tick)\n    ], Axis.prototype, \"majorTicks\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 5 }, Tick)\n    ], Axis.prototype, \"minorTicks\", void 0);\n    __decorate([\n        Property(200)\n    ], Axis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(160)\n    ], Axis.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('ClockWise')\n    ], Axis.prototype, \"direction\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"background\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"rangeGap\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"startAndEndRangeGap\", void 0);\n    __decorate([\n        Complex({}, Label)\n    ], Axis.prototype, \"labelStyle\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","/**\n * Specifies the gauge constant value\n */\n/**\n * Sets and gets loaded event name in the circular gauge component.\n *\n * @private\n */\nexport var loaded = 'loaded';\n/**\n * Sets and gets load event name in the circular gauge component.\n *\n * @private\n */\nexport var load = 'load';\n/**\n * Sets and gets animation complete event name in the circular gauge component.\n *\n * @private\n */\nexport var animationComplete = 'animationComplete';\n/**\n * Sets and gets axis label render event name in the circular gauge component.\n *\n * @private\n */\nexport var axisLabelRender = 'axisLabelRender';\n/**\n * Sets and gets radius calculate event name in the circular gauge component.\n *\n * @private\n */\nexport var radiusCalculate = 'radiusCalculate';\n/**\n * Sets and gets tooltip render event name in the circular gauge component.\n *\n * @private\n */\nexport var tooltipRender = 'tooltipRender';\n/**\n * Sets and gets annotation render event name in the circular gauge component.\n *\n * @private\n */\nexport var annotationRender = 'annotationRender';\n/**\n * Sets and gets gauge mouse move event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseMove = 'gaugeMouseMove';\n/**\n * Sets and gets gauge mouse leave event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseLeave = 'gaugeMouseLeave';\n/**\n * Sets and gets gauge mouse down event name in the circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseDown = 'gaugeMouseDown';\n/**\n * Sets and gets gauge mouse up event name in circular gauge component.\n *\n * @private\n */\nexport var gaugeMouseUp = 'gaugeMouseUp';\n/**\n * Sets and gets drag start event name in the circular gauge component.\n *\n * @private\n */\nexport var dragStart = 'dragStart';\n/**\n * Sets and gets drag move event name in the circular gauge component.\n *\n * @private\n */\nexport var dragMove = 'dragMove';\n/**\n * Sets and gets drag end event name in the circular gauge component.\n *\n * @private\n */\nexport var dragEnd = 'dragEnd';\n/**\n * Sets and gets resize event name in the circular gauge component.\n *\n * @private\n */\nexport var resized = 'resized';\n/**\n * Sets and gets before print event name in the circular gauge component.\n *\n * @private\n */\nexport var beforePrint = 'beforePrint';\n/**\n * Sets and gets pointer start event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerStart = 'pointerStart';\n/**\n * Sets and gets pointer move event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerMove = 'pointerMove';\n/**\n * Sets and gets pointer end event name in the circular gauge component.\n *\n * @private\n */\nexport var pointerEnd = 'pointerEnd';\n/**\n * Sets and gets range start event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeStart = 'rangeStart';\n/**\n * Sets and gets range move event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeMove = 'rangeMove';\n/**\n * Sets and gets range end event name in the circular gauge component.\n *\n * @private\n */\nexport var rangeEnd = 'rangeEnd';\n","import { getTemplateFunction, getElement, stringToNumber, getFontStyle, getLocationFromAngle, removeElement } from '../utils/helper-common';\nimport { annotationRender } from '../model/constants';\nimport { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Annotation Module handles the Annotation of the axis.\n */\nvar Annotations = /** @class */ (function () {\n    /**\n     * Constructor for Annotation module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Annotations(gauge) {\n        this.gauge = gauge;\n        this.elementId = gauge.element.id;\n    }\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Method to render the annotation for circular gauge.\n     */\n    Annotations.prototype.renderAnnotation = function (axis, index) {\n        var _this = this;\n        var width = this.gauge.availableSize.width;\n        var element = createElement('div', {\n            id: this.elementId + '_Annotations_' + index\n        });\n        var parentElement = getElement(this.elementId + '_Secondary_Element');\n        if (!isNullOrUndefined(document.getElementById(this.elementId + '_Secondary_Element'))) {\n            document.getElementById(this.elementId + '_Secondary_Element').style.width = width + 'px';\n        }\n        axis.annotations.map(function (annotation, annotationIndex) {\n            if (annotation.content !== null) {\n                _this.createTemplate(element, annotationIndex, index);\n            }\n        });\n        if (parentElement && element.childElementCount) {\n            parentElement.appendChild(element);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.gauge.renderReactTemplates();\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Method to create annotation template for circular gauge.\n     */\n    Annotations.prototype.createTemplate = function (element, annotationIndex, axisIndex) {\n        var _this = this;\n        var axis = this.gauge.axes[axisIndex];\n        var annotation = axis.annotations[annotationIndex];\n        var childElement = createElement('div', {\n            id: this.elementId + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex,\n            styles: 'position: absolute; z-index:' + annotation.zIndex + ';transform:' +\n                (annotation.autoAngle ? 'rotate(' + (annotation.angle - 90) + 'deg)' : 'rotate(0deg)') + ';'\n        });\n        var argsData = {\n            cancel: false, name: annotationRender, content: annotation.content,\n            axis: axis, annotation: annotation, textStyle: annotation.textStyle\n        };\n        this.gauge.trigger('annotationRender', argsData, function (observedArgs) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var templateFn;\n            var templateElement;\n            if (!argsData.cancel) {\n                templateFn = getTemplateFunction(argsData.content, _this.gauge);\n                if (templateFn && templateFn(axis, _this.gauge, argsData.content, _this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex).length) {\n                    templateElement = Array.prototype.slice.call(templateFn(axis, _this.gauge, argsData.content, _this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex));\n                    var length_1 = templateElement.length;\n                    for (var i = 0; i < length_1; i++) {\n                        childElement.appendChild(templateElement[i]);\n                    }\n                }\n                else {\n                    childElement.appendChild(createElement('div', {\n                        innerHTML: argsData.content,\n                        id: 'StringTemplate',\n                        styles: getFontStyle(argsData.textStyle)\n                    }));\n                }\n                _this.updateLocation(childElement, axis, annotation);\n                element.appendChild(childElement);\n                var parentElement = document.getElementById(_this.elementId + '_Secondary_Element');\n            }\n        });\n    };\n    /**\n     * Method to update the annotation location for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Annotation} annotation - Specifies the annotation.\n     * @returns {void}\n     */\n    Annotations.prototype.updateLocation = function (element, axis, annotation) {\n        var location = getLocationFromAngle(annotation.angle - 90, stringToNumber(annotation.radius, axis.currentRadius), this.gauge.midPoint);\n        var elementRect = this.measureElementRect(element);\n        element.style.left = (location.x - (elementRect.width / 2)) + 'px';\n        element.style.top = (location.y - (elementRect.height / 2)) + 'px';\n        element.setAttribute('aria-label', annotation.description || 'Annotation');\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    Annotations.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Annotations';\n    };\n    /**\n     * To destroy the annotation.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    Annotations.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    /**\n    * Function to measure the element rect.\n    *\n    * @param {HTMLElement} element - Specifies the html element.\n    * @returns {ClientRect} - Returns the client rect.\n    * @private\n    */\n    Annotations.prototype.measureElementRect = function (element) {\n        document.body.appendChild(element);\n        var bounds = element.getBoundingClientRect();\n        removeElement(element.id);\n        return bounds;\n    };\n    return Annotations;\n}());\nexport { Annotations };\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { stringToNumber, getAngleFromValue, getLocationFromAngle, getPointer, getLabelFormat, Rect } from '../utils/helper-common';\nimport { getMousePosition, getElementSize } from '../utils/helper-tooltip';\nimport { Browser, createElement, remove } from '@syncfusion/ej2-base';\nimport { tooltipRender } from '../model/constants';\n/**\n * Sets and gets the module that handles the tooltip of the circular gauge\n */\nvar GaugeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for Tooltip module.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function GaugeTooltip(gauge) {\n        this.gauge = gauge;\n        this.tooltipId = this.gauge.element.id + '_CircularGauge_Tooltip';\n        this.tooltip = gauge.tooltip;\n        this.textStyle = {\n            color: this.tooltip.textStyle.color, opacity: this.tooltip.textStyle.opacity,\n            fontFamily: this.tooltip.textStyle.fontFamily, fontStyle: this.tooltip.textStyle.fontStyle,\n            fontWeight: this.tooltip.textStyle.fontWeight, size: this.tooltip.textStyle.size\n        };\n        this.borderStyle = this.tooltip.border;\n        this.addEventListener();\n    }\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Method to render the tooltip for circular gauge.\n     */\n    GaugeTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        this.gaugeId = this.gauge.element.getAttribute('id');\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var location;\n        var samePointerEle = false;\n        var isTooltipRender = false;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            target = touchArg.target;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n        }\n        else {\n            target = e.target;\n            pageX = e.pageX;\n            pageY = e.pageY;\n        }\n        if ((this.tooltip.type.indexOf('Pointer') > -1) && (target.id.indexOf('_Pointer_') >= 0) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            if (this.pointerEle !== null) {\n                samePointerEle = (this.pointerEle === target);\n            }\n            isTooltipRender = true;\n            var svgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var elementRect = this.gauge.element.getBoundingClientRect();\n            var axisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_1 = new Rect(Math.abs(elementRect.left - svgRect_1.left), Math.abs(elementRect.top - svgRect_1.top), svgRect_1.width, svgRect_1.height);\n            var currentPointer = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentPointer.axisIndex];\n            this.currentPointer = (this.currentAxis.pointers)[currentPointer.pointerIndex];\n            var angle_1 = getAngleFromValue(this.currentPointer.currentValue, this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var tooltipFormat = this.gauge.tooltip.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = tooltipFormat && tooltipFormat.match('{value}') !== null;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var format = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(tooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            if (this.tooltipEle.childElementCount !== 0 && !this.gauge.enablePointerDrag && !this.gauge.tooltip.showAtMousePosition) {\n                return null;\n            }\n            var roundValue = this.roundedValue(this.currentPointer.currentValue);\n            var pointerContent_1 = customLabelFormat ?\n                tooltipFormat.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                format(roundValue);\n            location = getLocationFromAngle(angle_1, this.currentAxis.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.template && ((angle_1 >= 150 && angle_1 <= 250) || (angle_1 >= 330 && angle_1 <= 360) ||\n                (angle_1 >= 0 && angle_1 <= 45))) ? (location.x + 10) : location.x;\n            var tooltipArgs = {\n                name: tooltipRender, cancel: false, content: pointerContent_1, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, pointer: this.currentPointer, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Pointer'\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var pointerTooltip = function (tooltipArgs) {\n                var template = tooltipArgs.tooltip.template;\n                if (template !== null && template.length === 1) {\n                    template = template[template[0]];\n                }\n                if (!tooltipArgs.tooltip.showAtMousePosition) {\n                    if (template) {\n                        var elementSize = getElementSize(template, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(axisRect_1.left - svgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_1, angle_1, pointerContent_1, tooltipArgs.location) : rect_1;\n                    }\n                    else {\n                        _this.findPosition(rect_1, angle_1, pointerContent_1, tooltipArgs.location);\n                    }\n                }\n                else {\n                    tooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_1;\n                }\n                if (!tooltipArgs.cancel && !samePointerEle) {\n                    _this.textStyle.color = tooltipArgs.tooltip.textStyle.color || _this.gauge.themeStyle.tooltipFontColor;\n                    _this.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily || tooltipArgs.tooltip.textStyle.fontFamily;\n                    _this.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        tooltipArgs.tooltip.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, tooltipArgs, template, _this.arrowInverted, _this.tooltipRect, _this.gauge, tooltipArgs.tooltip.fill, _this.textStyle, tooltipArgs.tooltip.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (template && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, tooltipArgs, pointerTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Range') > -1) && (target.id.indexOf('_Range_') >= 0) && (!this.gauge.isDrag) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            isTooltipRender = true;\n            var rangeSvgRect_1 = this.gauge.svgObject.getBoundingClientRect();\n            var rangeElementRect = this.gauge.element.getBoundingClientRect();\n            var rangeAxisRect_1 = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_2 = new Rect(Math.abs(rangeElementRect.left - rangeSvgRect_1.left), Math.abs(rangeElementRect.top - rangeSvgRect_1.top), rangeSvgRect_1.width, rangeSvgRect_1.height);\n            var currentRange = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentRange.axisIndex];\n            this.currentRange = (this.currentAxis.ranges)[currentRange.pointerIndex];\n            var rangeAngle_1 = getAngleFromValue((this.currentRange.end - Math.abs((this.currentRange.end - this.currentRange.start) / 2)), this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var rangeTooltipFormat = this.gauge.tooltip.rangeSettings.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = rangeTooltipFormat && (rangeTooltipFormat.match('{end}') !== null ||\n                rangeTooltipFormat.match('{start}') !== null);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeFormat = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(rangeTooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            var roundStartValue = this.roundedValue(this.currentRange.start);\n            var roundEndValue = this.roundedValue(this.currentRange.end);\n            var startData_1 = (this.currentRange.start).toString();\n            var endData_1 = (this.currentRange.end).toString();\n            var rangeContent_1 = customLabelFormat ?\n                rangeTooltipFormat.replace(/{start}/g, startData_1).replace(/{end}/g, endData_1) :\n                'Start : ' + rangeFormat(roundStartValue) + '<br>' + 'End : ' + rangeFormat(roundEndValue);\n            location = getLocationFromAngle(rangeAngle_1, this.currentRange.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.rangeSettings.template && ((rangeAngle_1 >= 150 && rangeAngle_1 <= 250) ||\n                (rangeAngle_1 >= 330 && rangeAngle_1 <= 360) ||\n                (rangeAngle_1 >= 0 && rangeAngle_1 <= 45))) ? (location.x + 10) : location.x;\n            var rangeTooltipArgs = {\n                name: tooltipRender, cancel: false, content: rangeContent_1, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, range: this.currentRange, event: e, gauge: this.gauge, appendInBodyTag: false, type: 'Range'\n            };\n            var rangeTooltipTextStyle_1 = { color: this.gauge.tooltip.rangeSettings.textStyle.color, opacity: this.gauge.tooltip.rangeSettings.textStyle.opacity,\n                fontFamily: this.gauge.tooltip.rangeSettings.textStyle.fontFamily, fontStyle: this.gauge.tooltip.rangeSettings.textStyle.fontStyle,\n                fontWeight: this.gauge.tooltip.rangeSettings.textStyle.fontWeight, size: this.gauge.tooltip.rangeSettings.textStyle.size\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rangeTooltip = function (rangeTooltipArgs) {\n                var rangeTemplate = rangeTooltipArgs.tooltip.rangeSettings.template;\n                if (rangeTemplate !== null && rangeTemplate.length === 1) {\n                    rangeTemplate = rangeTemplate[rangeTemplate[0]];\n                }\n                if (rangeTemplate) {\n                    rangeTemplate = rangeTemplate.replace(/[$]{start}/g, startData_1);\n                    rangeTemplate = rangeTemplate.replace(/[$]{end}/g, endData_1);\n                }\n                if (!_this.tooltip.rangeSettings.showAtMousePosition) {\n                    if (rangeTemplate) {\n                        var elementSize = getElementSize(rangeTemplate, _this.gauge, _this.tooltipEle);\n                        _this.tooltipRect = Math.abs(rangeAxisRect_1.left - rangeSvgRect_1.left) > elementSize.width ?\n                            _this.findPosition(rect_2, rangeAngle_1, rangeContent_1, rangeTooltipArgs.location) : rect_2;\n                    }\n                    else {\n                        _this.findPosition(rect_2, rangeAngle_1, rangeContent_1, rangeTooltipArgs.location);\n                    }\n                }\n                else {\n                    rangeTooltipArgs.location = getMousePosition(pageX, pageY, _this.gauge.svgObject);\n                    _this.tooltipRect = rect_2;\n                }\n                if (!rangeTooltipArgs.cancel) {\n                    rangeTooltipTextStyle_1.color = rangeTooltipArgs.tooltip.rangeSettings.textStyle.color ||\n                        _this.gauge.themeStyle.tooltipFontColor;\n                    rangeTooltipTextStyle_1.fontFamily = _this.gauge.themeStyle.fontFamily ||\n                        rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontFamily;\n                    rangeTooltipTextStyle_1.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        rangeTooltipArgs.tooltip.rangeSettings.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, rangeTooltipArgs, rangeTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, rangeTooltipArgs.tooltip.rangeSettings.fill, rangeTooltipTextStyle_1, rangeTooltipArgs.tooltip.rangeSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (rangeTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, rangeTooltipArgs, rangeTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else if ((this.tooltip.type.indexOf('Annotation') > -1) && this.checkParentAnnotationId(target) && ((!this.gauge.isDrag)) &&\n            (this.annotationTargetElement.id.indexOf(this.gaugeId) >= 0)) {\n            isTooltipRender = true;\n            var annotationSvgRect = this.gauge.svgObject.getBoundingClientRect();\n            var annotationElementRect = this.gauge.element.getBoundingClientRect();\n            var annotationAxisRect = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect_3 = new Rect(Math.abs(annotationElementRect.left - annotationSvgRect.left), Math.abs(annotationElementRect.top - annotationSvgRect.top), annotationSvgRect.width, annotationSvgRect.height);\n            var currentAnnotation = getPointer(this.annotationTargetElement.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentAnnotation.axisIndex];\n            this.currentAnnotation = (this.currentAxis.annotations)[currentAnnotation.pointerIndex];\n            var annotationAngle = (this.currentAnnotation.angle - 90);\n            this.tooltipElement();\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n            var annotationContent = (this.gauge.tooltip.annotationSettings.format !== null) ?\n                this.gauge.tooltip.annotationSettings.format : '';\n            location = getLocationFromAngle(annotationAngle, stringToNumber(this.currentAnnotation.radius, this.currentAxis.currentRadius), this.gauge.midPoint);\n            location.x = (this.tooltip.annotationSettings.template && ((annotationAngle >= 150 && annotationAngle <= 250) ||\n                (annotationAngle >= 330 && annotationAngle <= 360) || (annotationAngle >= 0 && annotationAngle <= 45))) ?\n                (location.x + 10) : location.x;\n            var annotationTooltipArgs = {\n                name: tooltipRender, cancel: false, content: annotationContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, annotation: this.currentAnnotation, event: e, gauge: this.gauge, appendInBodyTag: false,\n                type: 'Annotation'\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var annotationTooltip = function (annotationTooltipArgs) {\n                var annotationTemplate = annotationTooltipArgs.tooltip.annotationSettings.template;\n                if (annotationTemplate !== null && annotationTemplate.length === 1) {\n                    annotationTemplate = annotationTemplate[annotationTemplate[0]];\n                }\n                var elementSizeAn = _this.annotationTargetElement.getBoundingClientRect();\n                _this.tooltipPosition = 'RightTop';\n                _this.arrowInverted = true;\n                annotationTooltipArgs.location.x = annotationTooltipArgs.location.x + (elementSizeAn.width / 2);\n                _this.tooltipRect = new Rect(rect_3.x, rect_3.y, rect_3.width, rect_3.height);\n                if (!annotationTooltipArgs.cancel && (_this.gauge.tooltip.annotationSettings.format !== null ||\n                    _this.gauge.tooltip.annotationSettings.template !== null)) {\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.color = annotationTooltipArgs.tooltip.textStyle.color ||\n                        _this.gauge.themeStyle.tooltipFontColor;\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.fontFamily = _this.gauge.themeStyle.fontFamily ||\n                        annotationTooltipArgs.tooltip.textStyle.fontFamily;\n                    annotationTooltipArgs.tooltip.annotationSettings.textStyle.opacity = _this.gauge.themeStyle.tooltipTextOpacity ||\n                        annotationTooltipArgs.tooltip.textStyle.opacity;\n                    _this.svgTooltip = _this.svgTooltipCreate(_this.svgTooltip, annotationTooltipArgs, annotationTemplate, _this.arrowInverted, _this.tooltipRect, _this.gauge, annotationTooltipArgs.tooltip.annotationSettings.fill, annotationTooltipArgs.tooltip.annotationSettings.textStyle, annotationTooltipArgs.tooltip.annotationSettings.border);\n                    _this.svgTooltip.opacity = _this.gauge.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                    _this.svgTooltip.appendTo(_this.tooltipEle);\n                    if (annotationTemplate && Math.abs(pageY - _this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                        _this.tooltipEle.style.top = (parseFloat(_this.tooltipEle.style.top) + 20) + 'px';\n                    }\n                }\n            };\n            this.gauge.trigger(tooltipRender, annotationTooltipArgs, annotationTooltip);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.renderReactTemplates();\n        }\n        else {\n            this.removeTooltip();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.gauge.clearTemplate();\n        }\n        var gaugeElement = document.getElementById(this.gaugeId);\n        var gaugeRect = gaugeElement.getBoundingClientRect();\n        var tooltipRect = isTooltipRender ? this.tooltipEle.getBoundingClientRect() : null;\n        if (isTooltipRender && this.tooltipEle.offsetLeft < 0 && (tooltipRect.left - gaugeRect.left) < 0) {\n            var tooltipLeft = this.tooltipEle.style.left.split(\"px\")[0];\n            this.tooltipEle.style.left = parseInt(tooltipLeft) + (gaugeRect.left - tooltipRect.left) + 'px';\n        }\n        if (isTooltipRender && tooltipRect.top < 0) {\n            this.tooltipEle.style.top = 0 + 'px';\n        }\n    };\n    /**\n     * Method to create tooltip svg element.\n     *\n     * @param {Tooltip} svgTooltip - Specifies the tooltip element.\n     * @param {ITooltipRenderEventArgs} tooltipArg - Specifies the tooltip arguments.\n     * @param {string} template - Specifies the tooltip template.\n     * @param {boolean} arrowInverted - Specifies the boolean value.\n     * @param {Rect} tooltipRect - Specifies the rect element.\n     * @param {CircularGauge} gauge - Specifies the gauge instance.\n     * @param {string} fill - Spcifies the fill color of the tooltip.\n     * @param {FontModel} textStyle - Spcifies the text style of the tooltip.\n     * @param {BorderModel} border - Specifies the border of the tooltip.\n     * @returns {Tooltip} - Returns the tooltip.\n     */\n    GaugeTooltip.prototype.svgTooltipCreate = function (svgTooltip, tooltipArg, template, arrowInverted, tooltipRect, gauge, fill, textStyle, border) {\n        svgTooltip = new Tooltip({\n            enable: true,\n            data: { value: tooltipArg.content },\n            template: template,\n            enableAnimation: tooltipArg.tooltip.enableAnimation,\n            content: [tooltipArg.content],\n            location: tooltipArg.location,\n            inverted: arrowInverted,\n            areaBounds: tooltipRect,\n            fill: fill || gauge.themeStyle.tooltipFillColor,\n            textStyle: textStyle,\n            availableSize: gauge.availableSize,\n            border: border\n        });\n        return svgTooltip;\n    };\n    /**\n     * Method to create or modify tolltip element.\n     *\n     * @returns {void}\n     */\n    GaugeTooltip.prototype.tooltipElement = function () {\n        if (document.getElementById(this.tooltipId)) {\n            this.tooltipEle = document.getElementById(this.tooltipId);\n        }\n        else {\n            this.tooltipEle = createElement('div', {\n                id: this.tooltipId,\n                className: 'EJ2-CircularGauge-Tooltip',\n                styles: 'position: absolute;pointer-events:none;'\n            });\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n        }\n    };\n    /**\n     * Method to get parent annotation element.\n     *\n     * @param {Element} child - Specifies the annotation element.\n     * @returns {boolean} - Returns the boolean value.\n     */\n    GaugeTooltip.prototype.checkParentAnnotationId = function (child) {\n        this.annotationTargetElement = child.parentElement;\n        while (this.annotationTargetElement != null) {\n            if ((this.annotationTargetElement.id.indexOf('_Annotation_') >= 0)) {\n                child = this.annotationTargetElement;\n                return true;\n            }\n            this.annotationTargetElement = this.annotationTargetElement.parentElement;\n        }\n        return false;\n    };\n    /**\n     * Method to apply label rounding places.\n     *\n     * @param {number} currentValue - Specifies the current value.\n     * @returns {number} - Returns the round number.\n     */\n    GaugeTooltip.prototype.roundedValue = function (currentValue) {\n        var roundNumber = this.currentAxis.roundingPlaces ?\n            parseFloat(currentValue.toFixed(this.currentAxis.roundingPlaces)) :\n            currentValue;\n        return roundNumber;\n    };\n    /**\n     * Method to find the position of the tooltip anchor for circular gauge.\n     *\n     * @param {Rect} rect - Specifies the rect element.\n     * @param {number} angle - Specifies the angle.\n     * @param {string} text - Specifies the text.\n     * @param {GaugeLocation} location - Specifies the location.\n     * @returns {Rect} - Returns the rect element.\n     */\n    GaugeTooltip.prototype.findPosition = function (rect, angle, text, location) {\n        var addLeft;\n        var addTop;\n        var addHeight;\n        var addWidth;\n        switch (true) {\n            case (angle >= 0 && angle < 45):\n                this.arrowInverted = true;\n                addLeft = (angle >= 15 && angle <= 30) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'RightBottom';\n                break;\n            case (angle >= 45 && angle < 90):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomRight';\n                break;\n            case (angle >= 90 && angle < 135):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomLeft';\n                break;\n            case (angle >= 135 && angle < 180):\n                this.arrowInverted = true;\n                addTop = (angle >= 150 && angle <= 160) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'LeftBottom';\n                break;\n            case (angle >= 180 && angle < 225):\n                this.arrowInverted = true;\n                addHeight = (angle >= 200 && angle <= 225) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'LeftTop';\n                break;\n            case (angle >= 225 && angle < 270):\n                this.arrowInverted = false;\n                addWidth = (angle >= 250 && angle <= 290) ? rect.width : Math.abs(rect.x - location.x);\n                this.tooltipRect = new Rect(rect.x, rect.y, addWidth, rect.height);\n                this.tooltipPosition = 'TopLeft';\n                break;\n            case (angle >= 270 && angle < 315):\n                this.arrowInverted = false;\n                addLeft = (angle >= 270 && angle > 290) ? location.x : 0;\n                this.tooltipRect = new Rect(rect.x + addLeft, rect.y, rect.width, rect.height);\n                this.tooltipPosition = 'TopRight';\n                break;\n            case (angle >= 315 && angle <= 360):\n                this.arrowInverted = true;\n                addHeight = (angle >= 315 && angle <= 340) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'RightTop';\n                break;\n        }\n        return this.tooltipRect;\n    };\n    GaugeTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n            var tooltip = document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0];\n            if (tooltip) {\n                remove(tooltip);\n            }\n            this.pointerEle = null;\n        }\n    };\n    GaugeTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To bind events for tooltip module\n     */\n    GaugeTooltip.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.gauge.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n        this.gauge.element.addEventListener('contextmenu', this.removeTooltip);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To unbind events for tooltip module\n     */\n    GaugeTooltip.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.gauge.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name\n     */\n    GaugeTooltip.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Tooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    GaugeTooltip.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n        this.removeEventListener();\n    };\n    return GaugeTooltip;\n}());\nexport { GaugeTooltip };\n","import { stringToNumber, toPixel, textElement, appendPath, getAngleFromValue, getLocationFromAngle, getPathArc, getRoundedPathArc, getDegree, isCompleteAngle, PathOption, TextOption } from '../utils/helper-common';\nimport { getRangeColor } from '../utils/helper-axis-renderer';\nimport { getRangePalette } from '../model/theme';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar AxisRenderer = /** @class */ (function () {\n    /**\n     * Constructor for axis renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function AxisRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis element of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisOuterLine = function (axis, index, element, gauge) {\n        var background = axis.background;\n        this.setRangeColor(axis);\n        if (background !== null) {\n            appendPath(new PathOption(gauge.element.id + '_AxisOuterLine_' + index, background, 0, 'transparent', null, '0', getPathArc(gauge.midPoint, 0, 360, (Math.min(axis.rect.width, axis.rect.height) / 2)), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to check the angles.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.checkAngles = function (axis) {\n        axis.startAngle = axis.startAngle >= 360 ? 360 : axis.startAngle <= -360 ? -360 : axis.startAngle;\n        axis.endAngle = axis.endAngle >= 360 ? 360 : axis.endAngle <= -360 ? -360 : axis.endAngle;\n    };\n    /**\n     * Method to render the axis line of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLine = function (axis, index, element, gauge) {\n        var startAngle = axis.startAngle;\n        var endAngle = axis.endAngle;\n        var color = axis.lineStyle.color || this.gauge.themeStyle.lineColor;\n        if (axis.lineStyle.width > 0 && this.gauge.allowComponentRender) {\n            startAngle = !isCompleteAngle(startAngle, endAngle) ? startAngle : [0, endAngle = 360][0];\n            appendPath(new PathOption(gauge.element.id + '_AxisLine_' + index, 'transparent', axis.lineStyle.width, color, null, axis.lineStyle.dashArray, getPathArc(gauge.midPoint, startAngle - 90, endAngle - 90, axis.currentRadius), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis labels of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLabels = function (axis, index, element, gauge) {\n        var labelElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Labels_' + index\n        });\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var labelCollection = axis.visibleLabels;\n        var location;\n        var textWidth;\n        var textHeight;\n        var labelsVisible = true;\n        var currentTextWidth;\n        var currentTextHeight;\n        var previousLocation;\n        var currentLocation;\n        var lastLabelLocation;\n        var lastLabelAngle;\n        var lastLabelAnchor;\n        var lastTextWidth;\n        var lastTextHeight;\n        var style = axis.labelStyle;\n        var anchor;\n        var angle;\n        var label;\n        var radius = axis.currentRadius;\n        var checkLabelOpposed = 0;\n        checkLabelOpposed = (style.position === 'Inside' && axis.majorTicks.position === 'Outside' &&\n            axis.minorTicks.position === 'Outside') || (style.position === 'Outside' &&\n            axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Inside') ?\n            axis.lineStyle.width + axis.currentRadius / 20 :\n            (style.position === axis.majorTicks.position ? axis.currentRadius / 20 : axis.currentRadius / 40);\n        var labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : checkLabelOpposed;\n        var color = style.font.color || this.gauge.themeStyle.labelColor;\n        if (style.position === 'Outside') {\n            radius += (axis.nearSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2)) + (labelPadding / 2);\n        }\n        else if (style.position === 'Cross') {\n            radius = radius - (axis.maxLabelSize.height / 4) - axis.labelStyle.offset;\n        }\n        else {\n            radius -= (axis.farSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2) + (style.autoAngle ? labelPadding : 0));\n        }\n        //To get and store lastlabelposition\n        if (axis.hideIntersectingLabel) {\n            lastLabelAngle = Math.round(getAngleFromValue(labelCollection[labelCollection.length - 1].value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            lastLabelLocation = getLocationFromAngle(lastLabelAngle, radius, gauge.midPoint);\n            lastLabelAnchor = this.findAnchor(lastLabelLocation, style, lastLabelAngle, labelCollection[labelCollection.length - 1]);\n            lastTextWidth = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                labelCollection[0].size.width : labelCollection[labelCollection.length - 1].size.width;\n            lastTextHeight = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                (!style.autoAngle ? labelCollection[0].size.height : labelCollection[0].size.width) :\n                (!style.autoAngle ? labelCollection[labelCollection.length - 1].size.height :\n                    labelCollection[labelCollection.length - 1].size.width);\n            lastTextHeight = lastTextHeight - this.offsetAxisLabelsize(lastLabelAngle, lastTextHeight);\n            lastLabelLocation = this.getAxisLabelStartPosition(lastLabelLocation, lastTextWidth, style, lastTextHeight, lastLabelAnchor, lastLabelAngle);\n        }\n        for (var i = 0, length_1 = labelCollection.length; i < length_1; i++) {\n            label = labelCollection[i];\n            angle = Math.round(getAngleFromValue(label.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            location = getLocationFromAngle(angle, radius, gauge.midPoint);\n            anchor = this.findAnchor(location, style, angle, label);\n            //To get the current label and previous label position for initial stage\n            if (axis.hideIntersectingLabel) {\n                currentLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                currentTextWidth = label.size.width;\n                currentTextHeight = !style.autoAngle ? label.size.height : currentTextWidth;\n                currentTextHeight = currentTextHeight - this.offsetAxisLabelsize(angle, currentTextHeight);\n                currentLocation = this.getAxisLabelStartPosition(currentLocation, currentTextWidth, style, currentTextHeight, anchor, angle);\n                if (i === 0) {\n                    previousLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation = this.getAxisLabelStartPosition(previousLocation, textWidth, style, textHeight, anchor, angle);\n                }\n            }\n            if ((i === 0 && style.hiddenLabel === 'First') || (i === (length_1 - 1) && style.hiddenLabel === 'Last')) {\n                continue;\n            }\n            style.font.fontFamily = style.font.fontFamily || this.gauge.themeStyle.labelFontFamily;\n            if (axis.hideIntersectingLabel && (i !== 0)) {\n                //To remove the labels which is intersecting with last label.\n                var lastlabel = ((i !== (labelCollection.length - 1)) && ((isCompleteAngle(axis.startAngle, axis.endAngle) ||\n                    axis.showLastLabel))) ? this.FindAxisLabelCollision(lastLabelLocation, lastTextWidth, lastTextHeight, currentLocation, currentTextWidth, currentTextHeight) : true;\n                //Checking wether the axis label is intersecting with previous label or not.\n                labelsVisible = (this.FindAxisLabelCollision(previousLocation, textWidth, textHeight, currentLocation, currentTextWidth, currentTextHeight) && lastlabel);\n            }\n            else {\n                labelsVisible = true;\n            }\n            if (labelsVisible || (i === labelCollection.length - 1)) {\n                //To hide first and last label based on requirement\n                label.text = (!axis.showLastLabel && ((isCompleteAngle(axis.startAngle, axis.endAngle) && style.hiddenLabel !== 'First') ||\n                    !labelsVisible)\n                    && axis.hideIntersectingLabel && (i === (length_1 - 1))) ? '' : label.text;\n                label.text = (axis.showLastLabel && axis.hideIntersectingLabel && isCompleteAngle(axis.startAngle, axis.endAngle)\n                    && (i === 0)) ? '' : label.text;\n                textElement(new TextOption(gauge.element.id + '_Axis_' + index + '_Label_' + i, location.x, location.y, anchor, label.text, style.autoAngle ? 'rotate(' + (angle + 90) + ',' + (location.x) + ',' + location.y + ')' : '', 'auto'), style.font, style.useRangeColor ? getRangeColor(label.value, axis.ranges, color) : color, labelElement, 'pointer-events:none;');\n                if (axis.hideIntersectingLabel) {\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation.x = currentLocation.x;\n                    previousLocation.y = currentLocation.y;\n                }\n            }\n        }\n        element.appendChild(labelElement);\n    };\n    /**\n     * Method to find the anchor of the axis label.\n     *\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {Label} style - Specifies the label style.\n     * @param {number} angle - Specifies the angle.\n     * @param {VisibleLabels} label - Specifies the labels.\n     * @returns {string} - Returns the anchor.\n     * @private\n     */\n    AxisRenderer.prototype.findAnchor = function (location, style, angle, label) {\n        if (style.autoAngle) {\n            return 'middle';\n        }\n        var anchor = style.position === 'Inside' ?\n            ((angle > 120 && angle < 240) ? 'start' : ((300 < angle || angle < 60) ? 'end' : 'middle')) :\n            ((angle > 120 && angle < 240) ? 'end' : ((300 < angle || angle < 60) ? 'start' : 'middle'));\n        location.y += style.position === 'Inside' ?\n            ((angle >= 240 && angle <= 300) ? (label.size.height / 2) :\n                (angle >= 60 && angle <= 120) ? 0 : label.size.height / 4) :\n            ((angle >= 240 && angle <= 300) ? 0 :\n                (angle >= 60 && angle <= 120) ? label.size.height / 2 : label.size.height / 4);\n        return anchor;\n    };\n    /**\n     * Methode to check whether the labels are intersecting or not.\n     *\n     * @param {GaugeLocation} previousLocation - Specifies the previous location.\n     * @param {number} previousWidth - Specifies the previous width.\n     * @param {number} previousHeight - Specifies the previous height.\n     * @param {GaugeLocation} currentLocation - Specifies the current location.\n     * @param {number} currentWidth - Specifies the current width.\n     * @param {number} currentHeight - Specifies the current height.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    AxisRenderer.prototype.FindAxisLabelCollision = function (previousLocation, previousWidth, previousHeight, currentLocation, currentWidth, currentHeight) {\n        var labelVisisble = ((previousLocation.x > (currentLocation.x + (currentWidth))) ||\n            ((previousLocation.x + (previousWidth)) < (currentLocation.x)) ||\n            ((previousLocation.y + (previousHeight)) < (currentLocation.y)) ||\n            ((previousLocation.y) > (currentLocation.y + (currentHeight))));\n        return labelVisisble;\n    };\n    /**\n     * Methode to get anchor position of label as start.\n     *\n     * @param {GaugeLocation} actualLocation - Specifies the actual location.\n     * @param {number} textWidth - Specifies the text width.\n     * @param {Label} style - Specifies the label style.\n     * @param {number} textHeight - Specifies the text height.\n     * @param {string} anchorPosition - Specifies the anchor position.\n     * @param {number} angle - Specifies the angle.\n     * @returns {GaugeLocation} - Returns the gauge location.\n     * @private\n     */\n    AxisRenderer.prototype.getAxisLabelStartPosition = function (actualLocation, textWidth, style, textHeight, anchorPosition, angle) {\n        if (anchorPosition === 'end') {\n            actualLocation.x = actualLocation.x - textWidth;\n        }\n        else if (anchorPosition === 'middle') {\n            actualLocation.x = actualLocation.x - (textWidth / 2);\n        }\n        return actualLocation;\n    };\n    /**\n     * Methode to offset label height and width based on angle.\n     *\n     * @param {number} angle - Specifies the angle.\n     * @param {number} size - Specifies the size.\n     * @returns {number} - Returns the fineal size.\n     * @private\n     */\n    AxisRenderer.prototype.offsetAxisLabelsize = function (angle, size) {\n        var finalSize = ((angle >= 20 && angle <= 60) || (angle >= 120 && angle <= 160) || (angle >= 200 && angle <= 240) ||\n            (angle >= 300 && angle <= 340)) ? size / 5 : 0;\n        return finalSize;\n    };\n    /**\n     * Method to render the axis minor tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMinorTickLines = function (axis, index, element, gauge) {\n        var minorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MinorTickLines_' + index\n        });\n        var minorLineStyle = axis.minorTicks;\n        var minorInterval = minorLineStyle.interval !== null ?\n            minorLineStyle.interval : (axis.visibleRange.interval / 2);\n        var isRangeColor = minorLineStyle.useRangeColor;\n        var color = minorLineStyle.color || this.gauge.themeStyle.minorTickColor;\n        if (minorLineStyle.width && minorLineStyle.height && minorInterval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max; i <= max; i += minorInterval) {\n                if (this.majorValues.indexOf(+i.toFixed(3)) < 0) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_Minor_TickLine_' + index + '_' + i, 'transparent', minorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, minorLineStyle.dashArray, this.calculateTicks(i, minorLineStyle, axis), '', 'pointer-events:none;'), minorTickElements, gauge);\n                }\n            }\n            element.appendChild(minorTickElements);\n        }\n    };\n    /**\n     * Method to render the axis major tick lines of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMajorTickLines = function (axis, index, element, gauge) {\n        var majorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MajorTickLines_' + index\n        });\n        var majorLineStyle = axis.majorTicks;\n        var isRangeColor = majorLineStyle.useRangeColor;\n        this.majorValues = [];\n        var color = majorLineStyle.color || this.gauge.themeStyle.majorTickColor;\n        if (majorLineStyle.width && majorLineStyle.height && axis.visibleRange.interval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max, interval = axis.visibleRange.interval; i <= max; i += interval) {\n                this.majorValues.push(+i.toFixed(3));\n                appendPath(new PathOption(gauge.element.id + '_Axis_Major_TickLine_' + index + '_' + i, 'transparent', majorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, majorLineStyle.dashArray, this.calculateTicks(i, majorLineStyle, axis), '', 'pointer-events:none;'), majorTickElements, gauge);\n            }\n            element.appendChild(majorTickElements);\n        }\n    };\n    /**\n     * Method to calcualte the tick elements for the circular gauge.\n     *\n     * @param {number} value - Specifies the value.\n     * @param {Tick} options - Specifies the options.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    AxisRenderer.prototype.calculateTicks = function (value, options, axis) {\n        var axisLineWidth = (axis.lineStyle.width / 2) + options.offset;\n        var angle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var start = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth), this.gauge.midPoint);\n        var end = getLocationFromAngle(angle, axis.currentRadius +\n            (options.position === 'Outside' ? axisLineWidth : options.position === 'Cross' ?\n                options.height / 2 - options.offset : -axisLineWidth) +\n            (options.position === 'Outside' ? options.height : -options.height), this.gauge.midPoint);\n        return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y + ' ';\n    };\n    /**\n     * Method to render the range path of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Range} range - Specifies the range.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    /* eslint-disable @typescript-eslint/dot-notation */\n    AxisRenderer.prototype.drawRangePath = function (axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, colorIndex) {\n        var startValue;\n        var direction;\n        var endValue;\n        var location = this.gauge.midPoint;\n        var startAngle;\n        var endAngle;\n        var isClockWise = axis.direction === 'ClockWise';\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        var gradientRangeColor;\n        if (range.isLinearCircularGradient) {\n            var rangeSplitValue = ((range.end - range.start) / range.linearGradient.colorStop.length);\n            var rangeStart = range.linearGradient.colorStop.length > 1 ?\n                (range.start + (rangeSplitValue * (colorIndex))) : range.start;\n            var rangeEnd = range.linearGradient.colorStop.length > 1 ? (rangeStart + rangeSplitValue) : range.end;\n            startValue = Math.min(Math.max(rangeStart, min), rangeEnd);\n            endValue = Math.min(Math.max(rangeStart, rangeEnd), max);\n        }\n        else {\n            startValue = Math.min(Math.max(range.start, min), range.end);\n            endValue = Math.min(Math.max(range.start, range.end), max);\n        }\n        startAngle = getAngleFromValue(startValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        endAngle = getAngleFromValue(endValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n        var isAngleCross360 = (startAngle > endAngle);\n        if (axis.rangeGap != null && axis.rangeGap > 0 && range.start !== range.end\n            || (!isNullOrUndefined(range.linearGradient) && !range.isLinearCircularGradient\n                && (colorIndex === range.linearGradient.colorStop.length - 1))) {\n            startAngle = (rangeIndex === 0 && !axis.startAndEndRangeGap) ? startAngle :\n                colorIndex === 0 && range.isLinearCircularGradient ? axis.direction === 'AntiClockWise' ?\n                    startAngle - (axis.rangeGap / Math.PI) :\n                    startAngle + (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient\n                    ? (axis.direction === 'AntiClockWise' ? startAngle - (axis.rangeGap / Math.PI) : startAngle + (axis.rangeGap / Math.PI)) : startAngle;\n            endAngle = (rangeIndex === axis.ranges.length - 1 && !axis.startAndEndRangeGap) ? endAngle :\n                !isNullOrUndefined(range.linearGradient) && colorIndex === range.linearGradient.colorStop.length - 1\n                    && range.isLinearCircularGradient ?\n                    axis.direction === 'AntiClockWise' ? endAngle + (axis.rangeGap / Math.PI) :\n                        endAngle - (axis.rangeGap / Math.PI) : !range.isLinearCircularGradient ?\n                    (axis.direction === 'AntiClockWise' ? endAngle + (axis.rangeGap / Math.PI) : endAngle - (axis.rangeGap / Math.PI)) : endAngle;\n        }\n        if (this.gauge.allowComponentRender) {\n            if ((startValue !== endValue) && (isAngleCross360 ? startAngle < (endAngle + 360) : (startAngle < endAngle)) && ((range.start >= min && range.end <= max) || (range.end >= min && range.start <= max))) {\n                endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n                endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n                var radius = typeof range.roundedCornerRadius === 'string' ? parseFloat(range.roundedCornerRadius) : range.roundedCornerRadius;\n                var process = (radius * 0.25);\n                var degreeValue = getDegree(startAngle, endAngle);\n                oldStart = ((((range.currentRadius - (startWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                    (radius / process)) / (range.currentRadius - (startWidth / 2))) * 180) / Math.PI;\n                oldEnd = ((((range.currentRadius - (endWidth / 2)) * ((endAngle * Math.PI) / 180) +\n                    (radius / process)) / (range.currentRadius - (endWidth / 2))) * 180) / Math.PI;\n                roundedStartAngle = ((((range.currentRadius) * ((startAngle * Math.PI) / 180) +\n                    (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                        ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n                roundedEndAngle = ((((range.currentRadius) * ((endAngle * Math.PI) / 180) -\n                    (degreeValue < (range.roundedCornerRadius / 2) && range.isLinearCircularGradient\n                        ? degreeValue <= 1 ? 0 : (radius / 4) : radius)) / (range.currentRadius)) * 180) / Math.PI;\n                if (roundedStartAngle > roundedEndAngle && (roundedStartAngle - roundedEndAngle) <= radius) {\n                    roundedStartAngle = startAngle;\n                    roundedEndAngle = endAngle;\n                }\n                if (this.gauge.gradientModule && ((!isNullOrUndefined(range.linearGradient)\n                    && !isNullOrUndefined(range.linearGradient.colorStop)) || (!isNullOrUndefined(range.radialGradient)\n                    && !isNullOrUndefined(range.radialGradient.colorStop)))) {\n                    if (range.isLinearCircularGradient) {\n                        endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                        var degree = getDegree(startAngle, endAngle);\n                        var rangeColorLength = range.linearGradient.colorStop.length;\n                        var degreeRange = ((axis.startAngle === axis.endAngle ?\n                            (axis.startAngle === 0 && axis.endAngle === 0 ? 360 : axis.startAngle) :\n                            (axis.endAngle - axis.startAngle)) - degree * (rangeColorLength - 1));\n                        var degreeRangeValue = void 0;\n                        if (degreeRange <= 360 && degreeRange >= 270) {\n                            degreeRangeValue = 270;\n                        }\n                        else if (degreeRange <= 270 && degreeRange >= 180) {\n                            degreeRangeValue = 180;\n                        }\n                        else if (degreeRange <= 180 && degreeRange >= 90) {\n                            degreeRangeValue = 90;\n                        }\n                        else if (degreeRange <= 90 && degreeRange >= 0) {\n                            degreeRangeValue = 0;\n                        }\n                        var gradientDegree = axis.direction === 'AntiClockWise' ?\n                            (axis.startAngle === axis.endAngle ? 0 : axis.startAngle) + degree * ((rangeColorLength - 1) - colorIndex)\n                            : axis.startAngle + degree * (colorIndex);\n                        var gradientAngle = axis.startAngle < axis.endAngle ? axis.direction === 'AntiClockWise'\n                            ? axis.ranges.length > 1 ? rangeIndex === 0 ? (360 - (axis.startAngle\n                                + (degree * (colorIndex)))) : (axis.startAngle + (degree * (colorIndex + 1))) :\n                                axis.startAngle + (degreeRangeValue + degree * ((rangeColorLength - 1) - colorIndex)) : axis.startAngle\n                            + (degree * (colorIndex)) : axis.endAngle === 360 || axis.startAngle === axis.endAngle\n                            ? axis.direction === 'AntiClockWise' ? axis.startAngle === axis.endAngle ?\n                                (axis.startAngle === 0 && axis.endAngle === 0 ? 0 : 360) - axis.startAngle +\n                                    degreeRangeValue + (degree * ((rangeColorLength - 1) - colorIndex))\n                                : degree * ((rangeColorLength - 1) - colorIndex) : degree * (colorIndex) :\n                            gradientDegree < 360 ? gradientDegree : gradientDegree - 360;\n                        range.gradientAngle = rangeIndex === 0 ? axis.rangeGap ? gradientAngle + axis.rangeGap\n                            : gradientAngle : axis.rangeGap > 0 ? axis.ranges[rangeIndex - 1]['gradientAngle'] + axis.rangeGap\n                            : axis.ranges[rangeIndex - 1]['gradientAngle'];\n                        if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                            ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                            range.gradientAntiAngle = gradientAngle;\n                        }\n                        if (rangeIndex !== 0) {\n                            gradientAngle = axis.direction === 'AntiClockWise' ? axis.ranges.length > 1 ?\n                                axis.ranges[rangeIndex - 1]['gradientAntiAngle'] - gradientAngle + axis.startAngle :\n                                axis.ranges[rangeIndex - 1]['gradientAntiAngle'] + gradientAngle :\n                                range.gradientAngle + gradientAngle - axis.startAngle;\n                            range.gradientAngle = axis.rangeGap != null && axis.rangeGap > 0 ? colorIndex === rangeColorLength - 1 ?\n                                gradientAngle + axis.ranges[rangeIndex - 1]['gradientAngle'] : gradientAngle : gradientAngle;\n                            if (axis.direction === 'AntiClockWise' && (axis.ranges.length > 1\n                                ? colorIndex === rangeColorLength - 1 : colorIndex === 0)) {\n                                range.gradientAntiAngle = gradientAngle;\n                            }\n                        }\n                        if (gradientAngle > 45 && gradientAngle <= 115\n                            || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) <= 2)) {\n                            direction = axis.direction === 'AntiClockWise' ? 'bottom' : 'top';\n                        }\n                        else if (gradientAngle > 115 && gradientAngle < 170) {\n                            direction = axis.direction === 'AntiClockWise' ? 'left' : 'right';\n                        }\n                        else if (gradientAngle >= 170 && gradientAngle <= 280) {\n                            direction = axis.direction === 'AntiClockWise' ? 'top' : 'bottom';\n                        }\n                        else if (gradientAngle > 280 && gradientAngle <= 360\n                            || (gradientAngle >= 0 && gradientAngle <= 45 && (rangeColorLength - 1) >= 2)) {\n                            direction = axis.direction === 'AntiClockWise' ? 'right' : 'left';\n                        }\n                    }\n                    gradientRangeColor = this.gauge.gradientModule.getGradientColorString(range, colorIndex, direction, rangeIndex);\n                }\n                range.rangeColor = gradientRangeColor ? gradientRangeColor : range.rangeColor;\n                if (range.roundedCornerRadius) {\n                    if (range.isLinearCircularGradient && range.linearGradient.colorStop.length > 1) {\n                        if (colorIndex === 0 || colorIndex === range.linearGradient.colorStop.length - 1) {\n                            if (axis.direction === 'ClockWise') {\n                                this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === range.linearGradient.colorStop.length - 1\n                                    ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex !== 0 ? Math.ceil(roundedEndAngle) : Math.ceil(endAngle)), ((colorIndex === range.linearGradient.colorStop.length - 1) ? startAngle : oldStart), (colorIndex !== 0 ? oldEnd : endAngle), location, colorIndex);\n                            }\n                            else {\n                                this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, (colorIndex === 0 ? Math.floor(startAngle) : Math.floor(roundedStartAngle)), (colorIndex === range.linearGradient.colorStop.length - 1\n                                    ? Math.ceil(endAngle) : Math.ceil(roundedEndAngle)), ((colorIndex === 0) ? startAngle : oldStart), (colorIndex === range.linearGradient.colorStop.length - 1 ? endAngle : oldEnd), location, colorIndex);\n                            }\n                        }\n                        else {\n                            this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n                        }\n                    }\n                    else {\n                        this.roundedRangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, location, colorIndex);\n                    }\n                }\n                else {\n                    this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n                }\n            }\n            else if ((range.start === range.end) && ((range.start >= min && range.end <= max) || (range.end >= min && range.start <= max))) {\n                this.rangeAppendPathCalculation(range, rangeIndex, index, startWidth, endWidth, rangeElement, Math.floor(startAngle), Math.ceil(endAngle), colorIndex);\n            }\n        }\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} roundedStartAngle - Specifies the rounded path of the start angle.\n     * @param {number} roundedEndAngle - Specifies the rounded path of the end angle.\n     * @param {number} oldStart - Specifies the rounded path of the old start value.\n     * @param {number} oldEnd - Specifies the rounded path of the old end value..\n     * @param {GaugeLocation} location - Specifies the location.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.roundedRangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, roundedStartAngle, roundedEndAngle, oldStart, oldEnd, location, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption((!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex\n            : this.gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex + '_Circular_' + colorIndex), range.rangeColor, 0, range.rangeColor, range.opacity, '0', getRoundedPathArc(location, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the rounded range path of the circular gauge.\n     *\n     * @param {Range} range - Specifies the range.\n     * @param {number} rangeIndex - Specifies the index of the range.\n     * @param {number} index - Specifies the index of the axis.\n     * @param {number} startWidth - Specifies the startwidth for the range.\n     * @param {number} endWidth - Specifies the endwidth for the range.\n     * @param {Element} rangeElement - Specifies the element.\n     * @param {number} startAngle - Specifies the rounded path of the start angle.\n     * @param {number} endAngle - Specifies the rounded path of the end angle.\n     * @param {number} colorIndex - Specifies the index of the lineargradient colorstop.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.rangeAppendPathCalculation = function (range, rangeIndex, index, startWidth, endWidth, rangeElement, startAngle, endAngle, colorIndex) {\n        range.pathElement.push(appendPath(new PathOption(!range.isLinearCircularGradient ? this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex : this.gauge.element.id + '_Axis_' + index + '_Range_' +\n            rangeIndex + '_Circular_' + colorIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getPathArc(this.gauge.midPoint, Math.floor(startAngle), Math.ceil(endAngle), range.currentRadius, startWidth, endWidth, range, this.gauge.axes[index]), '', ''), rangeElement, this.gauge));\n    };\n    /**\n     * Method to render the axis range of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} index - Specifies the index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the gauge instance.\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisRange = function (axis, index, element) {\n        var _this = this;\n        var ele = (document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index));\n        var rangeElement = (ele) ? document.getElementById(this.gauge.element.id + '_Axis_Ranges_ ' + index) :\n            this.gauge.renderer.createGroup({ id: this.gauge.element.id + '_Axis_Ranges_' + index });\n        var startWidth;\n        var startEndDifference;\n        var endWidth;\n        var previousEndWidth;\n        var previousStartWidth;\n        axis.ranges.map(function (range, rangeIndex) {\n            range.isLinearCircularGradient = !isNullOrUndefined(_this.gauge.gradientModule)\n                && !isNullOrUndefined(range.linearGradient) && isNullOrUndefined(range.linearGradient.startValue)\n                && isNullOrUndefined(range.linearGradient.endValue) && !isNullOrUndefined(range.linearGradient.colorStop);\n            range.pathElement = [];\n            if (!isNullOrUndefined(range.offset) && range.offset.length > 0) {\n                range.currentDistanceFromScale = stringToNumber(range.offset, axis.currentRadius);\n            }\n            else {\n                range.currentDistanceFromScale = range.offset;\n            }\n            _this.calculateRangeRadius(axis, range);\n            if (range.startWidth.length > 0) {\n                startWidth = toPixel(range.startWidth, range.currentRadius);\n            }\n            else {\n                startWidth = range.startWidth;\n            }\n            if (range.endWidth.length > 0) {\n                endWidth = toPixel(range.endWidth, range.currentRadius);\n            }\n            else {\n                endWidth = range.endWidth;\n            }\n            range.currentRadius = _this.calculateRangeRadiusWithPosition(axis, range, startWidth);\n            if (range.isLinearCircularGradient) {\n                for (var i = 0; i < range.linearGradient.colorStop.length; i++) {\n                    if (i <= (range.linearGradient.colorStop.length - 1)) {\n                        previousEndWidth = i === 0 ? endWidth : previousEndWidth;\n                        previousStartWidth = i === 0 ? startWidth : previousStartWidth;\n                        startEndDifference = (Math.abs(previousStartWidth - previousEndWidth) / (range.linearGradient.colorStop.length));\n                        if (i > 0) {\n                            startWidth = endWidth;\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                        else {\n                            endWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                                : startWidth + startEndDifference;\n                        }\n                    }\n                    else {\n                        startWidth = previousStartWidth > previousEndWidth ? startWidth - startEndDifference\n                            : startWidth + startEndDifference;\n                        endWidth = (previousEndWidth);\n                    }\n                    _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, i);\n                }\n            }\n            else {\n                if (!(range.start === range.end && axis.direction === 'AntiClockWise' && axis.startAngle === axis.endAngle)) {\n                    _this.drawRangePath(axis, range, startWidth, endWidth, rangeIndex, index, rangeElement, null);\n                }\n            }\n        });\n        element.appendChild(rangeElement);\n    };\n    /**\n     * Method to calculate the radius of the axis range.\n     *\n     * @return {void}\n     */\n    AxisRenderer.prototype.calculateRangeRadius = function (axis, range) {\n        var radius = range.radius !== null ? range.radius : '100%';\n        range.currentRadius = stringToNumber(radius, axis.currentRadius);\n    };\n    AxisRenderer.prototype.calculateRangeRadiusWithPosition = function (axis, range, startWidth) {\n        var actualRadius = !isNullOrUndefined(range.position) && range.position !== 'Auto' && isNullOrUndefined(range.radius) ?\n            (range.position === 'Outside' ? (range.currentRadius + axis.lineStyle.width / 2 + range.currentDistanceFromScale) :\n                range.position === 'Inside' ? (range.currentRadius - axis.lineStyle.width / 2 - range.currentDistanceFromScale) :\n                    (range.currentRadius + startWidth / 2 - range.currentDistanceFromScale)) : range.currentRadius;\n        return actualRadius;\n    };\n    /**\n     * Method to get the range color of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @returns {void}\n     * @private\n     */\n    AxisRenderer.prototype.setRangeColor = function (axis) {\n        var rangeColors = getRangePalette(this.gauge.theme);\n        axis.ranges.map(function (range, index) {\n            range.rangeColor = range.color ? range.color : rangeColors[index % rangeColors.length];\n        });\n    };\n    return AxisRenderer;\n}());\nexport { AxisRenderer };\n","import { stringToNumber, textElement, appendPath, getAngleFromValue, getLocationFromAngle, getRoundedPathArc, calculateShapes, PathOption, Size, TextOption } from '../utils/helper-common';\nimport { linear, getCompleteArc } from '../utils/helper-pointer-renderer';\nimport { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { animationComplete } from '../model/constants';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar PointerRenderer = /** @class */ (function () {\n    /**\n     * Constructor for pointer renderer.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @private.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function PointerRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis pointers of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {Element} element - Specifies the element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {boolean} animate - Specifies the boolean value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.drawPointers = function (axis, axisIndex, element, gauge, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var pointerElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Pointers_' + axisIndex\n        });\n        var childElement;\n        var range;\n        if (this.gauge.allowComponentRender) {\n            axis.pointers.map(function (pointer, pointerIndex) {\n                if (!isNullOrUndefined(pointer.offset) && pointer.offset.length > 0) {\n                    pointer.currentDistanceFromScale = stringToNumber(pointer.offset, axis.currentRadius);\n                }\n                else {\n                    pointer.currentDistanceFromScale = pointer.offset;\n                }\n                range = axis.visibleRange;\n                pointer.pathElement = [];\n                _this.calculatePointerRadius(axis, pointer);\n                childElement = gauge.renderer.createGroup({\n                    id: gauge.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex\n                });\n                _this['draw' + pointer.type + 'Pointer'](axis, axisIndex, pointerIndex, childElement, gauge);\n                _this.setPointerValue(axis, pointer, pointer.currentValue);\n                pointerElement.appendChild(childElement);\n                if (animate || pointer.animation.enable) {\n                    _this.doPointerAnimation(pointer, axis);\n                }\n            });\n            element.appendChild(pointerElement);\n        }\n    };\n    /**\n     * Measure the pointer length of the circular gauge.\n     *\n     * @returns {void}\n     */\n    PointerRenderer.prototype.calculatePointerRadius = function (axis, pointer) {\n        var padding = 5;\n        pointer.currentRadius = !isNullOrUndefined(pointer.radius) ?\n            stringToNumber(pointer.radius, axis.currentRadius) : pointer.position !== 'Auto' ?\n            this.pointerRadiusForPosition(axis, pointer) : (axis.currentRadius - (axis.farSize + padding));\n    };\n    /**\n     * Measure the pointer length of the circular gauge based on pointer position.\n     *\n     * @returns {number}\n     */\n    PointerRenderer.prototype.pointerRadiusForPosition = function (axis, pointer) {\n        if (pointer.markerShape === 'Text') {\n            var pointerRadius = void 0;\n            var pointerSize = parseInt(pointer.textStyle.size, 10);\n            var markerOffset = pointer.position === 'Cross' ? pointerSize / 5 : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - pointerSize / 1.2 - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + axis.lineStyle.width / 2 + pointerSize / 4 + markerOffset +\n                        pointer.currentDistanceFromScale) :\n                    (axis.currentRadius - pointerSize / 6 - markerOffset - pointer.currentDistanceFromScale);\n            return pointerRadius;\n        }\n        else {\n            var pointerRadius = void 0;\n            var rangeBarOffset = pointer.type === 'RangeBar' ? pointer.pointerWidth : 0;\n            var markerOffset = pointer.type === 'Marker' ? ((pointer.markerShape === 'InvertedTriangle' ||\n                pointer.markerShape === 'Triangle') ? (pointer.position === 'Cross' ? pointer.markerWidth / 2 : 0) :\n                pointer.markerWidth / 2) : 0;\n            // eslint-disable-next-line prefer-const\n            pointerRadius = pointer.position === 'Inside' ?\n                (axis.currentRadius - axis.lineStyle.width / 2 - markerOffset - pointer.currentDistanceFromScale) :\n                pointer.position === 'Outside' ?\n                    (axis.currentRadius + rangeBarOffset + axis.lineStyle.width / 2 + markerOffset + pointer.currentDistanceFromScale) :\n                    (axis.currentRadius + rangeBarOffset / 2 - pointer.currentDistanceFromScale -\n                        ((pointer.markerShape === 'InvertedTriangle' || pointer.markerShape === 'Triangle') ? markerOffset : 0));\n            return pointerRadius;\n        }\n    };\n    /**\n     * Method to render the needle pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawNeedlePointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var needle = pointer.needleTail;\n        var cap = pointer.cap;\n        var pointerRadius;\n        var location;\n        var direction;\n        var needleStartWidth = pointer.needleStartWidth;\n        var needleEndWidth = pointer.needleEndWidth;\n        var mid = gauge.midPoint;\n        var width = pointer.pointerWidth / 2;\n        var rectDirection;\n        var gradientColor;\n        var gradientTailColor;\n        var gradientCapColor;\n        // To render the needle\n        location = getLocationFromAngle(0, pointer.currentRadius, mid);\n        if ((needleStartWidth === 0) && (needleEndWidth === 0) && width) {\n            direction = 'M ' + mid.x + ' ' + (mid.y) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + (mid.x) + ' ' + (mid.y) + ' Z';\n        }\n        else {\n            direction = 'M ' + mid.x + ' ' + (mid.y - width - needleEndWidth) + ' L ' + (location.x) + ' ' + mid.y +\n                ' L ' + location.x + ' ' + (mid.y + needleStartWidth) + ' L ' + mid.x + ' ' + (mid.y + width + needleEndWidth) + ' Z';\n        }\n        if (gauge.gradientModule) {\n            gradientColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Needle_' + index, gradientColor ? gradientColor :\n            pointer.color || this.gauge.themeStyle.needleColor, pointer.border.width, pointer.border.color, null, '0', direction), parentElement, gauge));\n        // eslint-disable-next-line prefer-const\n        pointerRadius = stringToNumber(pointer.needleTail.length, pointer.currentRadius);\n        // To render the rect element for touch\n        rectDirection = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + (mid.y - width) +\n            ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + mid.x + ' ' + (mid.y + width);\n        // To render the needle tail\n        if (gauge.gradientModule) {\n            gradientTailColor = gauge.gradientModule.getGradientColorString(needle);\n        }\n        if (pointerRadius) {\n            location = getLocationFromAngle(180, pointerRadius, gauge.midPoint);\n            direction = 'M ' + mid.x + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y + width) +\n                ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n            pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleTail_' + index, gradientTailColor ? gradientTailColor : pointer.needleTail.color || this.gauge.themeStyle.needleTailColor, pointer.needleTail.border.width, pointer.needleTail.border.color, null, '0', direction), parentElement, gauge));\n            rectDirection += ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + location.x + ' ' + (mid.y - width);\n        }\n        // To render the cap\n        if (gauge.gradientModule) {\n            gradientCapColor = gauge.gradientModule.getGradientColorString(cap);\n        }\n        if (pointer.cap.radius) {\n            pointer.pathElement.push(appendPath(calculateShapes(mid, 'Circle', new Size(pointer.cap.radius * 2, pointer.cap.radius * 2), '', new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleCap_' + index, gradientCapColor ? gradientCapColor : pointer.cap.color || this.gauge.themeStyle.capColor, pointer.cap.border.width, pointer.cap.border.color, null, '0', '', '')), parentElement, gauge, 'Ellipse'));\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleRect_' + index, 'transparent', 0, 'transpanret', null, '0', rectDirection + ' Z'), parentElement, gauge));\n    };\n    /**\n     * Method to set the pointer value of the circular gauge.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} value - Specifies the value.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.setPointerValue = function (axis, pointer, value) {\n        var _this = this;\n        var checkMinValue = value === axis.visibleRange.min && pointer.type === 'RangeBar';\n        var location = this.gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            endAngle = startAngle === endAngle && !checkMinValue ? endAngle + 1 : endAngle;\n        }\n        else {\n            endAngle = startAngle === endAngle && !checkMinValue ? [startAngle, startAngle = endAngle - 1][0]\n                : [startAngle, startAngle = endAngle][0];\n        }\n        var radius = pointer.roundedCornerRadius;\n        var minRadius = (radius * 0.25);\n        if (value <= minRadius) {\n            // eslint-disable-next-line no-constant-condition\n            radius = value === 1 || 2 ? 8 : radius;\n            radius /= 2;\n            minRadius = radius * 0.25;\n        }\n        var oldStartValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var oldEndValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((endAngle * Math.PI) / 180) +\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        var roundStartAngle = ((((pointer.currentRadius) * ((startAngle * Math.PI) / 180) +\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        var roundEndAngle = ((((pointer.currentRadius) * ((endAngle * Math.PI) / 180) -\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        if (roundStartAngle > roundEndAngle && (roundStartAngle - roundEndAngle) <= radius && pointer.type === 'RangeBar') {\n            roundStartAngle = startAngle;\n            roundEndAngle = endAngle;\n        }\n        if (isNullOrUndefined(pointer.currentRadius)) {\n            this.calculatePointerRadius(axis, pointer);\n        }\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                if (pointer.roundedCornerRadius && value && !checkMinValue) {\n                    element.setAttribute('d', getRoundedPathArc(location, Math.floor(roundStartAngle), Math.ceil(roundEndAngle), oldStartValue, oldEndValue, pointer.currentRadius, pointer.pointerWidth, pointer.pointerWidth));\n                    radius = 0;\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(location, startAngle, endAngle, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth), checkMinValue));\n                }\n            }\n            else {\n                if (pointer.type === 'Marker' && pointer.markerShape === 'Text') {\n                    var textangle = getAngleFromValue(pointer.value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n                    var textlocation = getLocationFromAngle((pointer.markerShape === 'Text') ? textangle : 0, pointer.currentRadius, _this.gauge.midPoint);\n                    element.setAttribute('transform', 'rotate(' + (textangle + 90) + ',' + textlocation.x + ',' + textlocation.y + ')');\n                    element.setAttribute('x', String(textlocation.x));\n                    element.setAttribute('y', String(textlocation.y));\n                }\n                else {\n                    element.setAttribute('transform', 'rotate(' + getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise) + ',' + location.x + ',' + location.y + ')');\n                }\n            }\n            element.setAttribute('aria-label', pointer.description || 'Pointer:' + value.toString());\n        });\n    };\n    /**\n     * Method to render the marker pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawMarkerPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var gradientMarkerColor;\n        var angle = Math.round(getAngleFromValue(pointer.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n        var shapeBasedOnPosition = pointer.markerShape;\n        if (gauge.gradientModule) {\n            gradientMarkerColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        if (isNullOrUndefined(pointer.radius) && !isNullOrUndefined(pointer.position) && (pointer.markerShape === 'InvertedTriangle' ||\n            pointer.markerShape === 'Triangle')) {\n            shapeBasedOnPosition = ((pointer.position === 'Outside' || pointer.position === 'Cross') && pointer.markerShape === 'Triangle' ?\n                'InvertedTriangle' : (pointer.position === 'Inside' &&\n                pointer.markerShape === 'InvertedTriangle' ? 'Triangle' : pointer.markerShape));\n        }\n        var location = getLocationFromAngle((pointer.markerShape === 'Text') ? angle : 0, pointer.currentRadius, gauge.midPoint);\n        if (pointer.markerShape === 'Text') {\n            var textOption = new TextOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, location.x, location.y, 'middle', pointer.text, 'rotate(' + (angle + 90) + ',' +\n                (location.x) + ',' + location.y + ')', 'auto');\n            textElement(textOption, pointer.textStyle, pointer.textStyle.color, parentElement, 'pointer-events : auto; ');\n        }\n        else {\n            pointer.pathElement.push(appendPath(calculateShapes(location, shapeBasedOnPosition, new Size(pointer.markerWidth, pointer.markerHeight), pointer.imageUrl, new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, gradientMarkerColor ? gradientMarkerColor : pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, null, '0', '', '')), parentElement, gauge, pointer.markerShape === 'Circle' ? 'Ellipse' : (pointer.markerShape === 'Image' ? 'Image' : 'Path')));\n        }\n    };\n    /**\n     * Method to render the range bar pointer of the ciruclar gauge.\n     *\n     * @param {Axis} axis - Specifies the axis\n     * @param {number} axisIndex - Specifies the axis index.\n     * @param {number} index - Specifies the index.\n     * @param {Element} parentElement - Specifies the parent element.\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.drawRangeBarPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var gradientBarColor;\n        if (gauge.gradientModule) {\n            gradientBarColor = gauge.gradientModule.getGradientColorString(pointer);\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_RangeBar_' + index, gradientBarColor ? gradientBarColor :\n            pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, 1, '0', ''), parentElement, gauge));\n    };\n    /**\n     * Method to perform the animation of the pointer in circular gauge.\n     *\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     */\n    PointerRenderer.prototype.doPointerAnimation = function (pointer, axis) {\n        var _this = this;\n        var startValue = !isNullOrUndefined(pointer.previousValue) ? pointer.previousValue : axis.visibleRange.min;\n        var endValue = pointer.currentValue;\n        if (pointer.animation.enable && startValue !== endValue && this.gauge.animatePointer) {\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    _this.performRangeBarAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.performNeedleAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n            });\n        }\n    };\n    /**\n     * Perform the needle and marker pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element\n     * @param {number} start - Specifies the start\n     * @param {number} end - Specifies the end\n     * @param {Axis} axis - Specifies the axis\n     * @param {Pointer} pointer - Specifies the pointer\n     * @param {number} radius - Specifies the radius\n     * @param {number} innerRadius - Specifies the innerRadius\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performNeedleAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        var sweepAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (args) {\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                element.style.animation = 'None';\n                if (start !== end) {\n                    element.setAttribute('transform', 'rotate(' + linear(args.timeStamp, startAngle, sweepAngle, args.duration) + ',' +\n                        _this.gauge.midPoint.x.toString() + ',' + _this.gauge.midPoint.y.toString() + ')');\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                if (pointer.type === 'Marker' || (element.id.indexOf('_Pointer_NeedleCap') >= 0)) {\n                    _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n                }\n            }\n        });\n    };\n    /**\n     * Perform the range bar pointer animation for circular gauge.\n     *\n     * @param {HTMLElement} element - Specifies the element.\n     * @param {number} start - Specifies the start.\n     * @param {number} end - Specifies the end.\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Pointer} pointer - Specifies the pointer.\n     * @param {number} radius - Specifies the radius.\n     * @param {number} innerRadius - Specifies the innerRadius.\n     * @returns {void}\n     * @private\n     */\n    PointerRenderer.prototype.performRangeBarAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var minAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var roundRadius = pointer.roundedCornerRadius;\n        var sweepAngle;\n        var endAngle;\n        var oldStart;\n        var minRadius = (radius * 0.25);\n        if (roundRadius) {\n            minAngle = ((((pointer.currentRadius) * ((minAngle * Math.PI) / 180) +\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            pointAngle = ((((pointer.currentRadius) * ((pointAngle * Math.PI) / 180) -\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            oldStart = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        }\n        // eslint-disable-next-line prefer-const\n        endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (arg) {\n                element.style.animation = 'None';\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                if (isClockWise) {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, minAngle, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration) + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, Math.floor(minAngle), linear(arg.timeStamp, Math.floor(minAngle), sweepAngle, arg.duration) + 0.0001, oldStart, linear(arg.timeStamp, Math.floor(minAngle + (roundRadius / 2)), sweepAngle, arg.duration) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n                else {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration), minAngle + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        sweepAngle += roundRadius;\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, linear(arg.timeStamp, Math.floor(oldStart), sweepAngle, arg.duration), Math.floor(oldStart) + 0.0001, linear(arg.timeStamp, Math.floor(minAngle - roundRadius - (roundRadius / 2)), sweepAngle, arg.duration), Math.floor(oldStart + (roundRadius / 2)) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n            }\n        });\n    };\n    return PointerRenderer;\n}());\nexport { PointerRenderer };\n","import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { stringToNumber, measureText, getLocationFromAngle, getLabelFormat, VisibleLabels, isCompleteAngle, Size, Rect } from '../utils/helper-common';\nimport { calculateSum } from '../utils/helper-axis-panel';\nimport { axisLabelRender, radiusCalculate } from '../model/constants';\nimport { AxisRenderer } from './axis-renderer';\nimport { PointerRenderer } from './pointer-renderer';\n/**\n * Specifies the CircularGauge Axis Layout\n */\nvar AxisLayoutPanel = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function AxisLayoutPanel(gauge) {\n        this.gauge = gauge;\n        this.axisRenderer = new AxisRenderer(gauge);\n        this.pointerRenderer = new PointerRenderer(gauge);\n    }\n    /**\n     * Measure the calculate the axis size and radius.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxis = function (rect) {\n        this.measureAxisSize(this.gauge, rect);\n        this.calculateAxesRadius();\n    };\n    /**\n     * Measure to calculate the axis radius of the circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxesRadius = function () {\n        var _this = this;\n        var totalRadius;\n        var currentRadius;\n        var rangeMaximumRadius = 0;\n        var xMarginDiff = this.gauge.margin.left + this.gauge.margin.right;\n        var yMarginDiff = this.gauge.margin.top + this.gauge.margin.bottom;\n        var _loop_1 = function (axis) {\n            totalRadius = (Math.min(axis.rect.width, axis.rect.height) / 2);\n            currentRadius = axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius;\n            // eslint-disable-next-line prefer-spread\n            rangeMaximumRadius = Math.max.apply(Math, axis.ranges.map(function (value) {\n                return value.radius ?\n                    (value.radius.indexOf('%') < 0 ? 100 : parseInt(value.radius, 10)) : 0;\n            }));\n            currentRadius = (rangeMaximumRadius > 100 && axis.radius == null) ?\n                (currentRadius * 100) / rangeMaximumRadius : currentRadius;\n            axis.currentRadius = currentRadius - axis.nearSize;\n            if (this_1.gauge.moveToCenter && this_1.gauge.axes.length === 1 &&\n                isNullOrUndefined(this_1.gauge.centerXpoint) && isNullOrUndefined(this_1.gauge.centerYpoint)) {\n                var endAngle = void 0;\n                var startAngle = axis.startAngle;\n                var startPoint = getLocationFromAngle(startAngle - 90, currentRadius, this_1.gauge.midPoint);\n                endAngle = axis.endAngle;\n                endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                var endPoint = getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint);\n                var xDiff = void 0;\n                var yDiff = void 0;\n                var startXDiff = void 0;\n                var endXDiff = void 0;\n                var startYDiff = void 0;\n                var endYDiff = void 0;\n                var newPoint = void 0;\n                if (startAngle > endAngle ? Math.abs(startAngle - endAngle) > 90 ? true : false : true) {\n                    if ((startAngle >= 270 && startAngle <= 360) && ((endAngle > 270 && endAngle <= 360) ||\n                        (endAngle >= 0 && endAngle <= 180))) {\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle <= 360 && endAngle >= 270) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle <= 360 && endAngle >= 270) ? endPoint :\n                            getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            this_1.gauge.midPoint : (endAngle >= 90 && endAngle <= 180) ? endPoint :\n                            getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint);\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 0 && startAngle < 90) && (endAngle >= 0 && endAngle <= 270)) {\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        newPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) :\n                            endPoint;\n                        endYDiff = Math.abs(newPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                        startPoint = (endAngle >= 180) ? endPoint : this_1.gauge.midPoint;\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        endPoint = (endAngle >= 90) ? getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endXDiff = Math.abs(endPoint.x - this_1.gauge.gaugeRect.width);\n                    }\n                    else if ((startAngle >= 90 && startAngle < 180) && (endAngle > 90 && endAngle <= 360)) {\n                        newPoint = (endAngle <= 180) ? this_1.gauge.midPoint : (endAngle >= 270) ?\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        startXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.x);\n                        endXDiff = Math.abs(startPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle > 270) ? getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint) :\n                            this_1.gauge.midPoint;\n                        startYDiff = Math.abs(this_1.gauge.gaugeRect.y - startPoint.y);\n                        endPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 180 && startAngle <= 270) && ((endAngle <= 360 && endAngle >= 270) ||\n                        (endAngle <= 180 && endAngle >= 0))) {\n                        newPoint = (endAngle > 180 && endAngle < 270) ? endPoint :\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint);\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(newPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle >= 180 && endAngle <= 360) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(0, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        newPoint = (endAngle > 180 && endAngle < 270) ? this_1.gauge.midPoint : (endAngle >= 270 && endAngle <= 360) ?\n                            endPoint : getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(newPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            startPoint : ((270 - startAngle) < (endAngle - 90)) ? endPoint : startPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    if ((!isNullOrUndefined(startXDiff) && !isNullOrUndefined(endXDiff) && !isNullOrUndefined(startYDiff) &&\n                        !isNullOrUndefined(endYDiff)) && ((startXDiff > 0 || endXDiff > 0) && (startYDiff > 0 || endYDiff > 0))) {\n                        xDiff = Math.abs((startXDiff + endXDiff) - xMarginDiff);\n                        yDiff = Math.abs((startYDiff + endYDiff) - yMarginDiff);\n                        this_1.gauge.midPoint.x = this_1.gauge.midPoint.x - (startXDiff / 2) + (endXDiff / 2);\n                        this_1.gauge.midPoint.y = this_1.gauge.midPoint.y - (startYDiff / 2) + (endYDiff / 2);\n                        totalRadius = (Math.min(this_1.gauge.gaugeRect.width, this_1.gauge.gaugeRect.height) / 2) +\n                            (Math.min(xDiff, yDiff) / 2);\n                        axis.currentRadius = (axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius) - axis.nearSize;\n                    }\n                }\n            }\n            axis.visibleRange.interval = this_1.calculateNumericInterval(axis, axis.rect);\n            var args = {\n                cancel: false, name: radiusCalculate, currentRadius: axis.currentRadius, gauge: this_1.gauge,\n                midPoint: this_1.gauge.midPoint, axis: axis\n            };\n            this_1.gauge.trigger('radiusCalculate', args, function () {\n                axis.currentRadius = args.currentRadius;\n                _this.gauge.midPoint = args.midPoint;\n                _this.calculateVisibleLabels(axis);\n            });\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            _loop_1(axis);\n        }\n    };\n    /**\n     * Measure to calculate the axis size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxisSize = function (gauge, rect) {\n        var _this = this;\n        var sum;\n        this.computeSize(gauge.axes, rect);\n        gauge.axes.map(function (axis, index) {\n            sum = calculateSum(index, _this.farSizes.length - 1, _this.farSizes);\n            axis.rect = new Rect(rect.x + sum, rect.y + sum, rect.width - (sum * 2), rect.height - (sum * 2));\n        });\n    };\n    /**\n     * Calculate the axis values of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxisValues = function (rect) {\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            this.calculateVisibleRange(axis, rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Calculate the visible range of an axis.\n     *\n     * @param {Axis} axis - Specifies the axis.\n     * @param {Rect} rect - Specifies the rect.\n     * @returns {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleRange = function (axis, rect) {\n        var interval = axis.majorTicks.interval;\n        var minimumValue = Math.min(axis.minimum === null ? 0 : axis.minimum, axis.maximum !== null ? axis.maximum : 100);\n        var maximumValue = Math.max(axis.minimum, axis.maximum === null ? 100 : axis.maximum);\n        axis.pointers.map(function (pointer) {\n            pointer.currentValue = pointer.value !== null ?\n                pointer.value < minimumValue ? minimumValue : pointer.value > maximumValue ? maximumValue : pointer.value\n                : minimumValue;\n            minimumValue = axis.minimum === null ? Math.min(pointer.currentValue, minimumValue) : minimumValue;\n            maximumValue = axis.maximum === null ? Math.max(pointer.currentValue, maximumValue) : maximumValue;\n        });\n        minimumValue = (minimumValue === maximumValue) ?\n            (interval !== null ? minimumValue - interval : minimumValue - 1) : minimumValue;\n        axis.visibleRange = { min: minimumValue, max: maximumValue, interval: interval };\n        axis.visibleRange.interval = this.calculateNumericInterval(axis, rect);\n    };\n    /**\n     * Calculate the numeric intervals of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNumericInterval = function (axis, rect) {\n        var allowComponentRender = ((!isNullOrUndefined(axis.minimum) && !isNullOrUndefined(axis.maximum) && axis.minimum !== axis.maximum) || (isNullOrUndefined(axis.minimum) || isNullOrUndefined(axis.maximum)));\n        if (!allowComponentRender) {\n            return 0;\n        }\n        else if (axis.majorTicks.interval !== null) {\n            return axis.majorTicks.interval;\n        }\n        var totalAngle = axis.endAngle - axis.startAngle;\n        totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n        return this.calculateNiceInterval(axis.visibleRange.max, axis.visibleRange.min, axis.currentRadius ? axis.currentRadius : (rect.width / 2), totalAngle);\n    };\n    /**\n     * Calculate the nice interval of an axis range.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNiceInterval = function (maxValue, minValue, radius, degree) {\n        var delta = maxValue - minValue;\n        var circumference = 2 * Math.PI * radius * (degree / 360);\n        var desiredIntervalsCount = Math.max((circumference * ((0.533 * 3) / 100)), 1);\n        var niceInterval = delta / desiredIntervalsCount;\n        var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));\n        for (var _i = 0, _a = [10, 5, 2, 1]; _i < _a.length; _i++) {\n            var interval = _a[_i];\n            var currentInterval = minInterval * interval;\n            if (desiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    };\n    /**\n     * Calculate the visible labels of an axis.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleLabels = function (axis) {\n        var style = axis.labelStyle;\n        var customLabelFormat = style.format && style.format.match('{value}') !== null;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var format = this.gauge.intl.getNumberFormat({\n            format: getLabelFormat(style.format), useGrouping: this.gauge.useGroupingSeparator\n        });\n        var argsData;\n        axis.visibleLabels = [];\n        var roundValue;\n        var interval = axis.visibleRange.interval;\n        var max = axis.visibleRange.max;\n        if ((isNullOrUndefined(axis.minimum) && isNullOrUndefined(axis.maximum)) || axis.minimum !== axis.maximum) {\n            var _loop_2 = function (i) {\n                roundValue = axis.roundingPlaces ? parseFloat(i.toFixed(axis.roundingPlaces)) : i;\n                argsData = {\n                    cancel: false, name: axisLabelRender, axis: axis,\n                    text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                        format(roundValue),\n                    value: roundValue\n                };\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var axisLabelRenderSuccess = function (argsData) {\n                    if (!argsData.cancel) {\n                        axis.visibleLabels.push(new VisibleLabels(argsData.text, i));\n                    }\n                };\n                axisLabelRenderSuccess.bind(this_2);\n                this_2.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n            };\n            var this_2 = this;\n            for (var i = axis.visibleRange.min; (i <= max && interval); i += interval) {\n                _loop_2(i);\n            }\n        }\n        var lastLabel = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value : null;\n        var maxVal = axis.visibleRange.max;\n        if (!isNullOrUndefined(lastLabel) && lastLabel !== maxVal && axis.showLastLabel === true) {\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(maxVal)) :\n                    format(maxVal),\n                value: maxVal\n            };\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var axisLabelRenderSuccess = function (argsData) {\n                if (!argsData.cancel) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, maxVal));\n                }\n            };\n            axisLabelRenderSuccess.bind(this);\n            this.gauge.trigger(axisLabelRender, argsData, axisLabelRenderSuccess);\n        }\n        this.getMaxLabelWidth(this.gauge, axis);\n    };\n    /**\n     * Measure the axes available size.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.computeSize = function (axes, rect) {\n        var lineSize;\n        var outerHeight;\n        var innerHeight;\n        var heightForCross;\n        var axisPadding = 5;\n        var majorTickOffset = 0;\n        var minorTickOffset = 0;\n        var labelOffset = 0;\n        var labelPadding = 10;\n        this.farSizes = [];\n        this.calculateAxisValues(rect);\n        for (var _i = 0, axes_1 = axes; _i < axes_1.length; _i++) {\n            var axis = axes_1[_i];\n            lineSize = (axis.lineStyle.width / 2);\n            outerHeight = 0;\n            innerHeight = 0;\n            heightForCross = axis.majorTicks.position === 'Cross' ? axis.majorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.minorTicks.position === 'Cross' && heightForCross < axis.minorTicks.height / 2) ?\n                axis.minorTicks.height / 2 : heightForCross;\n            heightForCross = (axis.labelStyle.position === 'Cross' && heightForCross < axis.maxLabelSize.height / 2) ?\n                axis.maxLabelSize.height / 2 : heightForCross;\n            lineSize = lineSize < heightForCross ? heightForCross : lineSize;\n            majorTickOffset = axis.majorTicks.offset;\n            minorTickOffset = axis.minorTicks.offset;\n            labelOffset = axis.labelStyle.offset;\n            labelPadding = axis.labelStyle.shouldMaintainPadding ? 10 : 0;\n            // Calculating the outer space of the axis\n            outerHeight += !(axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside' &&\n                axis.labelStyle.position === 'Outside') ? axisPadding : 0;\n            outerHeight += (axis.majorTicks.position === 'Outside' ? (axis.majorTicks.height + lineSize) : 0) +\n                (axis.labelStyle.position === 'Outside' ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Outside' && !(axis.majorTicks.position === 'Outside')) ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            outerHeight += (axis.majorTicks.position === 'Outside' && axis.minorTicks.position === 'Outside') ?\n                Math.max(majorTickOffset, minorTickOffset) : (axis.majorTicks.position === 'Outside' ?\n                majorTickOffset : axis.minorTicks.position === 'Outside' ? minorTickOffset : 0);\n            // Calculating the inner space of the axis\n            innerHeight += ((axis.majorTicks.position === 'Inside') ? (axis.majorTicks.height + lineSize) : 0) +\n                ((axis.labelStyle.position === 'Inside') ? (axis.maxLabelSize.height + labelOffset + labelPadding) : 0) +\n                ((axis.minorTicks.position === 'Inside' && axis.majorTicks.position === 'Outside') ?\n                    (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            innerHeight += ((axis.majorTicks.position === 'Inside') && (axis.minorTicks.position === 'Inside')) ?\n                Math.max(majorTickOffset, minorTickOffset) : ((axis.majorTicks.position === 'Inside') ?\n                majorTickOffset : (axis.minorTicks.position === 'Inside') ? minorTickOffset : 0);\n            if (this.farSizes[this.farSizes.length - 1]) {\n                this.farSizes[this.farSizes.length - 1] += (innerHeight + outerHeight);\n            }\n            axis.nearSize = outerHeight - axisPadding;\n            axis.farSize = innerHeight;\n            outerHeight = (this.gauge.axes.length === (this.farSizes.length + 1)) ? 0 : outerHeight;\n            this.farSizes.push(outerHeight);\n        }\n    };\n    /**\n     * To render the Axis element of the circular gauge.\n     *\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.renderAxes = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var gauge = this.gauge;\n        var renderer = this.axisRenderer;\n        var element;\n        var axesElements = gauge.renderer.createGroup({\n            'id': gauge.element.id + '_AxesCollection',\n            'clip-path': 'url(#' + gauge.element.id + '_GaugeAreaClipRect_' + ')'\n        });\n        // To append the secondary element for annotation and tooltip\n        gauge.element.appendChild(createElement('div', {\n            id: gauge.element.id + '_Secondary_Element',\n            styles: 'position: relative'\n        }));\n        gauge.axes.map(function (axis, index) {\n            element = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_Group_' + index\n            });\n            _this.gauge.allowComponentRender = ((!isNullOrUndefined(axis.minimum) && !isNullOrUndefined(axis.maximum) && axis.minimum !== axis.maximum) || (isNullOrUndefined(axis.minimum) || isNullOrUndefined(axis.maximum)));\n            renderer.checkAngles(axis);\n            renderer.drawAxisOuterLine(axis, index, element, gauge);\n            renderer.drawAxisRange(axis, index, element);\n            renderer.drawAxisLine(axis, index, element, gauge);\n            renderer.drawMajorTickLines(axis, index, element, gauge);\n            renderer.drawMinorTickLines(axis, index, element, gauge);\n            renderer.drawAxisLabels(axis, index, element, gauge);\n            _this.pointerRenderer.drawPointers(axis, index, element, gauge, animate);\n            if (gauge.annotationsModule) {\n                gauge.annotationsModule.renderAnnotation(axis, index);\n            }\n            axesElements.appendChild(element);\n        });\n        // For append clip rect for axes\n        gauge.svgObject.appendChild(gauge.renderer.drawClipPath({\n            'id': gauge.element.id + '_GaugeAreaClipRect_',\n            'x': 0, 'y': 0,\n            'width': gauge.availableSize.width,\n            'height': gauge.availableSize.height,\n            'fill': 'transparent', 'stroke': 'transparent'\n        }));\n        gauge.svgObject.appendChild(axesElements);\n    };\n    /**\n     * Calculate maximum label width for the axis.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @param {Axis} axis - Specifies the axis.\n     * @returns {void}\n     */\n    AxisLayoutPanel.prototype.getMaxLabelWidth = function (gauge, axis) {\n        axis.maxLabelSize = new Size(0, 0);\n        for (var _i = 0, _a = axis.visibleLabels; _i < _a.length; _i++) {\n            var label = _a[_i];\n            label.size = measureText(label.text, axis.labelStyle.font);\n            axis.maxLabelSize.width = label.size.width > axis.maxLabelSize.width ?\n                label.size.width : axis.maxLabelSize.width;\n            axis.maxLabelSize.height = label.size.height > axis.maxLabelSize.height ?\n                label.size.height : axis.maxLabelSize.height;\n        }\n    };\n    return AxisLayoutPanel;\n}());\nexport { AxisLayoutPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { removeElement, getElement, stringToNumber, measureText, textElement, appendPath, calculateShapes, PathOption, RectOption, Size, GaugeLocation, Rect, TextOption } from '../utils/helper-common';\nimport { textTrim, showTooltip } from '../utils/helper-legend';\nimport { Property, Complex, ChildProperty, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Font, Border, Margin } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the location of the legend in circular gauge.\n */\nvar Location = /** @class */ (function (_super) {\n    __extends(Location, _super);\n    function Location() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"y\", void 0);\n    return Location;\n}(ChildProperty));\nexport { Location };\n/**\n * Sets and gets the options to customize the legend for the ranges in the circular gauge.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"toggleVisibility\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Property(8)\n    ], LegendSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Auto')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(5)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Location)\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], LegendSettings.prototype, \"margin\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/*\n * Sets and gets the module to add the legend in the circular gauge.\n */\nvar Legend = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Legend(gauge) {\n        this.legendRegions = [];\n        this.rowCount = 0; // legend row counts per page\n        this.pageButtonSize = 8;\n        this.pageXCollections = []; // pages of x locations\n        this.maxColumns = 0;\n        this.maxWidth = 0;\n        this.currentPage = 1;\n        this.pagingRegions = [];\n        /**\n         * @private\n         */\n        this.position = 'Auto';\n        this.gauge = gauge;\n        this.toggledIndexes = [];\n        this.legend = this.gauge.legendSettings;\n        this.legendID = this.gauge.element.id + '_gauge_legend';\n        this.addEventListener();\n    }\n    /**\n     * Binding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //   this.gauge.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.gauge.on('click', this.click, this);\n        // this.gauge.on(Browser.touchEndEvent, this.mouseEnd, this);\n    };\n    /**\n     * UnBinding events for legend module.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //  this.gauge.off(Browser.touchMoveEvent, this.mouseMove);\n        this.gauge.off('click', this.click);\n        //  this.gauge.off(Browser.touchEndEvent, this.mouseEnd);\n    };\n    /**\n     * Get the legend options.\n     *\n     * @param {Axis[]} axes - Specifies the axes.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendOptions = function (axes) {\n        this.legendCollection = [];\n        var range;\n        var text = '';\n        for (var i = 0; i < axes.length; i++) {\n            for (var j = 0; j < axes[i].ranges.length; j++) {\n                range = axes[i].ranges[j];\n                if (!isNullOrUndefined(range.start) && !isNullOrUndefined(range.end) && (range.start !== range.end)) {\n                    text = range.legendText ? range.legendText : range.start + ' - ' + range.end;\n                    this.legendCollection.push(new LegendOptions(text, text, range.color, this.legend.shape, this.legend.visible, this.legend.border, this.legend.shapeBorder, this.legend.shapeWidth, this.legend.shapeHeight, j, i));\n                }\n            }\n        }\n    };\n    Legend.prototype.calculateLegendBounds = function (rect, availableSize) {\n        var legend = this.legend;\n        this.position = (legend.position !== 'Auto') ? legend.position :\n            (availableSize.width > availableSize.height ? 'Right' : 'Bottom');\n        this.legendBounds = new Rect(rect.x, rect.y, 0, 0);\n        this.isVertical = (this.position === 'Left' || this.position === 'Right');\n        if (this.isVertical) {\n            this.legendBounds.height = stringToNumber(legend.height, availableSize.height - (rect.y - this.gauge.margin.top)) || rect.height;\n            this.legendBounds.width = stringToNumber(legend.width || '20%', availableSize.width);\n        }\n        else {\n            this.legendBounds.width = stringToNumber(legend.width, availableSize.width) || rect.width;\n            this.legendBounds.height = stringToNumber(legend.height || '20%', availableSize.height);\n        }\n        this.getLegendBounds(availableSize, this.legendBounds, legend);\n        this.getLocation(this.position, legend.alignment, this.legendBounds, rect, availableSize);\n    };\n    /**\n     * To find legend alignment for chart and accumulation chart\n     *\n     * @param {number} start - Specifies the start.\n     * @param {number} size - Specifies the size.\n     * @param {number} legendSize - Specifies the  legendSize.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @returns {number} - Returns the start value.\n     */\n    Legend.prototype.alignLegend = function (start, size, legendSize, alignment) {\n        switch (alignment) {\n            case 'Far':\n                start = (size - legendSize) - start;\n                break;\n            case 'Center':\n                start = ((size - legendSize) / 2);\n                break;\n        }\n        return start;\n    };\n    /**\n     * To find legend location based on position, alignment for chart and accumulation chart\n     *\n     * @param {LegendPosition} position - Specifies the position.\n     * @param {Alignment} alignment - Specifies the alignment.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @returns {void}\n     */\n    Legend.prototype.getLocation = function (position, alignment, legendBounds, rect, availableSize) {\n        var padding = this.legend.border.width;\n        var legendHeight = legendBounds.height + padding + this.legend.margin.top + this.legend.margin.bottom;\n        var legendWidth = legendBounds.width + padding + this.legend.margin.left + this.legend.margin.right;\n        var marginBottom = this.gauge.margin.bottom;\n        if (position === 'Bottom') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + (rect.height - legendHeight) + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, 0, legendHeight);\n        }\n        else if (position === 'Top') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, legendHeight, 0);\n        }\n        else if (position === 'Right') {\n            legendBounds.x = rect.x + (rect.width - legendBounds.width) + this.legend.margin.right;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, 0, legendWidth, 0, 0);\n        }\n        else {\n            legendBounds.x = legendBounds.x + this.legend.margin.left;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, legendWidth, 0, 0, 0);\n        }\n    };\n    /**\n     * Renders the legend.\n     *\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {boolean} redraw - Specifies the redraw.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.renderLegend = function (legend, legendBounds, redraw) {\n        var firstLegend = this.findFirstLegendPosition(this.legendCollection);\n        var padding = legend.padding;\n        this.legendRegions = [];\n        this.maxItemHeight = Math.max(this.legendCollection[0].textSize.height, legend.shapeHeight);\n        var legendGroup = this.gauge.renderer.createGroup({ id: this.legendID + '_g' });\n        var legendTranslateGroup = this.createLegendElements(legendBounds, legendGroup, legend, this.legendID, redraw);\n        if (firstLegend !== this.legendCollection.length) {\n            this.totalPages = 0;\n            var legendAxisGroup = void 0; // legendItem group for each series group element\n            // starting shape center x,y position && to resolve lint error used new line for declaration\n            var start = new GaugeLocation(legendBounds.x + padding + (legend.shapeWidth / 2), legendBounds.y + padding + this.maxItemHeight / 2);\n            var textOptions = new TextOption('', start.x, start.y, 'start');\n            var textPadding = (2 * legend.shapePadding) + (2 * padding) + legend.shapeWidth;\n            var count = 0;\n            this.pageXCollections = [];\n            this.legendCollection[firstLegend].location = start;\n            var previousLegend = this.legendCollection[firstLegend];\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legendOption = _a[_i];\n                if (legendOption.render && legendOption.text !== '') {\n                    legendAxisGroup = this.gauge.renderer.createGroup({\n                        id: this.legendID + '_g_' + count\n                    });\n                    this.getRenderPoint(legendOption, start, textPadding, previousLegend, legendBounds, count, firstLegend);\n                    this.renderSymbol(legendOption, legendAxisGroup, legendOption.axisIndex, legendOption.rangeIndex);\n                    this.renderText(legendOption, legendAxisGroup, textOptions, legendOption.axisIndex, legendOption.rangeIndex);\n                    if (legendAxisGroup) {\n                        legendAxisGroup.setAttribute('style', 'cursor: ' + ((!legend.toggleVisibility) ? 'auto' : 'pointer'));\n                    }\n                    if (legendTranslateGroup) {\n                        legendTranslateGroup.appendChild(legendAxisGroup);\n                    }\n                    previousLegend = legendOption;\n                }\n                count++;\n            }\n            if (this.isPaging) {\n                this.renderPagingElements(legendBounds, textOptions, legendGroup);\n            }\n            else {\n                this.totalPages = 1;\n            }\n        }\n        this.appendChildElement(this.gauge.svgObject, legendGroup, redraw);\n        this.setStyles(this.toggledIndexes);\n    };\n    /**\n     * To render legend paging elements for chart and accumulation chart\n     *\n     * @param {Rect} bounds - Specifies the bounds.\n     * @param {TextOption} textOption - Specifies the textOption.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @returns {void}\n     */\n    Legend.prototype.renderPagingElements = function (bounds, textOption, legendGroup) {\n        var paginggroup = this.gauge.renderer.createGroup({ id: this.legendID + '_navigation' });\n        this.pagingRegions = [];\n        legendGroup.appendChild(paginggroup);\n        var grayColor = '#545454';\n        var legend = this.gauge.legendSettings; // to solve parameter lint error, legend declaration is here\n        var padding = 8; // const padding for paging elements\n        if (!this.isVertical) {\n            this.totalPages = Math.ceil(this.totalPages / Math.max(1, this.rowCount - 1));\n        }\n        else {\n            this.totalPages = Math.ceil(this.totalPages / this.maxColumns);\n        }\n        var symbolOption = new PathOption(this.legendID + '_pageup', 'transparent', 5, grayColor, 1, '', '');\n        var iconSize = this.pageButtonSize;\n        if (paginggroup) {\n            paginggroup.setAttribute('style', 'cursor: pointer');\n        }\n        // Page left arrow drawing calculation started here\n        this.clipPathHeight = (this.rowCount - 1) * (this.maxItemHeight + legend.padding);\n        this.clipRect.setAttribute('height', this.clipPathHeight.toString());\n        var x = bounds.x + iconSize / 2;\n        var y = bounds.y + this.clipPathHeight + ((bounds.height - this.clipPathHeight) / 2);\n        var size = measureText(this.totalPages + '/' + this.totalPages, legend.textStyle);\n        appendPath(calculateShapes({ x: x, y: y }, 'LeftArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(x + bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5, y - iconSize * 0.5, iconSize, iconSize));\n        // Page numbering rendering calculation started here\n        textOption.x = x + (iconSize / 2) + padding;\n        textOption.y = y + (size.height / 4);\n        textOption.id = this.legendID + '_pagenumber';\n        textOption.text = '1/' + this.totalPages;\n        var pageTextElement = textElement(textOption, legend.textStyle, legend.textStyle.color || this.gauge.themeStyle.labelColor, paginggroup);\n        x = (textOption.x + padding + (iconSize / 2) + size.width);\n        symbolOption.id = this.legendID + '_pagedown';\n        appendPath(calculateShapes({ x: x, y: y }, 'RightArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(x + (bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5), y - iconSize * 0.5, iconSize, iconSize));\n        //placing the navigation buttons and page numbering in legend right corner\n        paginggroup.setAttribute('transform', 'translate(' + (bounds.width - (2 * (iconSize + padding) +\n            padding + size.width)) + ', ' + 0 + ')');\n        this.translatePage(pageTextElement, this.currentPage - 1, this.currentPage);\n    };\n    /**\n     * To translate legend pages for chart and accumulation chart\n     *\n     * @param {Element} pagingText - Specifies the pagingText.\n     * @param {number} page - Specifies the page.\n     * @param {number} pageNumber - Specifies the pageNumber.\n     * @returns {number} - Returns the size.\n     */\n    Legend.prototype.translatePage = function (pagingText, page, pageNumber) {\n        var size = (this.clipPathHeight) * page;\n        var translate = 'translate(0,-' + size + ')';\n        if (this.isVertical) {\n            var pageLength = page * this.maxColumns;\n            size = this.pageXCollections[page * this.maxColumns] - this.legendBounds.x;\n            size = size < 0 ? 0 : size; // to avoid small pixel variation\n            translate = 'translate(-' + size + ',0)';\n        }\n        this.legendTranslateGroup.setAttribute('transform', translate);\n        pagingText.textContent = (pageNumber) + '/' + this.totalPages;\n        this.currentPage = pageNumber;\n        return size;\n    };\n    /**\n     * To render legend text for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {TextOption} textOptions - Specifies the textOptions.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderText = function (legendOption, group, textOptions, axisIndex, rangeIndex) {\n        var legend = this.gauge.legendSettings;\n        var hiddenColor = '#D3D3D3';\n        textOptions.id = this.legendID + '_Axis_' + axisIndex + '_text_' + rangeIndex;\n        var fontcolor = legendOption.visible ? legend.textStyle.color || this.gauge.themeStyle.labelColor : hiddenColor;\n        legend.textStyle.fontFamily = legend.textStyle.fontFamily || this.gauge.themeStyle.labelFontFamily;\n        textOptions.text = legendOption.text;\n        textOptions.x = legendOption.location.x + (legend.shapeWidth / 2) + legend.shapePadding;\n        textOptions.y = legendOption.location.y + this.maxItemHeight / 4;\n        var element = textElement(textOptions, legend.textStyle, fontcolor, group, '');\n    };\n    /**\n     * To render legend symbols for chart and accumulation chart\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {Element} group - Specifies the group.\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @returns {void}\n     */\n    Legend.prototype.renderSymbol = function (legendOption, group, axisIndex, rangeIndex) {\n        legendOption.fill = legendOption.fill ? legendOption.fill : this.gauge.axes[axisIndex].ranges[rangeIndex].rangeColor;\n        appendPath(calculateShapes(legendOption.location, legendOption.shape, new Size(legendOption.shapeWidth, legendOption.shapeHeight), '', new PathOption(this.legendID + '_Axis_' + axisIndex + '_Shape_' + rangeIndex, legendOption.fill, legendOption.shapeBorder.width, legendOption.shapeBorder.color, null, '0', '', '')), group, this.gauge, legendOption.shape === 'Circle' ? 'Ellipse' : 'Path');\n    };\n    /**\n     * To find legend rendering locations from legend options.\n     *\n     * @param {LegendOptions} legendOption - Specifies the legendOption.\n     * @param {GaugeLocation} start - Specifies the start.\n     * @param {number} textPadding - Specifies the textPadding.\n     * @param {LegendOptions} prevLegend - Specifies the prevLegend.\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} count - Specifies the count.\n     * @param {number} firstLegend - Specifies the firstLegend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n        var padding = this.legend.padding;\n        if (this.isVertical) {\n            if (count === firstLegend || (prevLegend.location.y + (this.maxItemHeight * 1.5) + (padding * 2) > rect.y + rect.height)) {\n                legendOption.location.x = prevLegend.location.x + ((count === firstLegend) ? 0 : this.maxColumnWidth);\n                legendOption.location.y = start.y;\n                this.pageXCollections.push(legendOption.location.x - (this.legend.shapeWidth / 2) - padding);\n                this.totalPages++;\n            }\n            else {\n                legendOption.location.x = prevLegend.location.x;\n                legendOption.location.y = prevLegend.location.y + this.maxItemHeight + padding;\n            }\n        }\n        else {\n            var previousBound = (prevLegend.location.x + textPadding + prevLegend.textSize.width);\n            if ((previousBound + (legendOption.textSize.width + textPadding)) > (rect.x + rect.width + this.legend.shapeWidth / 2)) {\n                legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                    prevLegend.location.y + this.maxItemHeight + padding;\n                legendOption.location.x = start.x;\n            }\n            else {\n                legendOption.location.y = prevLegend.location.y;\n                legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            }\n            this.totalPages = this.totalRowCount;\n        }\n        var availablewidth = this.getAvailWidth(legendOption.location.x, this.legendBounds.width, this.legendBounds.x);\n        legendOption.text = textTrim(+availablewidth.toFixed(4), legendOption.text, this.legend.textStyle);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To show or hide the legend on clicking the legend.\n     *\n     * @returns {void}\n     */\n    Legend.prototype.click = function (event) {\n        var targetId = event.target.id;\n        var legendItemsId = ['_text_', '_Shape_'];\n        var index;\n        var toggledIndex = -1;\n        if (targetId.indexOf(this.legendID) > -1) {\n            for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n                var id = legendItemsId_1[_i];\n                if (targetId.indexOf(id) > -1) {\n                    var axisIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[0], 10);\n                    var rangeIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[1], 10);\n                    if (this.gauge.legendSettings.toggleVisibility && !isNaN(rangeIndex)) {\n                        var legendOption = this.legendByIndex(axisIndex, rangeIndex, this.legendCollection);\n                        index = new Index(axisIndex, rangeIndex, !legendOption.render);\n                        if (this.toggledIndexes.length === 0) {\n                            this.toggledIndexes.push(index);\n                        }\n                        else {\n                            for (var i = 0; i < this.toggledIndexes.length; i++) {\n                                if (this.toggledIndexes[i].axisIndex === index.axisIndex &&\n                                    this.toggledIndexes[i].rangeIndex === index.rangeIndex) {\n                                    toggledIndex = i;\n                                    break;\n                                }\n                                else {\n                                    toggledIndex = -1;\n                                }\n                            }\n                            if (toggledIndex === -1) {\n                                this.toggledIndexes.push(index);\n                            }\n                            else {\n                                this.toggledIndexes[toggledIndex].isToggled = !this.toggledIndexes[toggledIndex].isToggled;\n                            }\n                        }\n                        this.setStyles(this.toggledIndexes);\n                    }\n                }\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, true);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, false);\n        }\n    };\n    /**\n     * Set toggled legend styles.\n     *\n     * @param {Index[]} toggledIndexes - Specifies the toggledIndexes.\n     * @returns {void}\n     */\n    Legend.prototype.setStyles = function (toggledIndexes) {\n        for (var i = 0; i < toggledIndexes.length; i++) {\n            var count = 0;\n            for (var j = 0; j < toggledIndexes[i].rangeIndex; j++) {\n                var rangeStart = this.gauge.axes[toggledIndexes[i].axisIndex].ranges[j].start;\n                var rangeEnd = this.gauge.axes[toggledIndexes[i].axisIndex].ranges[j].end;\n                if (rangeStart == rangeEnd) {\n                    count++;\n                }\n            }\n            var rangeID = this.gauge.element.id + '_Axis_' + toggledIndexes[i].axisIndex + '_Range_' + toggledIndexes[i].rangeIndex;\n            var shapeID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_Shape_' + toggledIndexes[i].rangeIndex;\n            var textID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_text_' + toggledIndexes[i].rangeIndex;\n            var rangeElement = this.gauge.svgObject.querySelector('#' + rangeID);\n            var shapeElement = this.gauge.svgObject.querySelector('#' + shapeID);\n            var textElement_1 = this.gauge.svgObject.querySelector('#' + textID);\n            if (toggledIndexes[i].isToggled) {\n                if (!isNullOrUndefined(rangeElement)) {\n                    rangeElement.style.visibility = 'visible';\n                    shapeElement.setAttribute('fill', this.legendCollection[toggledIndexes[i].rangeIndex - count].fill);\n                    textElement_1.setAttribute('fill', this.legend.textStyle.color || this.gauge.themeStyle.labelColor);\n                }\n            }\n            else {\n                var hiddenColor = '#D3D3D3';\n                if (!isNullOrUndefined(rangeElement)) {\n                    rangeElement.style.visibility = 'hidden';\n                    shapeElement.setAttribute('fill', hiddenColor);\n                    textElement_1.setAttribute('fill', hiddenColor);\n                }\n            }\n        }\n    };\n    /**\n     * To get legend by index\n     *\n     * @param {number} axisIndex - Specifies the axisIndex.\n     * @param {number} rangeIndex - Specifies the rangeIndex.\n     * @param {LegendOptions[]} legendCollections - Specifies the legendCollections.\n     * @returns {LegendOptions} - Specifies the LegendOptions.\n     */\n    Legend.prototype.legendByIndex = function (axisIndex, rangeIndex, legendCollections) {\n        for (var _i = 0, legendCollections_1 = legendCollections; _i < legendCollections_1.length; _i++) {\n            var legend = legendCollections_1[_i];\n            if (legend.axisIndex === axisIndex && legend.rangeIndex === rangeIndex) {\n                return legend;\n            }\n        }\n        return null;\n    };\n    /**\n     * To change legend pages for chart and accumulation chart\n     *\n     * @param {Event} event - Specifies the event.\n     * @param {boolean} pageUp - Specifies the pageUp.\n     * @returns {void}\n     */\n    Legend.prototype.changePage = function (event, pageUp) {\n        var pageText = document.getElementById(this.legendID + '_pagenumber');\n        var page = parseInt(pageText.textContent.split('/')[0], 10);\n        if (pageUp && page > 1) {\n            this.translatePage(pageText, (page - 2), (page - 1));\n        }\n        else if (!pageUp && page < this.totalPages) {\n            this.translatePage(pageText, page, (page + 1));\n        }\n    };\n    /**\n     * To find available width from legend x position.\n     *\n     * @param {number} tx - Specifies the tx value.\n     * @param {number} width - Specifies the width.\n     * @param {number} legendX - Specifies the legendX.\n     * @returns {number} - Returns the number.\n     */\n    Legend.prototype.getAvailWidth = function (tx, width, legendX) {\n        if (this.isVertical) {\n            width = this.maxWidth;\n        }\n        return width - ((this.legend.padding * 2) + this.legend.shapeWidth + this.legend.shapePadding);\n    };\n    /**\n     * To create legend rendering elements for chart and accumulation chart\n     *\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {Element} legendGroup - Specifies the legendGroup.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {string} id - Specifies the id.\n     * @param {boolean} redraw - Specifies the redraw.\n     * @returns {Element} - Returns the element.\n     */\n    Legend.prototype.createLegendElements = function (legendBounds, legendGroup, legend, id, redraw) {\n        var padding = legend.padding;\n        var options = new RectOption(id + '_element', legend.background, legend.border, legend.opacity, legendBounds);\n        options.width = this.isVertical ? this.maxWidth : legendBounds.width;\n        // eslint-disable-next-line max-len\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        legendGroup ? legendGroup.appendChild(this.gauge.renderer.drawRectangle(options)) : this.gauge.renderer.drawRectangle(options);\n        var legendItemsGroup = this.gauge.renderer.createGroup({ id: id + '_collections' });\n        legendGroup.appendChild(legendItemsGroup);\n        this.legendTranslateGroup = this.gauge.renderer.createGroup({ id: id + '_translate_g' });\n        legendItemsGroup.appendChild(this.legendTranslateGroup);\n        var clippath = this.gauge.renderer.createClipPath({ id: id + '_clipPath' });\n        options.id += '_clipPath_rect';\n        options.width = this.isVertical ? options.width - padding : options.width;\n        this.clipRect = this.gauge.renderer.drawRectangle(options);\n        clippath.appendChild(this.clipRect);\n        this.appendChildElement(this.gauge.svgObject, clippath, redraw);\n        legendItemsGroup.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n        return this.legendTranslateGroup;\n    };\n    /**\n     * Method to append child element\n     *\n     * @param {Element} parent - Specifies the element.\n     * @param {Element} childElement - Specifies the child element.\n     * @param {boolean} redraw - Specifies the boolean value.\n     * @param {boolean} isAnimate - Specifies the boolean value.\n     * @param {string} x - Specifies the x value.\n     * @param {string} y - Specifies the y value.\n     * @param {GaugeLocation} start - Specifies the start value.\n     * @param {string} direction - Specifies the direction.\n     * @param {boolean} forceAnimate - Specifies the boolean value.\n     * @param {boolean} isRect - Specifies the rect value.\n     * @param {Rect} previousRect - Specifies the previous rect value.\n     * @param {number} animateDuration - Specifies the animate duration.\n     * @returns {void}\n     */\n    Legend.prototype.appendChildElement = function (parent, childElement, redraw, isAnimate, x, y, start, direction, forceAnimate, isRect, previousRect, animateDuration) {\n        if (isAnimate === void 0) { isAnimate = false; }\n        if (x === void 0) { x = 'x'; }\n        if (y === void 0) { y = 'y'; }\n        if (forceAnimate === void 0) { forceAnimate = false; }\n        if (isRect === void 0) { isRect = false; }\n        if (previousRect === void 0) { previousRect = null; }\n        var existChild = parent.querySelector('#' + childElement.id);\n        var element = (existChild || getElement(childElement.id));\n        var child = childElement;\n        var duration = animateDuration ? animateDuration : 300;\n        if (existChild) {\n            parent.replaceChild(child, element);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    };\n    /**\n     * To find first valid legend text index for chart and accumulation chart\n     *\n     * @param {LegendOptions[]} legendCollection - Specifies the legend collection.\n     * @returns {number} - Returns the count.\n     */\n    Legend.prototype.findFirstLegendPosition = function (legendCollection) {\n        var count = 0;\n        for (var _i = 0, legendCollection_1 = legendCollection; _i < legendCollection_1.length; _i++) {\n            var legend = legendCollection_1[_i];\n            if (legend.render && legend.text !== '') {\n                break;\n            }\n            count++;\n        }\n        return count;\n    };\n    /**\n     * To find legend bounds for accumulation chart.\n     *\n     * @param {Size} availableSize - Specifies the availableSize.\n     * @param {Rect} legendBounds - Specifies the legendBounds.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n        var extraWidth = 0;\n        var extraHeight = 0;\n        var padding = legend.padding;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.width += extraWidth;\n        legendBounds.height += extraHeight;\n        var maximumWidth = 0;\n        var rowWidth = 0;\n        var rowCount = 0;\n        var columnWidth = [];\n        var columnHeight = 0;\n        var legendWidth = 0;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n        var legendEventArgs;\n        var render = false;\n        for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n            var legendOption = _a[_i];\n            legendEventArgs = {\n                fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                name: 'legendRender', cancel: false\n            };\n            this.gauge.trigger('legendRender', legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = legendEventArgs.text;\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n            if (legendOption.render && legendOption.text !== '') {\n                render = true;\n                legendWidth = legend.shapeWidth + (2 * legend.shapePadding) + legendOption.textSize.width + (2 * padding);\n                if (this.isVertical) {\n                    ++rowCount;\n                    columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    if ((rowCount * (this.maxItemHeight + padding)) + padding > legendBounds.height) {\n                        columnHeight = Math.max(columnHeight, (rowCount * (this.maxItemHeight + padding)) + padding);\n                        rowWidth = rowWidth + maximumWidth;\n                        columnWidth.push(maximumWidth);\n                        this.totalPages = Math.max(rowCount, this.totalPages || 1);\n                        maximumWidth = 0;\n                        rowCount = 1;\n                    }\n                    maximumWidth = Math.max(legendWidth, maximumWidth);\n                }\n                else {\n                    rowWidth = rowWidth + legendWidth;\n                    if (legendBounds.width < (padding + rowWidth)) {\n                        maximumWidth = Math.max(maximumWidth, (rowWidth + padding - legendWidth));\n                        if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                            rowCount = 1;\n                        }\n                        rowWidth = legendWidth;\n                        rowCount++;\n                        columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    }\n                }\n            }\n        }\n        if (this.isVertical) {\n            rowWidth = rowWidth + maximumWidth;\n            this.isPaging = legendBounds.width < (rowWidth + padding);\n            columnHeight = Math.max(columnHeight, ((this.totalPages || 1) * (this.maxItemHeight + padding)) + padding);\n            this.isPaging = this.isPaging && (this.totalPages > 1);\n            if (columnWidth[columnWidth.length - 1] !== maximumWidth) {\n                columnWidth.push(maximumWidth);\n            }\n        }\n        else {\n            this.isPaging = legendBounds.height < columnHeight;\n            this.totalPages = this.totalRowCount = rowCount;\n            columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding);\n        }\n        this.maxColumns = 0; // initialization for max columns\n        var width = this.isVertical ? this.getMaxColumn(columnWidth, legendBounds.width, padding, rowWidth + padding) :\n            Math.max(rowWidth + padding, maximumWidth);\n        if (render) { // if any legends not skipped in event check\n            this.setBounds(width, columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    };\n    /**\n     * @param {Rect} rect - Specifies the rect.\n     * @param {number} left - Specifies the left.\n     * @param {number} right - Specifies the right.\n     * @param {number} top - Specifies the top.\n     * @param {number} bottom - Specifies the bottom.\n     * @returns {Rect} - Returns the rect.\n     * @private\n     */\n    Legend.prototype.subtractThickness = function (rect, left, right, top, bottom) {\n        rect.x += left;\n        rect.y += top;\n        rect.width -= left + right;\n        rect.height -= top + bottom;\n        return rect;\n    };\n    /**\n     * To set bounds for chart and accumulation chart\n     *\n     * @param {number} computedWidth - Specifies compute width.\n     * @param {number} computedHeight - Specifies compute height.\n     * @param {LegendSettingsModel} legend - Specifies the legend.\n     * @param {Rect} legendBounds - Specifies the legend bounds.\n     * @returns {void}\n     */\n    Legend.prototype.setBounds = function (computedWidth, computedHeight, legend, legendBounds) {\n        computedWidth = computedWidth < legendBounds.width ? computedWidth : legendBounds.width;\n        computedHeight = computedHeight < legendBounds.height ? computedHeight : legendBounds.height;\n        legendBounds.width = !legend.width ? computedWidth : legendBounds.width;\n        legendBounds.height = !legend.height ? computedHeight : legendBounds.height;\n        this.rowCount = Math.max(1, Math.ceil((legendBounds.height - legend.padding) / (this.maxItemHeight + legend.padding)));\n    };\n    /**\n     * To find maximum column size for legend\n     *\n     * @param {number[]} columns - Specifies the columns\n     * @param {number} width - Specifies the width\n     * @param {number} padding - Specifies the padding\n     * @param {number} rowWidth - Specifies the row width\n     * @returns {number} - Returns the number\n     */\n    Legend.prototype.getMaxColumn = function (columns, width, padding, rowWidth) {\n        var maxPageColumn = padding;\n        this.maxColumnWidth = Math.max.apply(null, columns);\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            maxPageColumn += this.maxColumnWidth;\n            this.maxColumns++;\n            if (maxPageColumn + padding > width) {\n                maxPageColumn -= this.maxColumnWidth;\n                this.maxColumns--;\n                break;\n            }\n        }\n        this.isPaging = (maxPageColumn < rowWidth) && (this.totalPages > 1);\n        if (maxPageColumn === padding) {\n            maxPageColumn = width;\n        }\n        this.maxColumns = Math.max(1, this.maxColumns);\n        this.maxWidth = maxPageColumn;\n        return maxPageColumn;\n    };\n    /**\n     * To show or hide trimmed text tooltip for legend.\n     *\n     * @param {Event} event - Specifies the event.\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.move = function (event) {\n        var x = this.gauge.mouseX;\n        var y = this.gauge.mouseY;\n        var targetId = event.target.id;\n        if (event.target.textContent.indexOf('...') > -1 && targetId.indexOf('_gauge_legend_') > -1) {\n            var axisIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[0], 10);\n            var rangeIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[1], 10);\n            var text = '';\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legends = _a[_i];\n                if (legends.rangeIndex === rangeIndex && legends.axisIndex === axisIndex) {\n                    text = legends.originalText;\n                }\n            }\n            showTooltip(text, x, y, this.gauge.element.offsetWidth, this.gauge.element.id + '_EJ2_Legend_Tooltip', getElement(this.gauge.element.id + '_Secondary_Element'));\n        }\n        else {\n            removeElement(this.gauge.element.id + '_EJ2_Legend_Tooltip');\n        }\n    };\n    /**\n     * Get module name.\n     *\n     * @returns {string} - Returns the module name.\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the legend.\n     *\n     * @param {CircularGauge} circulargauge - Specifies the instance of the gauge\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.destroy = function (circulargauge) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return Legend;\n}());\nexport { Legend };\n/**\n * @private\n */\nvar Index = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Index(axisIndex, rangeIndex, isToggled) {\n        this.axisIndex = axisIndex;\n        this.rangeIndex = rangeIndex;\n        this.isToggled = isToggled;\n    }\n    return Index;\n}());\nexport { Index };\n/**\n * Class for legend options\n *\n * @private\n */\nvar LegendOptions = /** @class */ (function () {\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function LegendOptions(text, originalText, fill, shape, visible, border, shapeBorder, shapeWidth, shapeHeight, rangeIndex, axisIndex) {\n        this.location = { x: 0, y: 0 };\n        this.text = text;\n        this.originalText = originalText;\n        this.fill = fill;\n        this.shape = shape;\n        this.visible = visible;\n        this.border = border;\n        this.shapeBorder = shapeBorder;\n        this.shapeWidth = shapeWidth;\n        this.shapeHeight = shapeHeight;\n        this.rangeIndex = rangeIndex;\n        this.axisIndex = axisIndex;\n    }\n    return LegendOptions;\n}());\nexport { LegendOptions };\n","import { createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\n/**\n * Represent the Pdf export for gauge\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specfies the instance of the gauge.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function PdfExport(control) {\n        this.control = control;\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {ExportType} type - Specifies the type of the document.\n     * @param {string} fileName Specfies the file name of the document.\n     * @param {PdfPageOrientation} orientation - Specfies the orientation of the PDF document to export the component.\n     * @param {boolean} allowDownload - Specfies whether to download the document or not.\n     * @returns {Promise<string>} - Returns the promise string\n     * @private\n     */\n    PdfExport.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var promise = new Promise(function (resolve, reject) {\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': _this.control.availableSize.width.toString(),\n                    'height': _this.control.availableSize.height.toString()\n                }\n            });\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n            var exportElement = _this.control.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            var backgroundColor = backgroundElement.getAttribute('fill');\n            if ((_this.control.theme === 'Tailwind' || _this.control.theme === 'TailwindDark' || _this.control.theme === 'Bootstrap5' || _this.control.theme === 'Bootstrap5Dark')\n                && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                exportElement.childNodes[0].setAttribute('fill', 'rgba(255,255,255, 1)');\n            }\n            var url = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n            var image = new Image();\n            var context = element.getContext('2d');\n            image.onload = (function () {\n                context.drawImage(image, 0, 0);\n                window.URL.revokeObjectURL(url);\n                var document = new PdfDocument();\n                var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n                document.pageSettings.orientation = orientation;\n                imageString = imageString.slice(imageString.indexOf(',') + 1);\n                document.pages.add().graphics.\n                    drawImage(new PdfBitmap(imageString), 0, 0, _this.control.availableSize.width, _this.control.availableSize.height);\n                if (allowDownload) {\n                    document.save(fileName + '.pdf');\n                    document.destroy();\n                }\n                else {\n                    resolve(null);\n                }\n            });\n            image.src = url;\n        });\n        return promise;\n    };\n    PdfExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'PdfExport';\n    };\n    /**\n     * To destroy the PdfExport.\n     *\n     * @param {CircularGauge} gauge - Specfies the instance of the gauge\n     * @returns {void}\n     * @private\n     */\n    PdfExport.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { createElement, Browser } from '@syncfusion/ej2-base';\n/**\n * Represent the Image Export for gauge\n *\n * @hidden\n */\nvar ImageExport = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specfies the instance of the gauge\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function ImageExport(control) {\n        this.control = control;\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param {ExportType} type - Specifies the type of the image file.\n     * @param {string} fileName - Specifies the file name of the image file.\n     * @param {boolean} allowDownload - Specifies whether to download the image file or not.\n     * @returns {Promise<string>} - Returns promise string.\n     * @private\n     */\n    ImageExport.prototype.export = function (type, fileName, allowDownload) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var promise = new Promise(function (resolve, reject) {\n            var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n            var element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': _this.control.availableSize.width.toString(),\n                    'height': _this.control.availableSize.height.toString()\n                }\n            });\n            var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n                _this.control.svgObject.outerHTML +\n                '</svg>';\n            var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n                [(new XMLSerializer()).serializeToString(_this.control.svgObject)], { type: 'image/svg+xml' }));\n            if (type === 'SVG') {\n                if (allowDownload) {\n                    _this.triggerDownload(fileName, type, url, isDownload);\n                }\n                else {\n                    resolve(null);\n                }\n            }\n            else {\n                var image_1 = new Image();\n                var context_1 = element.getContext('2d');\n                image_1.onload = (function () {\n                    context_1.drawImage(image_1, 0, 0);\n                    window.URL.revokeObjectURL(url);\n                    if (allowDownload) {\n                        _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                    }\n                    else {\n                        if (type === 'JPEG') {\n                            resolve(element.toDataURL('image/jpeg'));\n                        }\n                        else if (type === 'PNG') {\n                            resolve(element.toDataURL('image/png'));\n                        }\n                    }\n                });\n                image_1.src = url;\n            }\n        });\n        return promise;\n    };\n    ImageExport.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'ImageExport';\n    };\n    /**\n     * To destroy the ImageExport.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    ImageExport.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    /**\n    * To trigger the download element\n    *\n    * @param {string} fileName - Specifies the file name.\n    * @param {ExportType} type - Specifies the export type.\n    * @param {string} url - Specifies the url.\n    * @param {boolean} isDownload - Specifies the boolean value.\n    * @returns {void}\n    */\n    ImageExport.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    return ImageExport;\n}());\nexport { ImageExport };\n","import { print as printWindow, createElement } from '@syncfusion/ej2-base';\nimport { getElement } from '../utils/helper-common';\nimport { beforePrint } from './constants';\n/**\n * Represent the print for gauge\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} control - Specifies the instance of the gauge.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Print(control) {\n        this.control = control;\n    }\n    /**\n     * To print the gauge\n     *\n     * @param {string[] | string | Element} elements - Specifies the element.\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.print = function (elements) {\n        var _this = this;\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger('beforePrint', argsData, function (beforePrintArgs) {\n            if (!argsData.cancel) {\n                printWindow(argsData.htmlContent, _this.printWindow);\n            }\n        });\n    };\n    /**\n     * To get the html string of the gauge\n     *\n     * @param { string[] | string | Element} elements - Specifies the element.\n     * @returns {Element} - Returns the div element.\n     * @private\n     */\n    Print.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                elements.forEach(function (value) {\n                    div.appendChild(getElement(value).cloneNode(true));\n                });\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    Print.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Print';\n    };\n    /**\n     * To destroy the Print.\n     *\n     * @param {CircularGauge} gauge - Specfies the instance of the gauge\n     * @returns {void}\n     * @private\n     */\n    Print.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * Specifies the color information for the gradient in the circular gauge.\n */\nvar ColorStop = /** @class */ (function (_super) {\n    __extends(ColorStop, _super);\n    function ColorStop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#000000')\n    ], ColorStop.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], ColorStop.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('0%')\n    ], ColorStop.prototype, \"offset\", void 0);\n    __decorate([\n        Property('')\n    ], ColorStop.prototype, \"style\", void 0);\n    return ColorStop;\n}(ChildProperty));\nexport { ColorStop };\n/**\n * Specifies the position in percentage from which the radial gradient must be applied.\n */\nvar GradientPosition = /** @class */ (function (_super) {\n    __extends(GradientPosition, _super);\n    function GradientPosition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"x\", void 0);\n    __decorate([\n        Property('0%')\n    ], GradientPosition.prototype, \"y\", void 0);\n    return GradientPosition;\n}(ChildProperty));\nexport { GradientPosition };\n/**\n * This specifies the properties of the linear gradient colors for the circular gauge.\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"startValue\", void 0);\n    __decorate([\n        Property(null)\n    ], LinearGradient.prototype, \"endValue\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], LinearGradient.prototype, \"colorStop\", void 0);\n    return LinearGradient;\n}(ChildProperty));\nexport { LinearGradient };\n/**\n * This specifies the properties of the radial gradient colors for the circular gauge.\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], RadialGradient.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"outerPosition\", void 0);\n    __decorate([\n        Complex({ x: '0%', y: '0%' }, GradientPosition)\n    ], RadialGradient.prototype, \"innerPosition\", void 0);\n    __decorate([\n        Collection([{ color: '#000000', opacity: 1, offset: '0%', style: '' }], ColorStop)\n    ], RadialGradient.prototype, \"colorStop\", void 0);\n    return RadialGradient;\n}(ChildProperty));\nexport { RadialGradient };\n/**\n * Sets and gets the module that enables the gradient option for pointers and ranges.\n *\n * @hidden\n */\nvar Gradient = /** @class */ (function () {\n    /**\n     * Constructor for gauge\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function Gradient(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {name} name - Specifies the name of the gradient.\n     * @param {name} direction - Specifies the gradient position.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.calculateLinearGradientPosition = function (element, name, direction) {\n        var linearPosition = {\n            id: name,\n            x1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'right' ? '100%' : '0%')\n                : (!isNullOrUndefined(element.linearGradient.startValue) ? ((element.linearGradient.startValue.indexOf('%') === -1 ?\n                    element.linearGradient.startValue :\n                    parseFloat(element.linearGradient.startValue).toString()) + '%') : '0%')),\n            x2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1 ?\n                (direction === 'left' ? '100%' : '0%') :\n                (!isNullOrUndefined(element.linearGradient.endValue) ? ((element.linearGradient.endValue.indexOf('%') === -1 ?\n                    element.linearGradient.endValue : parseFloat(element.linearGradient.endValue).toString()) + '%') : '100%')),\n            y1: (isNullOrUndefined(element.linearGradient.startValue) && name.indexOf('range') !== -1\n                ? (direction === 'bottom' ? '100%' : '0%') : '0%'),\n            y2: (isNullOrUndefined(element.linearGradient.endValue) && name.indexOf('range') !== -1\n                ? (direction === 'top' ? '100%' : '0%') : '0%')\n        };\n        return linearPosition;\n    };\n    /**\n     * To get linear gradient string for pointers and ranges\n     *\n     * @param { PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @param {number} index - Specifies the index of the axis.\n     * @param { string } direction - Specifies the gradient position.\n     * @param { number } rangeIndex - Specifies the index of the range.\n     * @returns {string} - Returns the string value.\n     * @private\n     */\n    Gradient.prototype.getLinearGradientColor = function (element, index, direction, rangeIndex) {\n        var render = new SvgRenderer('');\n        var colors = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            this.getCircularGradientColor(element.linearGradient.colorStop, index) :\n            this.getGradientColor(element.linearGradient.colorStop);\n        var name = (isNullOrUndefined(element.linearGradient.startValue) &&\n            isNullOrUndefined(element.linearGradient.endValue) && !isNullOrUndefined(rangeIndex)) ?\n            '_' + this.gauge.svgObject.id + '_range_' +\n                rangeIndex + '_color_' + index + '_' + 'linearGradient'\n            : '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'linearGradient';\n        var gradientPosition = this.calculateLinearGradientPosition(element, name, direction);\n        gradientPosition = {\n            id: gradientPosition.id,\n            x1: gradientPosition.x1,\n            x2: gradientPosition.x2,\n            y1: gradientPosition.y1,\n            y2: gradientPosition.y2\n        };\n        var def = render.drawGradient('linearGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To get color, opacity, offset and style for circular gradient path.\n     *\n     * @private\n     */\n    Gradient.prototype.getCircularGradientColor = function (colorStop, index) {\n        var colors = [];\n        var colorIndex = index;\n        for (var j = colorIndex; j < (index === (colorStop.length - 1) ? index + 1 : index + 2); j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n            colorIndex++;\n        }\n        return colors;\n    };\n    /**\n     * To get the radial gradient string.\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @returns {string} - Returns the string.\n     * @private\n     */\n    Gradient.prototype.getRadialGradientColor = function (element) {\n        var render = new SvgRenderer('');\n        var colors = this.getGradientColor(element.radialGradient.colorStop);\n        var name = '_' + this.gauge.svgObject.id + '_' + this.gauge.gradientCount + '_' + 'radialGradient';\n        var gradientPosition = {\n            id: name,\n            r: (element.radialGradient.radius.indexOf('%') === -1 ?\n                element.radialGradient.radius :\n                parseFloat(element.radialGradient.radius).toString()) + '%',\n            cx: (element.radialGradient.outerPosition.x.indexOf('%') === -1 ?\n                element.radialGradient.outerPosition.x :\n                parseFloat(element.radialGradient.outerPosition.x).toString()) + '%',\n            cy: (element.radialGradient.outerPosition.y.indexOf('%') === -1 ?\n                element.radialGradient.outerPosition.y :\n                parseFloat(element.radialGradient.outerPosition.y).toString()) + '%',\n            fx: (element.radialGradient.innerPosition.x.indexOf('%') === -1 ?\n                element.radialGradient.innerPosition.x :\n                parseFloat(element.radialGradient.innerPosition.x).toString()) + '%',\n            fy: (element.radialGradient.innerPosition.y.indexOf('%') === -1 ?\n                element.radialGradient.innerPosition.y :\n                parseFloat(element.radialGradient.innerPosition.y).toString()) + '%'\n        };\n        var def = render.drawGradient('radialGradient', gradientPosition, colors);\n        this.gauge.svgObject.appendChild(def);\n        return 'url(#' + name + ')';\n    };\n    /**\n     * To get color, opacity, offset and style.\n     *\n     * @param { ColorStopModel[]} colorStop - Specifies the color stop.\n     * @returns {GradientColor[]} - Returns the gradientColor.\n     * @private\n     */\n    Gradient.prototype.getGradientColor = function (colorStop) {\n        var colors = [];\n        for (var j = 0; j < colorStop.length; j++) {\n            var color = {\n                color: colorStop[j].color,\n                colorStop: colorStop[j].offset,\n                opacity: colorStop[j].opacity ? colorStop[j].opacity.toString() : '1',\n                style: colorStop[j].style\n            };\n            colors.push(color);\n        }\n        return colors;\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * To get a gradient color string\n     *\n     * @param {PointerModel | CapModel | NeedleTailModel | RangeModel} element - Specifies the element.\n     * @returns {string} - Returns the string\n     * @private\n     */\n    Gradient.prototype.getGradientColorString = function (element, index, direction, rangeIndex) {\n        var gradientColor;\n        if ((element.linearGradient && !isNullOrUndefined(element.linearGradient.colorStop)) ||\n            (element.radialGradient && !isNullOrUndefined(element.radialGradient.colorStop))) {\n            if (element.linearGradient) {\n                gradientColor = this.getLinearGradientColor(element, index, direction, rangeIndex);\n            }\n            else {\n                gradientColor = this.getRadialGradientColor(element);\n            }\n            this.gauge.gradientCount = this.gauge.gradientCount + 1;\n        }\n        else {\n            return null;\n        }\n        return gradientColor;\n    };\n    Gradient.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Gradient';\n    };\n    /**\n     * To destroy the Gradient.\n     *\n     * @param {CircularGauge} gauge - Specifies the instance of the gauge.\n     * @returns {void}\n     * @private\n     */\n    Gradient.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Gradient;\n}());\nexport { Gradient };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable max-len */\n/* eslint-disable brace-style */\n/**\n * Circular Gauge\n */\nimport { Property, NotifyPropertyChanges, Component } from '@syncfusion/ej2-base';\nimport { Complex, Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, Collection, Internationalization } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { removeElement, getElement, stringToNumber, measureText, toPixel, textElement, getAngleFromValue, getAngleFromLocation, getPathArc, getPointer, RectOption, Size, GaugeLocation, Rect, TextOption } from './utils/helper-common';\nimport { setStyles, getValueFromAngle, getRange } from './utils/helper-circular-gauge';\nimport { Border, Margin, Font, TooltipSettings } from './model/base';\nimport { Axis } from './axes/axis';\nimport { Annotations } from './annotations/annotations';\nimport { GaugeTooltip } from './user-interaction/tooltip';\nimport { load, loaded, gaugeMouseMove, gaugeMouseLeave, gaugeMouseDown, pointerMove } from './model/constants';\nimport { rangeMove, pointerStart, rangeStart, pointerEnd, rangeEnd } from './model/constants';\nimport { gaugeMouseUp, dragEnd, dragMove, dragStart, resized } from './model/constants';\nimport { AxisLayoutPanel } from './axes/axis-panel';\nimport { getThemeStyle } from './model/theme';\nimport { LegendSettings, Legend } from './legend/legend';\nimport { PdfExport } from './model/pdf-export';\nimport { ImageExport } from './model/image-export';\nimport { Print } from './model/print';\nimport { Gradient } from './axes/gradient';\n/**\n * Represents the circular gauge control.\n * ```html\n * <div id=\"gauge\"/>\n * <script>\n *   var gaugeObj = new CircularGauge();\n *   gaugeObj.appendTo(\"#gauge\");\n * </script>\n * ```\n */\nvar CircularGauge = /** @class */ (function (_super) {\n    __extends(CircularGauge, _super);\n    /**\n     * Constructor for creating the widget\n     *\n     * @param {CircularGaugeModel} options - Specifies the options\n     * @param {string} element - Specifies the element\n     * @hidden\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    function CircularGauge(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.isRangeUpdate = false;\n        /** @private */\n        _this.isDrag = false;\n        /**\n         * @private\n         */\n        _this.gradientCount = 0;\n        return _this;\n    }\n    /**\n     * To create svg object, renderer and binding events for the container.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.preRender = function () {\n        this.unWireEvents();\n        this.trigger(load, { gauge: this });\n        this.initPrivateVariable();\n        this.setCulture();\n        this.createSvg();\n        this.wireEvents();\n    };\n    /**\n     * To render the circular gauge elements\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.render = function () {\n        this.setTheme();\n        this.calculateBounds();\n        this.renderElements();\n        this.renderComplete();\n    };\n    CircularGauge.prototype.setTheme = function () {\n        this.themeStyle = getThemeStyle(this.theme);\n    };\n    /**\n     * Method to unbind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'click', this.gaugeOnMouseClick);\n        EventHandler.remove(this.element, 'contextmenu', this.gaugeRightClick);\n        EventHandler.remove(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize);\n    };\n    /**\n     * Method to bind events for circular gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.wireEvents = function () {\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'click', this.gaugeOnMouseClick, this);\n        EventHandler.add(this.element, 'contextmenu', this.gaugeRightClick, this);\n        EventHandler.add(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize.bind(this));\n        /*! Apply the style for circular gauge */\n        this.setGaugeStyle(this.element);\n    };\n    /**\n     * Handles the mouse click on accumulation chart.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseClick = function (e) {\n        this.setMouseXY(e);\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.click(e);\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse move.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseMove = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseMove);\n        this.trigger('gaugeMouseMove', args, function (observedArgs) {\n            var dragArgs;\n            var tooltip = _this.tooltipModule;\n            if (!args.cancel) {\n                if ((_this.enablePointerDrag || _this.enableRangeDrag) && _this.svgObject.getAttribute('cursor') !== 'grabbing') {\n                    if ((args.target.id.indexOf('_Pointer_') !== -1 && _this.enablePointerDrag) || (_this.enableRangeDrag && args.target.id.indexOf('_Range_') !== -1)) {\n                        _this.svgObject.setAttribute('cursor', 'pointer');\n                    }\n                    else {\n                        _this.svgObject.setAttribute('cursor', 'auto');\n                    }\n                }\n                var svgElement = getElement(_this.element.id + '_svg');\n                var extraWidth = _this.element.getBoundingClientRect().left - svgElement.getBoundingClientRect().left;\n                if (_this.enablePointerDrag && _this.activePointer) {\n                    _this.isDrag = true;\n                    var dragPointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                    var dragAxisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        pointer: _this.activePointer,\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        type: pointerMove,\n                        currentValue: null,\n                        axisIndex: dragAxisInd,\n                        pointerIndex: dragPointInd\n                    };\n                    _this.pointerDrag(new GaugeLocation(args.x + extraWidth, args.y), dragAxisInd, dragPointInd);\n                    dragArgs.currentValue = _this.activePointer.currentValue;\n                    _this.trigger(dragMove, dragArgs);\n                    _this.activeRange = null;\n                }\n                else if (_this.enableRangeDrag && _this.activeRange) {\n                    _this.isDrag = true;\n                    var dragAxisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                    var dragRangeInd = parseInt(_this.activeRange.pathElement[0].id.split('Range_')[1], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        name: dragMove,\n                        type: rangeMove,\n                        range: _this.activeRange,\n                        axisIndex: dragAxisInd,\n                        rangeIndex: dragRangeInd\n                    };\n                    _this.rangeDrag(new GaugeLocation(args.x + extraWidth, args.y), dragAxisInd, dragRangeInd);\n                    _this.trigger(dragMove, dragArgs);\n                }\n            }\n        });\n        if (!this.isTouch) {\n            if (this.legendModule && this.legendSettings.visible) {\n                this.legendModule.move(e);\n            }\n        }\n        this.notify(Browser.touchMoveEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse leave.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseLeave = function (e) {\n        this.setMouseXY(e);\n        this.activeAxis = null;\n        this.activePointer = null;\n        this.activeRange = null;\n        this.svgObject.setAttribute('cursor', 'auto');\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseLeave);\n        this.trigger(gaugeMouseLeave, args);\n        return false;\n    };\n    /**\n     * Handles the mouse right click.\n     *\n     * @param {MouseEvent | PointerEvent} event - Specifies the pointer or mouse event.\n     * @returns {boolean} - Returns the boolean value.\n     * @private\n     */\n    CircularGauge.prototype.gaugeRightClick = function (event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Handles the pointer draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the location of the gauge\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} pointerIndex - Specifies the pointer index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.pointerDrag = function (location, axisIndex, pointerIndex) {\n        var axis = this.activeAxis;\n        var range = axis.visibleRange;\n        var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        if (value >= range.min && value <= range.max) {\n            this.axes[axisIndex].pointers[pointerIndex].value = value;\n            this.activePointer.currentValue = value;\n            this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, this.activePointer, value);\n        }\n    };\n    /**\n     * Handles the range draf while mouse move on gauge.\n     *\n     * @param {GaugeLocation} location - Specifies the gauge location\n     * @param {number} axisIndex - Specifies the axis index\n     * @param {number} rangeIndex - Specifies the range index\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.rangeDrag = function (location, axisIndex, rangeIndex) {\n        if (this.activeAxis) {\n            var axis = this.activeAxis;\n            var range = axis.visibleRange;\n            var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n            if (value >= range.min && value <= range.max) {\n                var previousValue1 = this.activeRange.currentValue;\n                this.activeRange.currentValue = value;\n                var add = (this.activeRange.end - this.activeRange.start);\n                var div = add / 2;\n                var avg = parseFloat(this.activeRange.start.toString()) + div;\n                this.startValue = (value < avg) ? value : ((previousValue1 < avg) ? previousValue1 : ((this.activeRange.start < this.activeRange.end) ? this.activeRange.start : this.activeRange.end));\n                this.endValue = (value < avg) ? ((previousValue1 > avg) ? previousValue1 : ((this.activeRange.start < this.activeRange.end) ? this.activeRange.end : this.activeRange.start)) : value;\n                this.axes[axisIndex].ranges[rangeIndex].start = this.startValue;\n                this.axes[axisIndex].ranges[rangeIndex].end = this.endValue;\n            }\n        }\n    };\n    /**\n     * Handles the mouse down on gauge.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseDown = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var currentPointer;\n        var currentRange;\n        var args = this.getMouseArgs(e, 'touchstart', gaugeMouseDown);\n        this.trigger('gaugeMouseDown', args, function (observedArgs) {\n            if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Pointer_') >= 0) {\n                currentPointer = getPointer(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentPointer.axisIndex];\n                _this.activePointer = _this.activeAxis.pointers[currentPointer.pointerIndex];\n                if (isNullOrUndefined(_this.activePointer.pathElement)) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                if (_this.activePointer.type === 'Marker' && _this.activePointer.markerShape === 'Text' && _this.activePointer.pathElement.length === 0) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                var pointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                var axisInd = parseInt(_this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: pointerStart,\n                    pointer: _this.activePointer,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd\n                });\n                if (_this.enablePointerDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n            else if (!args.cancel &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0 &&\n                args.target.id.indexOf('_Range_') >= 0) {\n                currentRange = getRange(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentRange.axisIndex];\n                _this.activeRange = _this.activeAxis.ranges[currentRange.rangeIndex];\n                if (isNullOrUndefined(_this.activeRange.pathElement)) {\n                    _this.activeRange.pathElement = [e.target];\n                }\n                var rangeInd = parseInt(_this.activeRange.pathElement[0].id.split('Range_')[1], 10);\n                var axisInd = parseInt(_this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n                _this.trigger(dragStart, {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    type: rangeStart,\n                    range: _this.activeRange,\n                    axisIndex: axisInd,\n                    rangeIndex: rangeInd\n                });\n                if (_this.enableRangeDrag) {\n                    _this.svgObject.setAttribute('cursor', 'grabbing');\n                }\n            }\n        });\n        return false;\n    };\n    /**\n     * Handles the mouse end.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.mouseEnd = function (e) {\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchend', gaugeMouseUp);\n        this.isTouch = e.pointerType === 'touch' || e.pointerType === '2' || e.type === 'touchend';\n        var tooltip = this.tooltipModule;\n        this.trigger(gaugeMouseUp, args);\n        if (this.activeAxis && this.activePointer && this.enablePointerDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var pointerInd = parseInt(this.activePointer.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activePointer.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, {\n                name: dragEnd,\n                type: pointerEnd,\n                axis: this.activeAxis,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue,\n                axisIndex: axisInd,\n                pointerIndex: pointerInd\n            });\n            this.activeAxis = null;\n            this.activePointer = null;\n            this.isDrag = false;\n        }\n        else if (this.activeAxis && this.activeRange && this.enableRangeDrag) {\n            this.svgObject.setAttribute('cursor', 'auto');\n            var rangeInd = parseInt(this.activeRange.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activeRange.pathElement[0].id.split('_Axis_')[1], 10);\n            this.trigger(dragEnd, {\n                name: dragEnd,\n                type: rangeEnd,\n                axis: this.activeAxis,\n                range: this.activeRange,\n                axisIndex: axisInd,\n                rangeIndex: rangeInd\n            });\n            this.activeAxis = null;\n            this.activeRange = null;\n            this.isDrag = false;\n        }\n        if (!isNullOrUndefined(this.activePointer)) {\n            this.activePointer = null;\n        }\n        this.svgObject.setAttribute('cursor', 'auto');\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse event arguments.\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @param {string} type - Specifies the type\n     * @param {string} name - Specifies the name\n     * @returns {IMouseEventArgs} - Returns the mouse event args\n     * @private\n     */\n    CircularGauge.prototype.getMouseArgs = function (e, type, name) {\n        var rect = this.element.getBoundingClientRect();\n        var location = new GaugeLocation(-rect.left, -rect.top);\n        var isTouch = (e.type === type);\n        location.x += isTouch ? e.changedTouches[0].clientX : e.clientX;\n        location.y += isTouch ? e.changedTouches[0].clientY : e.clientY;\n        return {\n            cancel: false, name: name,\n            x: location.x, y: location.y,\n            target: isTouch ? e.target : e.target\n        };\n    };\n    /**\n     * Handles the gauge resize.\n     *\n     * @param {Event} e - Specifies the event\n     * @returns {boolean} - Returns the boolean value\n     * @private\n     */\n    CircularGauge.prototype.gaugeResize = function (e) {\n        var _this = this;\n        var args = {\n            gauge: this,\n            previousSize: this.availableSize,\n            name: resized,\n            cancel: false,\n            currentSize: this.calculateSvgSize()\n        };\n        this.trigger(resized, args);\n        if (!args.cancel) {\n            if (this.resizeTo) {\n                clearTimeout(this.resizeTo);\n            }\n            if (!isNullOrUndefined(this.element) && this.element.classList.contains('e-circulargauge')) {\n                this.animatePointer = false;\n                this.resizeTo = window.setTimeout(function () {\n                    _this.createSvg();\n                    _this.calculateBounds();\n                    _this.renderElements();\n                }, 500);\n            }\n        }\n        return false;\n    };\n    /**\n     * Applying styles for circular gauge elements\n     *\n     * @param {HTMLElement} element - Specifies the html element\n     * @returns {void}\n     */\n    CircularGauge.prototype.setGaugeStyle = function (element) {\n        element.style.touchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msTouchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    };\n    /**\n     * Method to set culture for gauge\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * Methods to create svg element for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.createSvg = function () {\n        this.removeSvg();\n        this.availableSize = this.calculateSvgSize();\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To Remove the SVG from circular gauge.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.removeSvg = function () {\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n        removeElement(this.element.id + '_svg');\n        this.clearTemplate();\n    };\n    /**\n     * To initialize the circular gauge private variable.\n     *\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-circulargauge').length;\n            this.element.id = 'circulargauge_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        this.animatePointer = true;\n    };\n    /**\n     * To calculate the size of the circular gauge element.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateSvgSize = function () {\n        var containerWidth = this.element.offsetWidth;\n        var containerHeight = this.element.offsetHeight;\n        var borderWidth = parseInt(this.element.style.borderWidth.split('px').join(''), 10) * 2;\n        var width = stringToNumber(this.width, containerWidth) || containerWidth || 600;\n        var height = stringToNumber(this.height, containerHeight) || containerHeight || 450;\n        width = !isNaN(borderWidth) ? (width - borderWidth) : width;\n        height = !isNaN(borderWidth) ? (height - borderWidth) : height;\n        return new Size(width, height);\n    };\n    /**\n     * To calculate the spacing of the circular gauge element.\n     *\n     * @param {number} top - Specifies the top value\n     * @param {number} left - Specifies the left value\n     * @param {number} width - Specifies the width\n     * @param {number} height - Specifies the height\n     * @param {number} radius - Specifies the radius\n     * @param {number} titleHeight - Specifies the titleHeight\n     * @param {number} isUpperAngle - Specifies the isUpperAngle\n     * @param {number} isLowerAngle - Specifies the isLowerAngle\n     * @param {number} isFullPercent - Specifies the boolean value\n     * @param {number} isUpper - Specifies the boolean value\n     * @param {number} isLower - Specifies the boolean value\n     * @returns {void}\n     */\n    /* eslint-disable max-len */\n    CircularGauge.prototype.radiusAndCenterCalculation = function (top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower) {\n        var rect;\n        var bottom = this.margin.bottom + this.border.width;\n        var minRadius;\n        var widthRadius;\n        var centerX;\n        var centerY;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerXpoint) && isNullOrUndefined(this.centerYpoint)) {\n            rect = new Rect(left, top, width, height);\n        }\n        else {\n            if (!this.allowMargin) {\n                if (!isNullOrUndefined(this.legendModule) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                    minRadius = Math.min(width, height) / 2;\n                    rect = new Rect((left + (width / 2) - minRadius), (top + (height / 2) - minRadius), minRadius * 2, minRadius * 2);\n                }\n                else {\n                    if (width > height && (isLowerAngle && isLower || isUpperAngle && isUpper)) {\n                        widthRadius = ((width) / 2);\n                        var heightValue = isUpper && isLower ? (height / 2) : (height * (3 / 4));\n                        if (widthRadius > heightValue) {\n                            widthRadius = heightValue;\n                        }\n                        rect = new Rect((left + (width / 2) - widthRadius), (top + (height / 2) - widthRadius), widthRadius * 2, widthRadius * 2);\n                    }\n                    else {\n                        if (height > width) {\n                            var heightRadius = height / 2;\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - heightRadius), radius * 2, heightRadius * 2);\n                        }\n                        else {\n                            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n                        }\n                    }\n                }\n            }\n            else {\n                rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            }\n        }\n        this.gaugeRect = rect;\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            this.legendModule.calculateLegendBounds(this.gaugeRect, this.availableSize);\n        }\n        if (!this.allowMargin) {\n            if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')) {\n                var difference = height - this.gaugeRect.height;\n                this.gaugeRect.width = width - ((this.availableSize.width - this.gaugeRect.width) / 2);\n                this.gaugeRect.y = this.gaugeRect.y - difference;\n                this.gaugeRect.height = this.gaugeRect.height + difference + ((this.availableSize.height - this.gaugeRect.height) / 2);\n            }\n            else if (!isNullOrUndefined(this.legendModule) && (isUpperAngle || isLowerAngle) && (width > height) && (this.legendSettings.position === 'Left' || this.legendSettings.position === 'Right')) {\n                var difference = this.gaugeRect.height - this.gaugeRect.width;\n                this.gaugeRect.x = this.legendSettings.position === 'Right'\n                    ? this.gaugeRect.x + this.margin.right : this.gaugeRect.x;\n                this.gaugeRect.width = this.legendSettings.position === 'Left' ?\n                    Math.abs(width - ((this.availableSize.width - this.gaugeRect.width + difference) / 2))\n                    : Math.abs(width - ((this.availableSize.width - this.gaugeRect.width) / 2) - 10);\n            }\n            centerX = this.centerXpoint !== null ?\n                stringToNumber(this.centerXpoint, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            if ((isUpperAngle || isLowerAngle) && !isNullOrUndefined(this.legendModule)) {\n                centerX = (this.legendSettings.position === 'Top' || this.legendSettings.position === 'Bottom')\n                    ? this.availableSize.width / 2 : this.legendSettings.position === 'Right' ? (this.gaugeRect.width / 2) + this.margin.right :\n                    centerX;\n            }\n            centerY = ((isUpperAngle || isLowerAngle) ? (isUpperAngle ?\n                (((this.gaugeRect.height * (3 / 4) + this.gaugeRect.y) - bottom))\n                : (((this.gaugeRect.height * (1 / 4)) + (this.gaugeRect.y)))) : this.gaugeRect.y + (this.gaugeRect.height / 2));\n            centerY = !isFullPercent && (isUpperAngle || isLowerAngle) ? (this.gaugeRect.height / 2) + this.gaugeRect.y + (radiusPercent * (3 / 4) * (1 / 2)) : centerY;\n            if (!isNullOrUndefined(this.axes) && this.axes.length > 1 && !isNullOrUndefined(this.midPoint)) {\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                if (isUpper && isLower) {\n                    centerY = (this.availableSize.height / 2) - bottom;\n                }\n            }\n        }\n        else {\n            centerX = this.centerXpoint !== null ?\n                stringToNumber(this.centerXpoint, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n            centerY = this.centerYpoint !== null ?\n                stringToNumber(this.centerYpoint, this.availableSize.height) : this.gaugeRect.y + (this.gaugeRect.height / 2);\n        }\n        this.midPoint = new GaugeLocation(centerX, centerY);\n    };\n    /**\n     * Method to calculate the availble size for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.calculateBounds = function () {\n        var padding = 5;\n        var rect;\n        var margin = this.margin;\n        var titleHeight = 0;\n        if (this.title) {\n            titleHeight = measureText(this.title, this.titleStyle).height + padding;\n        }\n        var top = margin.top + titleHeight + this.border.width;\n        var bottom = margin.bottom + this.border.width;\n        var left = margin.left + this.border.width;\n        var isUpper = false;\n        var isLower = false;\n        var width = this.availableSize.width - left - margin.right - this.border.width;\n        var height = this.availableSize.height - top - this.border.width - margin.bottom;\n        var radius = Math.min(width, height) / 2;\n        this.centerXpoint = (this.centerX === '') ? null : this.centerX;\n        this.centerYpoint = (this.centerY === '') ? null : this.centerY;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerXpoint) && isNullOrUndefined(this.centerYpoint)) {\n            rect = new Rect(left, top, width, height);\n        }\n        if (!this.allowMargin) {\n            for (var j = 0; j < this.axes.length; j++) {\n                var isUpperAngle = 270 <= this.axes[j].startAngle && this.axes[j].startAngle <= 360 &&\n                    0 <= this.axes[j].endAngle && this.axes[j].endAngle <= 90;\n                var isLowerAngle = 90 >= this.axes[j].startAngle && this.axes[j].startAngle <= 180 &&\n                    180 <= this.axes[j].endAngle && 270 <= this.axes[j].endAngle && 0 !== this.axes[j].startAngle &&\n                    360 !== this.axes[j].endAngle;\n                isUpper = isUpperAngle ? isUpperAngle : isUpper;\n                isLower = isLowerAngle ? isLowerAngle : isLower;\n                var isFullPercent = this.axes[j].radius !== null ? parseInt(this.axes[0].radius.split('%')[0], 10) >= 100 : true;\n                var radiusPercent = this.axes[j].radius !== null ? radius * (parseInt(this.axes[0].radius.split('%')[0], 10) / 100) : radius;\n                this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, isUpperAngle, isLowerAngle, isFullPercent, radiusPercent, isUpper, isLower);\n            }\n        }\n        else {\n            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n            this.radiusAndCenterCalculation(top, left, width, height, radius, titleHeight, false, false, null, null, false, false);\n        }\n        this.gaugeAxisLayoutPanel.measureAxis(this.gaugeRect);\n    };\n    /**\n     * To render elements for circular gauge\n     *\n     * @param {boolean} animate - Specifies whether animation is true or false\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderElements = function (animate) {\n        if (animate === void 0) { animate = true; }\n        this.renderBorder();\n        this.renderTitle();\n        this.gaugeAxisLayoutPanel.renderAxes(animate);\n        this.renderLegend();\n        this.element.appendChild(this.svgObject);\n        this.trigger(loaded, { gauge: this });\n        removeElement('gauge-measuretext');\n    };\n    /**\n     * Method to render legend for accumulation chart\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderLegend = function () {\n        if (!this.legendModule || !this.legendSettings.visible) {\n            return null;\n        }\n        if (this.legendModule.legendCollection.length) {\n            this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds, true);\n        }\n    };\n    /**\n     * Method to render the title for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderTitle = function () {\n        if (this.title) {\n            this.titleStyle.fontFamily = this.themeStyle.fontFamily || this.titleStyle.fontFamily;\n            this.titleStyle.size = this.themeStyle.fontSize || this.titleStyle.size;\n            this.titleStyle.fontWeight = this.titleStyle.fontWeight || this.themeStyle.titleFontWeight;\n            var titleSize = this.titleStyle.size;\n            if (!isNaN(Number(titleSize))) {\n                this.titleStyle.size = titleSize + 'px';\n            }\n            var size = measureText(this.title, this.titleStyle);\n            var options = new TextOption(this.element.id + '_CircularGaugeTitle', this.availableSize.width / 2, this.margin.top + 3 * (size.height / 4), 'middle', this.title);\n            var element = textElement(options, this.titleStyle, this.titleStyle.color || this.themeStyle.titleFontColor, this.svgObject, '');\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    };\n    /**\n     * Method to render the border for circular gauge.\n     *\n     * @returns {void}\n     */\n    CircularGauge.prototype.renderBorder = function () {\n        var borderWidth = this.border.width;\n        if (borderWidth > 0 || (this.background || this.themeStyle.backgroundColor)) {\n            this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_CircularGaugeBorder', this.background || this.themeStyle.backgroundColor, this.border, null, new Rect(borderWidth / 2, borderWidth / 2, this.availableSize.width - borderWidth, this.availableSize.height - borderWidth))));\n        }\n    };\n    /* eslint-disable valid-jsdoc */\n    /**\n     * This method is used to set the pointer value dynamically for circular gauge.\n     *\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param pointerIndex - Specifies the index value for the pointer in circular gauge.\n     * @param value - Specifies the value for the pointer in circular gauge.\n     */\n    CircularGauge.prototype.setPointerValue = function (axisIndex, pointerIndex, value) {\n        var _this = this;\n        var axis = this.axes[axisIndex];\n        var pointer = axis.pointers[pointerIndex];\n        var pointerRadius = pointer.currentRadius;\n        var enableAnimation = pointer.animation.enable;\n        value = value < axis.visibleRange.min ? axis.visibleRange.min : value;\n        value = value > axis.visibleRange.max ? axis.visibleRange.max : value;\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                setStyles(element, pointer.color, pointer.border);\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performRangeBarAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n            else {\n                if (element.id.indexOf('_Pointer_NeedleCap_') >= 0) {\n                    setStyles(element, pointer.cap.color, pointer.cap.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleTail_') >= 0) {\n                    setStyles(element, pointer.needleTail.color, pointer.needleTail.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleRect_') >= 0) {\n                    setStyles(element, 'transparent', { color: 'transparent', width: 0 });\n                }\n                else {\n                    setStyles(element, pointer.color, pointer.border);\n                }\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performNeedleAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n        });\n        this.isProtectedOnChange = true;\n        pointer.previousValue = pointer.currentValue;\n        pointer.currentValue = value;\n        pointer.value = value;\n        this.isProtectedOnChange = false;\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * This method is used to set the annotation content dynamically for circular gauge.\n     *\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param annotationIndex - Specifies the index value for the annotation in circular gauge.\n     * @param content - Specifies the content for the annotation in circular gauge.\n     */\n    CircularGauge.prototype.setAnnotationValue = function (axisIndex, annotationIndex, content) {\n        var isElementExist = getElement(this.element.id + '_Annotations_' + axisIndex) !== null;\n        var element = getElement(this.element.id + '_Annotations_' + axisIndex) ||\n            createElement('div', {\n                id: this.element.id + '_Annotations_' + axisIndex\n            });\n        var annotation = this.axes[axisIndex].annotations[annotationIndex];\n        if (content !== null) {\n            removeElement(this.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex);\n            annotation.content = content;\n            this.annotationsModule.createTemplate(element, annotationIndex, axisIndex);\n            var secondaryElement = getElement(this.element.id + '_Secondary_Element');\n            if (!isElementExist && !isNullOrUndefined(secondaryElement)) {\n                secondaryElement.appendChild(element);\n            }\n        }\n    };\n    /**\n     * This method is used to print the rendered circular gauge.\n     *\n     * @param id - Specifies the element to print the circular gauge.\n     */\n    CircularGauge.prototype.print = function (id) {\n        if (this.allowPrint && this.printModule) {\n            this.printModule.print(id);\n        }\n    };\n    /**\n     * This method is used to perform the export functionality for the circular gauge.\n     *\n     * @param type - Specifies the type of the export.\n     * @param fileName - Specifies the file name for the exported file.\n     * @param  orientation - Specified the orientation for the exported pdf document.\n     * @param allowDownload - Specifies whether to download as a file.\n     */\n    CircularGauge.prototype.export = function (type, fileName, orientation, allowDownload) {\n        var _this = this;\n        if (isNullOrUndefined(allowDownload)) {\n            allowDownload = true;\n        }\n        if (type === 'PDF' && this.allowPdfExport && this.pdfExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return new Promise(function (resolve, reject) {\n                resolve(_this.pdfExportModule.export(type, fileName, orientation, allowDownload));\n            });\n        }\n        else if (this.allowImageExport && (type !== 'PDF') && this.imageExportModule) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return new Promise(function (resolve, reject) {\n                resolve(_this.imageExportModule.export(type, fileName, allowDownload));\n            });\n        }\n        return null;\n    };\n    /**\n     * Method to set mouse x, y from events\n     *\n     * @param {PointerEvent} e - Specifies the pointer event\n     * @returns {void}\n     */\n    CircularGauge.prototype.setMouseXY = function (e) {\n        var pageX;\n        var pageY;\n        var svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        var rect = this.element.getBoundingClientRect();\n        if (e.type.indexOf('touch') > -1) {\n            this.isTouch = true;\n            var touchArg = e;\n            pageY = touchArg.changedTouches[0].clientY;\n            pageX = touchArg.changedTouches[0].clientX;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        this.mouseY = (pageY - rect.top) - Math.max(svgRect.top - rect.top, 0);\n        this.mouseX = (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);\n    };\n    /**\n     * This method is used to set the range values dynamically for circular gauge.\n     *\n     * @param axisIndex - Specifies the index value for the axis in circular gauge.\n     * @param rangeIndex - Specifies the index value for the range in circular gauge.\n     * @param start - Specifies the start value for the current range in circular gauge.\n     * @param end - Specifies the end value for the current range i circular gauge.\n     */\n    CircularGauge.prototype.setRangeValue = function (axisIndex, rangeIndex, start, end) {\n        var element = getElement(this.element.id + '_Axis_' + axisIndex + '_Range_' + rangeIndex);\n        var axis = this.axes[axisIndex];\n        var range = axis.ranges[rangeIndex];\n        var axisRange = axis.visibleRange;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue = Math.min(Math.max(start, axisRange.min), end);\n        var endValue = Math.min(Math.max(start, end), axisRange.max);\n        var oldRangeStart = range.start;\n        var oldRangeEnd = range.end;\n        range.start = start;\n        range.end = end;\n        if (range.start !== range.end && oldRangeStart === oldRangeEnd && this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            var height = this.legendModule.legendBounds.height + this.legendSettings.margin.top + this.legendSettings.margin.bottom + this.legendSettings.border.width;\n            var width = this.legendModule.legendBounds.width + this.legendSettings.margin.left + this.legendSettings.margin.right + this.legendSettings.border.width;\n            var rect = this.gaugeRect;\n            var position = this.legendModule.position;\n            if (position === 'Bottom') {\n                rect.height = rect.height + height;\n            }\n            if (position === 'Top') {\n                rect.height = rect.height + height;\n                rect.y = rect.y - height;\n            }\n            if (position === 'Left') {\n                rect.width = rect.width + width;\n                rect.x = rect.x - width;\n            }\n            if (position === 'Right') {\n                rect.width = rect.width + width;\n            }\n            this.legendModule.calculateLegendBounds(rect, this.availableSize);\n            if (this.legendModule.legendCollection.length) {\n                this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds, true);\n            }\n        }\n        this.isRangeUpdate = true;\n        var startAngle = getAngleFromValue(startValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(endValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var startWidth;\n        if (range.startWidth.length > 0) {\n            startWidth = toPixel(range.startWidth, range.currentRadius);\n        }\n        else {\n            startWidth = range.startWidth;\n        }\n        var endWidth;\n        if (range.endWidth.length > 0) {\n            endWidth = toPixel(range.endWidth, range.currentRadius);\n        }\n        else {\n            endWidth = range.endWidth;\n        }\n        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n        endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n        element.setAttribute('d', getPathArc(this.midPoint, Math.round(startAngle), Math.round(endAngle), range.currentRadius, startWidth, endWidth, range, axis));\n        setStyles(element, (range.color ? range.color : range.rangeColor), {\n            color: (range.color ? range.color : range.rangeColor),\n            width: 0\n        });\n    };\n    /**\n     * To destroy the widget\n     *\n     * @method destroy\n     * @return {void}\n     * @member of Circular-Gauge\n     */\n    CircularGauge.prototype.destroy = function () {\n        this.unWireEvents();\n        this.removeSvg();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns the modules\n     * @private\n     */\n    CircularGauge.prototype.requiredModules = function () {\n        var modules = [];\n        var annotationEnable = false;\n        var axes = this.axes;\n        axes.map(function (axis) {\n            axis.annotations.map(function (annotation) {\n                annotationEnable = annotationEnable || annotation.content !== null;\n            });\n        });\n        if (annotationEnable) {\n            modules.push({\n                member: 'Annotations',\n                args: [this, Annotations]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this, GaugeTooltip]\n            });\n        }\n        if (this.allowPrint) {\n            modules.push({\n                member: 'Print',\n                args: [this, Print]\n            });\n        }\n        if (this.allowImageExport) {\n            modules.push({\n                member: 'ImageExport',\n                args: [this, ImageExport]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this, PdfExport]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'Legend',\n                args: [this, Legend]\n            });\n        }\n        modules.push({\n            member: 'Gradient',\n            args: [this, Gradient]\n        });\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns the string\n     * @private\n     */\n    CircularGauge.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {CircularGaugeModel} newProp - Specifies the new property\n     * @param {CircularGaugeModel} oldProp - Specifies the old property\n     * @returns {void}\n     * @private\n     */\n    CircularGauge.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // property method calculated\n        var renderer = false;\n        var refreshBounds = false;\n        var refreshWithoutAnimation = false;\n        var isPointerValueSame = (Object.keys(newProp).length === 1 && newProp instanceof Object &&\n            !isNullOrUndefined(this.activePointer));\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                case 'width':\n                case 'centerX':\n                case 'centerY':\n                case 'margin':\n                    this.createSvg();\n                    refreshBounds = true;\n                    break;\n                case 'title':\n                    refreshBounds = (newProp.title === '' || oldProp.title === '');\n                    renderer = !(newProp.title === '' || oldProp.title === '');\n                    break;\n                case 'titleStyle':\n                    if (newProp.titleStyle && newProp.titleStyle.size) {\n                        refreshBounds = true;\n                    }\n                    else {\n                        renderer = true;\n                    }\n                    break;\n                case 'border':\n                    renderer = true;\n                    break;\n                case 'background':\n                    renderer = true;\n                    break;\n                case 'legendSettings':\n                    refreshWithoutAnimation = true;\n                    break;\n                case 'axes':\n                    refreshWithoutAnimation = true;\n                    break;\n            }\n        }\n        if (!isPointerValueSame && !this.isRangeUpdate) {\n            if (!refreshBounds && renderer) {\n                this.removeSvg();\n                this.renderElements();\n            }\n            if (refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements();\n            }\n            if (refreshWithoutAnimation && !renderer && !refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements(false);\n            }\n        }\n        this.isRangeUpdate = false;\n    };\n    /**\n     * Get component name for circular gauge\n     *\n     * @returns {string} - Returns the module name\n     * @private\n     */\n    CircularGauge.prototype.getModuleName = function () {\n        return 'circulargauge';\n    };\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], CircularGauge.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"background\", void 0);\n    __decorate([\n        Property('')\n    ], CircularGauge.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '15px', color: null, fontWeight: null }, Font)\n    ], CircularGauge.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], CircularGauge.prototype, \"margin\", void 0);\n    __decorate([\n        Collection([{}], Axis)\n    ], CircularGauge.prototype, \"axes\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], CircularGauge.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enablePointerDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enableRangeDrag\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPrint\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowImageExport\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerX\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerY\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"moveToCenter\", void 0);\n    __decorate([\n        Property('Material')\n    ], CircularGauge.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], CircularGauge.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Property(true)\n    ], CircularGauge.prototype, \"allowMargin\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], CircularGauge.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"radiusCalculate\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"annotationRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragEnd\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"resized\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"beforePrint\", void 0);\n    CircularGauge = __decorate([\n        NotifyPropertyChanges\n    ], CircularGauge);\n    return CircularGauge;\n}(Component));\nexport { CircularGauge };\n"],"names":["measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","style","getFontStyle","innerHTML","setAttribute","Size","clientWidth","clientHeight","toPixel","value","maxDimension","undefined","indexOf","parseInt","size","fontStyle","fontWeight","fontFamily","opacity","color","textElement","options","parent","styles","renderOptions","renderer","SvgRenderer","x","y","fill","text-anchor","anchor","transform","dominant-baseline","baseLine","createText","appendPath","element","gauge","functionName","isCompleteAngle","startAngle","endAngle","totalAngle","Math","floor","getDegree","degree","getAngleFromValue","maximumValue","minimumValue","isClockWise","angle","round","getAngleFromLocation","center","point","atan2","PI","getLocationFromAngle","radius","radian","GaugeLocation","cos","sin","getPathArc","start","end","startWidth","endWidth","range","axis","isNullOrUndefined","startRadius","position","isLinearCircularGradient","direction","endRadius","arcRadius","insideArcRadius","insideEndRadius","insideStartRadius","getRangePath","getCirclePath","arcPath","arcStartOne","arcEndOne","arcStartTwo","arcEndTwo","clockWise","innerStart","innerEnd","pointPosition","arcRoundedPath","outerOldEnd","innerOldEnd","innerOldStart","outerOldStart","roundedPath","arcWidthPath","endArc","startArc","widthDifference","abs","arcWidthPathCalculation","roundedArcWidthPathCalculation","startValueToAngle","maximum","minimum","endRadii","sqrt","pow","centerStartDistance","centerDistance","roundedCornerRadius","arcStart","arcEnd","angleValueDirection","endRadiusValue","arcTwo","startGreater","arcOne","degreeAngle","degreeValueOne","degreeValueTwo","startAddArc","startSubArc","getRoundedPathArc","actualStart","actualEnd","oldStart","oldEnd","getTemplateFunction","template","templateFn","isNaN","parseFloat","querySelectorAll","length","charAt","templateComplier","querySelector","trim","e","removeElement","getElement","remove","stringToNumber","containerSize","getPointer","targetId","tempString","replace","split","axisIndex","pointerIndex","getLabelFormat","format","match","calculateShapes","location","shape","url","path","space","width","height","locX","locY","isLegend","merge","rx","ry","cx","cy","d","href","stroke","setStyles","border","setStyleAttribute","stroke-width","getValueFromAngle","getRange","rangeIndex","getMousePosition","pageX","pageY","elementRect","getBoundingClientRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","left","positionY","top","getElementSize","elementSize","tooltipData","templateElement","templateLength","calculateSum","from","to","values","sum","getRangeColor","ranges","min","max","currentRange","filter","rangeColor","linear","currentTime","startValue","endValue","duration","getCompleteArc","innerRadius","checkMinValue","getCompletePath","textTrim","maxWidth","label","i","substring","showTooltip","areaWidth","tooltip","toString","Theme","__extends","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","CustomizeOption","PathOption","_super","dashArray","_this","call","RectOption","rect","Rect","TextOption","VisibleLabels","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","apply","Property","ChildProperty","Font","RangeTooltip","Complex","AnnotationTooltip","Margin","TooltipSettings","axisLabelFont","legendLabelFont","Line","Label","Range","Tick","Cap","NeedleTail","Animation","Annotation","Pointer","Axis","visibleLabels","Collection","animationComplete","axisLabelRender","tooltipRender","gaugeMouseLeave","dragStart","dragMove","dragEnd","Annotations","elementId","renderAnnotation","index","availableSize","parentElement","annotations","map","annotation","annotationIndex","content","createTemplate","childElementCount","renderReactTemplates","axes","childElement","zIndex","autoAngle","argsData","cancel","name","textStyle","trigger","observedArgs","length_1","slice","updateLocation","currentRadius","midPoint","measureElementRect","description","getModuleName","destroy","bounds","GaugeTooltip","tooltipId","borderStyle","addEventListener","renderTooltip","gaugeId","getAttribute","touchArg","samePointerEle","isTooltipRender","type","changedTouches","pointerEle","svgRect_1","svgObject","axisRect_1","rect_1","currentPointer","currentAxis","angle_1","currentValue","visibleRange","tooltipFormat","labelStyle","customLabelFormat","intl","getNumberFormat","useGrouping","useGroupingSeparator","tooltipElement","tooltipEle","enablePointerDrag","showAtMousePosition","roundValue","roundedValue","pointerContent_1","RegExp","tooltipArgs","pointer","event","appendInBodyTag","tooltipRect","findPosition","themeStyle","tooltipFontColor","tooltipTextOpacity","svgTooltip","svgTooltipCreate","arrowInverted","tooltipFillOpacity","appendTo","isDrag","rangeSvgRect_1","rangeElementRect","rangeAxisRect_1","rect_2","rangeAngle_1","rangeTooltipFormat","rangeSettings","rangeFormat","roundStartValue","roundEndValue","startData_1","endData_1","rangeContent_1","rangeTooltipArgs","rangeTooltipTextStyle_1","rangeTemplate","checkParentAnnotationId","annotationTargetElement","annotationSvgRect","annotationElementRect","rect_3","currentAnnotation","annotationAngle","annotationContent","annotationSettings","annotationTooltipArgs","annotationTemplate","elementSizeAn","tooltipPosition","removeTooltip","clearTemplate","gaugeRect","offsetLeft","tooltipLeft","tooltipArg","Tooltip","enable","data","enableAnimation","inverted","areaBounds","tooltipFillColor","className","child","roundingPlaces","toFixed","addLeft","addTop","addHeight","addWidth","getElementsByClassName","mouseUpHandler","clearTimeout","setTimeout","bind","isDestroyed","on","Browser","touchMoveEvent","touchEndEvent","removeEventListener","off","AxisRenderer","drawAxisOuterLine","background","setRangeColor","checkAngles","drawAxisLine","lineStyle","lineColor","allowComponentRender","drawAxisLabels","textWidth","textHeight","currentTextWidth","currentTextHeight","previousLocation","currentLocation","lastLabelLocation","lastLabelAngle","lastLabelAnchor","lastTextWidth","lastTextHeight","labelElement","createGroup","labelCollection","labelsVisible","checkLabelOpposed","majorTicks","minorTicks","labelPadding","shouldMaintainPadding","labelColor","nearSize","maxLabelSize","offset","farSize","hideIntersectingLabel","findAnchor","showLastLabel","hiddenLabel","offsetAxisLabelsize","getAxisLabelStartPosition","labelFontFamily","lastlabel","FindAxisLabelCollision","useRangeColor","previousWidth","previousHeight","currentWidth","currentHeight","actualLocation","anchorPosition","drawMinorTickLines","minorTickElements","minorLineStyle","minorInterval","interval","isRangeColor","minorTickColor","majorValues","calculateTicks","drawMajorTickLines","majorTickElements","majorLineStyle","majorTickColor","push","axisLineWidth","drawRangePath","rangeElement","colorIndex","roundedStartAngle","roundedEndAngle","gradientRangeColor","rangeSplitValue","linearGradient","colorStop","rangeStart","rangeEnd","isAngleCross360","rangeGap","startAndEndRangeGap","process","degreeValue","gradientModule","radialGradient","rangeColorLength","degreeRange","degreeRangeValue","gradientDegree","gradientAngle","gradientAntiAngle","getGradientColorString","roundedRangeAppendPathCalculation","ceil","rangeAppendPathCalculation","pathElement","drawAxisRange","startEndDifference","previousEndWidth","previousStartWidth","currentDistanceFromScale","calculateRangeRadius","calculateRangeRadiusWithPosition","rangeColors","theme","palette","toLowerCase","getRangePalette","PointerRenderer","drawPointers","animate","pointerElement","pointers","calculatePointerRadius","setPointerValue","animation","doPointerAnimation","pointerRadiusForPosition","markerShape","pointerSize","markerOffset","rangeBarOffset","pointerWidth","markerWidth","drawNeedlePointer","pointerRadius","rectDirection","gradientColor","gradientTailColor","gradientCapColor","needle","needleTail","cap","needleStartWidth","needleEndWidth","mid","needleColor","needleTailColor","capColor","minRadius","oldStartValue","oldEndValue","roundStartAngle","roundEndAngle","textangle","textlocation","String","drawMarkerPointer","gradientMarkerColor","shapeBasedOnPosition","markerHeight","imageUrl","pointerColor","drawRangeBarPointer","gradientBarColor","previousValue","animatePointer","performRangeBarAnimation","performNeedleAnimation","sweepAngle","pointAngle","progress","args","timeStamp","model","minAngle","roundRadius","arg","AxisLayoutPanel","axisRenderer","pointerRenderer","measureAxis","measureAxisSize","calculateAxesRadius","totalRadius","rangeMaximumRadius","xMarginDiff","margin","right","yMarginDiff","bottom","_loop_1","this_1","moveToCenter","centerXpoint","centerYpoint","startPoint","endPoint","xDiff","yDiff","startXDiff","endXDiff","startYDiff","endYDiff","newPoint","calculateNumericInterval","calculateVisibleLabels","_i","_a","computeSize","farSizes","calculateAxisValues","calculateVisibleRange","calculateNiceInterval","maxValue","minValue","delta","circumference","desiredIntervalsCount","niceInterval","minInterval","log","currentInterval","_loop_2","axisLabelRenderSuccess","this_2","lastLabel","maxVal","getMaxLabelWidth","lineSize","outerHeight","innerHeight","heightForCross","majorTickOffset","minorTickOffset","labelOffset","axes_1","renderAxes","axesElements","clip-path","annotationsModule","drawClipPath","Location","LegendSettings","Legend","legendRegions","rowCount","pageButtonSize","pageXCollections","maxColumns","currentPage","pagingRegions","toggledIndexes","legend","legendSettings","legendID","click","getLegendOptions","legendCollection","j","legendText","LegendOptions","visible","shapeBorder","shapeWidth","shapeHeight","calculateLegendBounds","legendBounds","isVertical","getLegendBounds","getLocation","alignment","alignLegend","legendSize","padding","legendHeight","legendWidth","marginBottom","subtractThickness","renderLegend","redraw","firstLegend","findFirstLegendPosition","maxItemHeight","textSize","legendGroup","legendTranslateGroup","createLegendElements","totalPages","legendAxisGroup","textOptions","textPadding","shapePadding","count","previousLegend","legendOption","render","getRenderPoint","renderSymbol","renderText","toggleVisibility","isPaging","renderPagingElements","appendChildElement","textOption","paginggroup","symbolOption","iconSize","clipPathHeight","clipRect","pageTextElement","translatePage","pagingText","page","pageNumber","translate","textContent","group","fontcolor","prevLegend","maxColumnWidth","previousBound","totalRowCount","availablewidth","getAvailWidth","toggledIndex","legendItemsId_1","legendByIndex","Index","isToggled","changePage","rangeID","shapeID","textID","shapeElement","textElement_1","visibility","legendCollections","legendCollections_1","pageUp","pageText","tx","legendX","drawRectangle","legendItemsGroup","clippath","createClipPath","isAnimate","forceAnimate","isRect","previousRect","animateDuration","existChild","replaceChild","legendCollection_1","extraWidth","extraHeight","maximumWidth","rowWidth","columnWidth","columnHeight","legendEventArgs","getMaxColumn","setBounds","computedWidth","computedHeight","columns","maxPageColumn","columns_1","move","mouseX","mouseY","legends","originalText","offsetWidth","circulargauge","PdfExport","control","export","fileName","orientation","allowDownload","Promise","resolve","reject","attrs","userAgent","PdfPageOrientation","Landscape","exportElement","cloneNode","backgroundColor","childNodes","window","URL","createObjectURL","Blob","XMLSerializer","serializeToString","image","Image","context","getContext","onload","drawImage","revokeObjectURL","PdfDocument","imageString","toDataURL","pageSettings","pages","add","graphics","PdfBitmap","save","src","ImageExport","isDownload","svgData","outerHTML","triggerDownload","image_1","context_1","download","toLocaleLowerCase","dispatchEvent","MouseEvent","view","bubbles","cancelable","Print","print","elements","printWindow","open","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","htmlContent","getHTMLContent","beforePrintArgs","div","forEach","Element","ColorStop","GradientPosition","LinearGradient","RadialGradient","Gradient","calculateLinearGradientPosition","x1","x2","y1","y2","getLinearGradientColor","colors","getCircularGradientColor","getGradientColor","gradientCount","gradientPosition","def","drawGradient","getRadialGradientColor","outerPosition","fx","innerPosition","fy","CircularGauge","isRangeUpdate","preRender","unWireEvents","initPrivateVariable","setCulture","createSvg","wireEvents","setTheme","calculateBounds","renderElements","renderComplete","titleFontColor","titleFontWeight","fontSize","getThemeStyle","EventHandler","touchStartEvent","gaugeOnMouseDown","mouseMove","mouseEnd","gaugeOnMouseClick","gaugeRightClick","isPointer","mouseLeave","isTouch","gaugeResize","setGaugeStyle","setMouseXY","legendModule","getMouseArgs","dragArgs","tooltipModule","enableRangeDrag","svgElement","activePointer","dragPointInd","dragAxisInd","activeAxis","pointerDrag","activeRange","dragRangeInd","rangeDrag","notify","buttons","pointerType","preventDefault","stopPropagation","gaugeAxisLayoutPanel","previousValue1","avg","pointInd","axisInd","rangeInd","pointerInd","clientX","clientY","previousSize","currentSize","calculateSvgSize","classList","contains","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","Internationalization","removeSvg","removeChild","firstChild","hasChildNodes","parentNode","collection","containerWidth","containerHeight","offsetHeight","borderWidth","join","radiusAndCenterCalculation","titleHeight","isUpperAngle","isLowerAngle","isFullPercent","radiusPercent","isUpper","isLower","widthRadius","centerX","centerY","allowMargin","heightValue","heightRadius","difference","title","titleStyle","renderBorder","renderTitle","titleSize","Number","tabIndex","isProtectedOnChange","setAnnotationValue","isElementExist","secondaryElement","allowPrint","printModule","allowPdfExport","pdfExportModule","allowImageExport","imageExportModule","svgRect","setRangeValue","axisRange","oldRangeStart","oldRangeEnd","requiredModules","modules","annotationEnable","member","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","refreshBounds","refreshWithoutAnimation","isPointerValueSame","keys","Event","NotifyPropertyChanges","Component"],"mappings":"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"}