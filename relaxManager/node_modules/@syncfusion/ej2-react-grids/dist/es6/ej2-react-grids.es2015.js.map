{"version":3,"file":"ej2-react-grids.es2015.js","sources":["../src/es6/grid/columns-directive.js","../src/es6/grid/stacked-column-directive.js","../src/es6/grid/aggregates-directive.js","../src/es6/grid/aggregate-columns-directive.js","../src/es6/grid/grid.component.js","../src/es6/pager/pager.component.js"],"sourcesContent":["import { ComplexBase } from '@syncfusion/ej2-react-base';\n/**\n * `ColumnDirective` represent a column of the react Grid.\n * It must be contained in a Grid component(`GridComponent`).\n * ```tsx\n * <GridComponent dataSource={data} allowPaging={true} allowSorting={true}>\n * <ColumnsDirective>\n * <ColumnDirective field='ID' width='100'></ColumnDirective>\n * <ColumnDirective field='name' headerText='Name' width='100'></ColumnDirective>\n * <ColumnsDirective>\n * </GridComponent>\n * ```\n */\nexport class ColumnDirective extends ComplexBase {\n}\nColumnDirective.moduleName = 'column';\nColumnDirective.complexTemplate = { 'filterItemTemplate': 'filter.itemTemplate' };\nexport class ColumnsDirective extends ComplexBase {\n}\nColumnsDirective.propertyName = 'columns';\nColumnsDirective.moduleName = 'columns';\n","import { ComplexBase } from '@syncfusion/ej2-react-base';\nexport class StackedColumnDirective extends ComplexBase {\n}\nStackedColumnDirective.moduleName = 'stackedColumn';\nStackedColumnDirective.complexTemplate = { 'filterItemTemplate': 'filter.itemTemplate' };\nexport class StackedColumnsDirective extends ComplexBase {\n}\nStackedColumnsDirective.propertyName = 'columns';\nStackedColumnsDirective.moduleName = 'stackedColumns';\n","import { ComplexBase } from '@syncfusion/ej2-react-base';\n/**\n * `AggregateDirective` represent a aggregate row of the react Grid.\n * It must be contained in a Grid component(`GridComponent`).\n * ```tsx\n * <GridComponent dataSource={data} allowPaging={true} allowSorting={true}>\n * <ColumnsDirective>\n * <ColumnDirective field='ID' width='100'></ColumnDirective>\n * <ColumnDirective field='name' headerText='Name' width='100'></ColumnDirective>\n * </ColumnsDirective>\n * <AggregatesDirective>\n * <AggregateDirective>\n * <AggregateColumnsDirective>\n * <AggregateColumnDirective field='ID' type='Min'></AggregateColumnsDirective>\n * </<AggregateColumnsDirective>\n* </AggregateDirective>\n * </AggregatesDirective>\n * </GridComponent>\n * ```\n */\nexport class AggregateDirective extends ComplexBase {\n}\nAggregateDirective.moduleName = 'aggregate';\nexport class AggregatesDirective extends ComplexBase {\n}\nAggregatesDirective.propertyName = 'aggregates';\nAggregatesDirective.moduleName = 'aggregates';\n","import { ComplexBase } from '@syncfusion/ej2-react-base';\n/**\n * `AggregateColumnDirective represent a aggregate column of the react Grid.\n * ```tsx\n * <GridComponent dataSource={data} allowPaging={true} allowSorting={true}>\n * <ColumnsDirective>\n * <ColumnDirective field='ID' width='100'></ColumnDirective>\n * <ColumnDirective field='name' headerText='Name' width='100'></ColumnDirective>\n * </ColumnsDirective>\n * <AggregatesDirective>\n * <AggregateDirective>\n * <AggregateColumnsDirective>\n * <AggregateColumnDirective field='ID' type='Min'></AggregateColumnsDirective>\n * </AggregateColumnsDirective>\n * </AggregateDirective>\n * </AggregatesDirective>\n * </GridComponent>\n * ```\n */\nexport class AggregateColumnDirective extends ComplexBase {\n}\nAggregateColumnDirective.moduleName = 'aggregateColumn';\nexport class AggregateColumnsDirective extends ComplexBase {\n}\nAggregateColumnsDirective.propertyName = 'columns';\nAggregateColumnsDirective.moduleName = 'aggregateColumns';\n","import * as React from 'react';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { ComponentBase, applyMixins } from '@syncfusion/ej2-react-base';\n/**\n * `GridComponent` represents the react Grid.\n * ```tsx\n * <GridComponent dataSource={data} allowPaging={true} allowSorting={true}/>\n * ```\n */\nexport class GridComponent extends Grid {\n    constructor(props) {\n        super(props);\n        this.initRenderCalled = false;\n        this.checkInjectedModules = true;\n        this.directivekeys = { 'columns': { 'column': { 'stackedColumns': 'stackedColumn' } }, 'aggregates': { 'aggregate': { 'aggregateColumns': 'aggregateColumn' } } };\n        this.immediateRender = false;\n        this.portals = [];\n    }\n    render() {\n        if (((this.element && !this.initRenderCalled) || this.refreshing) && !this.isReactForeceUpdate) {\n            super.render();\n            this.initRenderCalled = true;\n        }\n        else {\n            return React.createElement('div', this.getDefaultAttributes(), [].concat(this.props.children, this.portals));\n        }\n    }\n}\napplyMixins(GridComponent, [ComponentBase, React.Component]);\n","import * as React from 'react';\nimport { Pager } from '@syncfusion/ej2-grids';\nimport { ComponentBase, applyMixins } from '@syncfusion/ej2-react-base';\n/**\n * `PagerComponent` represents the react Pager.\n * ```tsx\n * <PagerComponent/>\n * ```\n */\nexport class PagerComponent extends Pager {\n    constructor(props) {\n        super(props);\n        this.initRenderCalled = false;\n        this.checkInjectedModules = false;\n        this.immediateRender = false;\n        this.portals = [];\n    }\n    render() {\n        if (((this.element && !this.initRenderCalled) || this.refreshing) && !this.isReactForeceUpdate) {\n            super.render();\n            this.initRenderCalled = true;\n        }\n        else {\n            return React.createElement('div', this.getDefaultAttributes(), [].concat(this.props.children, this.portals));\n        }\n    }\n}\napplyMixins(PagerComponent, [ComponentBase, React.Component]);\n"],"names":["React.createElement","React.Component"],"mappings":"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"}